version: '3'
services:
  ngrok:
    build: ./ngrok
    container_name: ngrok
    ports:
      - "4040:4040"  # Expose ngrok's local web UI for inspection (optional)
    environment:
      - NGROK_AUTH_TOKEN=2qNdZosMDVnwxHqSGboqmwvMAnU_255r8dcJ33XuERDghSPaV # Optional, if you have a paid account
  # ngrok:
  #   image: ngrok/ngrok:alpine
  #   environment:
  #     - NGROK_AUTHTOKEN=2qNdZosMDVnwxHqSGboqmwvMAnU_255r8dcJ33XuERDghSPaV
  #   # ports : "4040:4040"
  #   command: http 8000 "--log" "/tmp/ngrok.log"
  #   # network_mode: "host"

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    depends_on:
      - db
      - ngrok
    environment:
      - DATABASE_URL=postgres://user:password@db:5432/dbname
      - REACT_APP_API_URL=http://ngrok:4040  # Point to ngrok container

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://ngrok:4040  # Point to ngrok container

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "80:80" # Access pgAdmin via localhost:80
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  pgdata:
  pgadmin_data:
