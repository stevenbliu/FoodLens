version: '3'
services:
  # static-site:
  #   image: dockersamples/static-site
  #   build: ./static-site
  #   ports:
  #     - "8000:80"
  #   restart: always

  ngrok:
    image: ngrok/ngrok:latest
    command:
      - "http"
      # - "http://host.docker.internal:8000"  # Pointing to the backend service on port 8000
      - "http://backend:8000"
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    ports:
      - "4040:4040"
    # depends_on:
      # - static-site

  backend:
    build: ./backend
    # volumes:
      # - ./backend:/app
      # - ./backend:/photo_handler

    ports:
      - "8000:8000"
    depends_on:
      - db
      - ngrok
    environment:
      - DATABASE_URL=postgres://user:password@db:5432/dbname
      - REACT_APP_API_URL=http://backend:8000  # Use internal backend service
      # - NGROK_API=http://ngrok:4040/api/tunnels
    env_file:
      - ./.env

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
      - ngrok
    environment:
      - REACT_APP_API_URL=http://backend:8000  # Use internal backend service
      # - CHOKIDAR_USEPOLLING=true
    # volumes:
      # - ./frontend:/src
      # - ./frontend:/app

    # working_dir: /frontend

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  pgdata:
  pgadmin_data:
