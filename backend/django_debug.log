Internal Server Error: /photo-handler/sns_endpoint/
Traceback (most recent call last):
  File "C:\Users\Steven\GitHub\Food_Identifier\backend\photo_handler\views.py", line 152, in sns_endpoint
    filename = parsed_message['object_key'],  # Filename as saved in S3
               ~~~~~~~~~~~~~~^^^^^^^^^^^^^^
TypeError: string indices must be integers, not 'str'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Steven\anaconda3\envs\food_identifier\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Steven\anaconda3\envs\food_identifier\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Steven\anaconda3\envs\food_identifier\Lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Steven\GitHub\Food_Identifier\backend\photo_handler\views.py", line 160, in sns_endpoint
    except IntegrityError as e:
           ^^^^^^^^^^^^^^
NameError: name 'IntegrityError' is not defined. Did you mean: 'InterruptedError'?
"POST /photo-handler/sns_endpoint/ HTTP/1.1" 500 87136
Internal Server Error: /photo-handler/sns_endpoint/
Traceback (most recent call last):
  File "C:\Users\Steven\GitHub\Food_Identifier\backend\photo_handler\views.py", line 152, in sns_endpoint
    filename = parsed_message['object_key'],  # Filename as saved in S3
               ~~~~~~~~~~~~~~^^^^^^^^^^^^^^
TypeError: string indices must be integers, not 'str'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Steven\anaconda3\envs\food_identifier\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Steven\anaconda3\envs\food_identifier\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Steven\anaconda3\envs\food_identifier\Lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Steven\GitHub\Food_Identifier\backend\photo_handler\views.py", line 160, in sns_endpoint
    except IntegrityError as e:
           ^^^^^^^^^^^^^^
NameError: name 'IntegrityError' is not defined. Did you mean: 'InterruptedError'?
"POST /photo-handler/sns_endpoint/ HTTP/1.1" 500 87137
Internal Server Error: /photo-handler/sns_endpoint/
Traceback (most recent call last):
  File "C:\Users\Steven\GitHub\Food_Identifier\backend\photo_handler\views.py", line 151, in sns_endpoint
    filename = parsed_message['object_key'],  # Filename as saved in S3
               ~~~~~~~~~~~~~~^^^^^^^^^^^^^^
TypeError: string indices must be integers, not 'str'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Steven\anaconda3\envs\food_identifier\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Steven\anaconda3\envs\food_identifier\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Steven\anaconda3\envs\food_identifier\Lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Steven\GitHub\Food_Identifier\backend\photo_handler\views.py", line 159, in sns_endpoint
    except IntegrityError as e:
           ^^^^^^^^^^^^^^
NameError: name 'IntegrityError' is not defined. Did you mean: 'InterruptedError'?
"POST /photo-handler/sns_endpoint/ HTTP/1.1" 500 87137
Internal Server Error: /photo-handler/sns_endpoint/
Traceback (most recent call last):
  File "C:\Users\Steven\GitHub\Food_Identifier\backend\photo_handler\views.py", line 151, in sns_endpoint
    filename = parsed_message['object_key'],  # Filename as saved in S3
               ~~~~~~~~~~~~~~^^^^^^^^^^^^^^
TypeError: string indices must be integers, not 'str'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Steven\anaconda3\envs\food_identifier\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Steven\anaconda3\envs\food_identifier\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Steven\anaconda3\envs\food_identifier\Lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Steven\GitHub\Food_Identifier\backend\photo_handler\views.py", line 159, in sns_endpoint
    except IntegrityError as e:
           ^^^^^^^^^^^^^^
NameError: name 'IntegrityError' is not defined. Did you mean: 'InterruptedError'?
"POST /photo-handler/sns_endpoint/ HTTP/1.1" 500 87137
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=NE8LT8VN9UsevpuJQq0pY6336pU%3D&content-type=image%2Fpng&Expires=1735360047
Photo metadata saved successfully: 23
Internal Server Error: /photos/upload-notification/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: SNSNotificationHandlerView.post() missing 1 required positional argument: 'id'
"POST /photos/upload-notification/ HTTP/1.1" 500 83772
Internal Server Error: /photos/upload-notification/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: SNSNotificationHandlerView.post() missing 1 required positional argument: 'id'
"POST /photos/upload-notification/ HTTP/1.1" 500 83772
Internal Server Error: /photos/upload-notification/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: SNSNotificationHandlerView.post() missing 1 required positional argument: 'id'
"POST /photos/upload-notification/ HTTP/1.1" 500 83772
Invalid SNS message type: None
Invalid SNS message type: None
Internal Server Error: /photos/upload-notification/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 101, in post
    return Response({"error": f"Invalid SNS message type - {message}" }, status=status.HTTP_400_BAD_REQUEST)
                                                            ^^^^^^^
UnboundLocalError: cannot access local variable 'message' where it is not associated with a value
"POST /photos/upload-notification/ HTTP/1.1" 500 88483
Invalid SNS message type: None
Internal Server Error: /photos/upload-notification/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 101, in post
    return Response({"error": f"Invalid SNS message type - {message}" }, status=status.HTTP_400_BAD_REQUEST)
                                                            ^^^^^^^
UnboundLocalError: cannot access local variable 'message' where it is not associated with a value
"POST /photos/upload-notification/ HTTP/1.1" 500 88483
Invalid SNS message type: None
Internal Server Error: /photos/upload-notification/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 101, in post
    return Response({"error": f"Invalid SNS message type - {message}" }, status=status.HTTP_400_BAD_REQUEST)
                                                            ^^^^^^^
UnboundLocalError: cannot access local variable 'message' where it is not associated with a value
"POST /photos/upload-notification/ HTTP/1.1" 500 88483
Invalid SNS message type: None
Internal Server Error: /photos/upload-notification/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 101, in post
    return Response({"error": f"Invalid SNS message type - {message}" }, status=status.HTTP_400_BAD_REQUEST)
                                                            ^^^^^^^
UnboundLocalError: cannot access local variable 'message' where it is not associated with a value
"POST /photos/upload-notification/ HTTP/1.1" 500 88483
Invalid SNS message type: None
Internal Server Error: /photos/upload-notification/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 101, in post
    return Response({"error": f"Invalid SNS message type - {message}" }, status=status.HTTP_400_BAD_REQUEST)
                                                            ^^^^^^^
UnboundLocalError: cannot access local variable 'message' where it is not associated with a value
"POST /photos/upload-notification/ HTTP/1.1" 500 88483
Invalid SNS message type: None
Internal Server Error: /photos/upload-notification/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 101, in post
    return Response({"error": f"Invalid SNS message type - {message}" }, status=status.HTTP_400_BAD_REQUEST)
                                                            ^^^^^^^
UnboundLocalError: cannot access local variable 'message' where it is not associated with a value
"POST /photos/upload-notification/ HTTP/1.1" 500 88483
Invalid SNS message type: None
Internal Server Error: /photos/upload-notification/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 101, in post
    return Response({"error": f"Invalid SNS message type - {message}" }, status=status.HTTP_400_BAD_REQUEST)
                                                            ^^^^^^^
UnboundLocalError: cannot access local variable 'message' where it is not associated with a value
"POST /photos/upload-notification/ HTTP/1.1" 500 88483
Invalid SNS message type: None
Internal Server Error: /photos/upload-notification/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 101, in post
    return Response({"error": f"Invalid SNS message type - {message}" }, status=status.HTTP_400_BAD_REQUEST)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'message' where it is not associated with a value
"POST /photos/upload-notification/ HTTP/1.1" 500 88487
Invalid SNS message type: None
Internal Server Error: /photos/upload-notification/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 101, in post
    return Response({"error": f"Invalid SNS message type - {message}" }, status=status.HTTP_400_BAD_REQUEST)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'message' where it is not associated with a value
"POST /photos/upload-notification/ HTTP/1.1" 500 88487
Invalid SNS message type: None
Internal Server Error: /photos/upload-notification/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 101, in post
    return Response({"error": f"Invalid SNS message type - {message}" }, status=status.HTTP_400_BAD_REQUEST)
                                                            ^^^^^^^
UnboundLocalError: cannot access local variable 'message' where it is not associated with a value
"POST /photos/upload-notification/ HTTP/1.1" 500 88483
Invalid SNS message type: None
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=Trj8tm8K5S74g8CVGTdL1NBEkKE%3D&content-type=image%2Fpng&Expires=1735494752
Photo metadata saved successfully: 24
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://2815-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://2815-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://2815-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://2815-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=JBdtSjwQxVOmLiyc9Y74qMyLNZk%3D&content-type=image%2Fpng&Expires=1735495135
Photo metadata saved successfully: 25
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://2815-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=EWJIRjNCScW5q8hBiVq70pKDM%2B8%3D&content-type=image%2Fpng&Expires=1735496039
Photo metadata saved successfully: 26
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=KlBJCqK78lcpc1aX3BY%2BDw8L0SA%3D&content-type=image%2Fpng&Expires=1735496045
Photo metadata saved successfully: 27
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=YSel90Tickrg1qP25LsQ5thFtkg%3D&content-type=image%2Fpng&Expires=1735496243
Photo metadata saved successfully: 30
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://2815-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://2815-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://2815-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: 
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://92a6-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://92a6-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://92a6-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=LRINc%2BuO8w%2FiWwmKjpacV7T9su4%3D&content-type=image%2Fpng&Expires=1735499327
Photo metadata saved successfully: 39
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=kHZT7weK7%2FhwWCbfgHRDLvB5HZE%3D&content-type=image%2Fpng&Expires=1735499332
Photo metadata saved successfully: 40
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://92a6-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://92a6-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://92a6-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://92a6-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://92a6-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://92a6-76-126-145-131.ngrok-free.app/photos/upload-notification/
suscribe to sns
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://92a6-76-126-145-131.ngrok-free.app/photos/upload-notification/
suscribe to sns
Successfully subscribed to SNS topic
Retrieving photo metadata for photo ID: 11
Photo metadata retrieved: 11
Retrieving photo metadata for photo ID: 11
Photo metadata retrieved: 11
Retrieving photo metadata for photo ID: 11
Photo metadata retrieved: 11
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: 
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://92a6-76-126-145-131.ngrok-free.app/photos/upload-notification/
suscribe to sns
Successfully subscribed to SNS topic
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
suscribe to sns
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
suscribe to sns
Successfully subscribed to SNS topic
Retrieving photo metadata for photo ID: 11
Photo metadata retrieved: 11
Retrieving photo metadata for photo ID: 11
Photo metadata retrieved: 11
Retrieving photo metadata for photo ID: 11
Photo metadata retrieved: 11
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=1z%2BXCL0WNamXWpiG8Xuz2BuU38A%3D&content-type=image%2Fpng&Expires=1735508203
Photo metadata saved successfully: 62
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=himzvaU7%2BXrX938CQX5Tu%2BQb0xI%3D&content-type=image%2Fpng&Expires=1735508207
Photo metadata saved successfully: 63
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
suscribe to sns
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
suscribe to sns
Successfully subscribed to SNS topic
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
suscribe to sns
Successfully subscribed to SNS topic
Retrieving photo metadata for photo ID: 11
Photo metadata retrieved: 11
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Received SNS Notification:  None
Invalid SNS message type: None
Received SNS Notification:  None
Invalid SNS message type: None
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Received SNS Notification:  None
Invalid SNS message type: None
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=eObc5YRimPe9Bpiz8iWZUQyd%2FXw%3D&content-type=image%2Fpng&Expires=1735509153
Photo metadata saved successfully: 68
Received SNS Notification:  None
Invalid SNS message type: None
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Received SNS Notification:  None
Invalid SNS message type: None
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=zSpmnTZEjKfpS7KSjIB4Tt7%2BBDI%3D&content-type=image%2Fpng&Expires=1735509161
Photo metadata saved successfully: 69
Received SNS Notification:  None
Invalid SNS message type: None
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=aKnAzTvpJ7dlna1bEfX3en4ou6Q%3D&content-type=image%2Fpng&Expires=1735509170
Photo metadata saved successfully: 70
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Received SNS Notification:  None
Invalid SNS message type: None
Received SNS Notification:  None
Invalid SNS message type: None
Received SNS Notification:  None
Invalid SNS message type: None
Received SNS Notification:  None
Invalid SNS message type: None
Received SNS Notification:  None
Invalid SNS message type: None
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Received SNS Notification:  None
Invalid SNS message type: None
Received SNS Notification:  None
Invalid SNS message type: None
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=8lAsu1kgBVtjt%2B0qu%2FGVQlwPT4I%3D&content-type=image%2Fpng&Expires=1735509734
Photo metadata saved successfully: 72
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Received SNS Notification:  None
Invalid SNS message type: None
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Retrieving photo metadata for photo ID: 11
Photo metadata retrieved: 11
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Received SNS Notification:  None
Invalid SNS message type: None
Received SNS Notification:  None
Invalid SNS message type: None
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=Bj1%2Bj7jZ6ZV51bxDyLZe0E1kpJk%3D&content-type=image%2Fpng&Expires=1735510035
Photo metadata saved successfully: 74
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=%2Fh3ofAtUxT2IjkA4lFEnE1xWrx4%3D&content-type=image%2Fpng&Expires=1735510579
Photo metadata saved successfully: 75
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=XvIYkHK%2FnYjRcVqNQAlcSm%2B8fmI%3D&content-type=image%2Fpng&Expires=1735510582
Photo metadata saved successfully: 76
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=Xe4J1Q%2BWSsuOy%2FXYx0Fr3ulo%2FvA%3D&content-type=image%2Fpng&Expires=1735510584
Photo metadata saved successfully: 77
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=%2B81AfGEX7WHXUwtPJ5CNvNwB2ls%3D&content-type=image%2Fpng&Expires=1735510586
Photo metadata saved successfully: 78
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=4akt7SFAB32TMdAtord7EwGUSzU%3D&content-type=image%2Fpng&Expires=1735510587
Photo metadata saved successfully: 79
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Received SNS Notification:  None
Invalid SNS message type: None
Received SNS Notification:  None
Invalid SNS message type: None
Received SNS Notification:  None
Invalid SNS message type: None
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Retrieving photo metadata for photo ID: 11
Photo metadata retrieved: 11
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=MqWW0KQFXu31OGpA%2FtC8TDwsgRs%3D&content-type=image%2Fpng&Expires=1735510611
Photo metadata saved successfully: 81
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=hv57FN4RYMX7jdSFriVdAV4lh%2FY%3D&content-type=image%2Fpng&Expires=1735510702
Photo metadata saved successfully: 83
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=vkG1lG26myPEX8OzjZ1a2Li2Q1k%3D&content-type=image%2Fpng&Expires=1735510705
Photo metadata saved successfully: 84
Retrieving photo metadata for photo ID: 11
Photo metadata retrieved: 11
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Received SNS Notification: POST
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=Osvoln1pVC8NPQo3nHbkPwQQidU%3D&content-type=image%2Fpng&Expires=1735511616
Photo metadata saved successfully: 91
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Received SNS Notification: POST
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Received SNS Notification: POST
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Received SNS Notification: POST
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Received SNS Notification: POST
Error processing SNS notification: Unsupported media type "text/plain; charset=UTF-8" in request.
Internal Server Error: /photos/upload-notification/
"POST /photos/upload-notification/ HTTP/1.1" 500 46
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Received SNS Notification: POST
Received SNS Notification: SubscriptionConfirmation
Subscription Confirmation
Subscription confirmed successfully
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=HmoBxhPLbAqWIFml%2BauBBX2VLYg%3D&content-type=image%2Fpng&Expires=1735512142
Photo metadata saved successfully: 98
Received SNS Notification: POST
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:42:23.157Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"B1N0RC845CYDQCDH","x-amz-id-2":"jPokYmsOk5h4EAmsZtxk50tIrdI4VSFM6Z565kePb6aokCRh1mBth/coxV9t3WjC2ozTm86R0b/iCWSnNYAh7M77W6FELTDb"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C23F20176CA5"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:42:23.157Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'B1N0RC845CYDQCDH', 'x-amz-id-2': 'jPokYmsOk5h4EAmsZtxk50tIrdI4VSFM6Z565kePb6aokCRh1mBth/coxV9t3WjC2ozTm86R0b/iCWSnNYAh7M77W6FELTDb'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C23F20176CA5'}}}]}
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=IqpYq%2BlAK7DEbSO%2FHKF38fUKffE%3D&content-type=image%2Fpng&Expires=1735512149
Photo metadata saved successfully: 99
Received SNS Notification: POST
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:42:30.074Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"ZDJWRQVYPH696E0J","x-amz-id-2":"51FR38EIupr8TFMrIFGc2xeSJ4A0IaRr/bHt9BGbAQWglaoI1BcfskGdnN2cFUg2gMhf/2SPbV1mvpWGDmMyYuVP4HtAJKBP"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C2460B711C64"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:42:30.074Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'ZDJWRQVYPH696E0J', 'x-amz-id-2': '51FR38EIupr8TFMrIFGc2xeSJ4A0IaRr/bHt9BGbAQWglaoI1BcfskGdnN2cFUg2gMhf/2SPbV1mvpWGDmMyYuVP4HtAJKBP'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C2460B711C64'}}}]}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/upload-notification/
Successfully subscribed to SNS topic
Received SNS Notification: POST
Received SNS Notification: SubscriptionConfirmation
Subscription Confirmation
Subscription confirmed successfully
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/notifications/
Successfully subscribed to SNS topic
SNSNotificationHandlerView received POST Request
Received SNS Notification: SubscriptionConfirmation
Subscription Confirmation
Subscription confirmed successfully
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=xf3ZiUmq2aHt%2FOZmrgO0QoUyqPY%3D&content-type=image%2Fpng&Expires=1735512870
Photo metadata saved successfully: 102
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:54:31.772Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"5D6PAYAE6EHA0P5B","x-amz-id-2":"fe5x7yP2LBsYmCF1OQm/IC/iad0WROcOZN34AFemRe42it8+nFkL1Ev7Onf1gmFkReAIITML46Sml/APPpig0bmIMJFsKsdL"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C517BAA06DD9"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:54:31.772Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '5D6PAYAE6EHA0P5B', 'x-amz-id-2': 'fe5x7yP2LBsYmCF1OQm/IC/iad0WROcOZN34AFemRe42it8+nFkL1Ev7Onf1gmFkReAIITML46Sml/APPpig0bmIMJFsKsdL'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C517BAA06DD9'}}}]}
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=vvkRCXJ5Qt7GCFj5iyggKkXgfp0%3D&content-type=image%2Fpng&Expires=1735512878
Photo metadata saved successfully: 103
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:54:39.270Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"SSH1T42DD4SCPCEH","x-amz-id-2":"XP2z4QA4iQKgCbFiVWvJJFXlQhG7Gptz/byhuHfiXYgcApWzPPMfSet1BQeRSu3ejfXQcG5YOcwdA2ZnaNqFLFU/uk8+FcDM"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C51F3D232A80"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:54:39.270Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'SSH1T42DD4SCPCEH', 'x-amz-id-2': 'XP2z4QA4iQKgCbFiVWvJJFXlQhG7Gptz/byhuHfiXYgcApWzPPMfSet1BQeRSu3ejfXQcG5YOcwdA2ZnaNqFLFU/uk8+FcDM'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C51F3D232A80'}}}]}
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=0pW0kPYkPCrWvrcZJu19FMqv2oE%3D&content-type=image%2Fpng&Expires=1735512884
Photo metadata saved successfully: 104
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:54:44.782Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"M7F54JFTS802CW62","x-amz-id-2":"9ag2h73H8Vn1x9qVB6i1XeUMtHIIgxqPcXHXuXuVEiMZDxOu1/KKkmLvaQ7Wmr5MkCFw9/di1M2BhGQqU+V/BFxHDkpyWGxx"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C524BF51A4A7"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:54:44.782Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'M7F54JFTS802CW62', 'x-amz-id-2': '9ag2h73H8Vn1x9qVB6i1XeUMtHIIgxqPcXHXuXuVEiMZDxOu1/KKkmLvaQ7Wmr5MkCFw9/di1M2BhGQqU+V/BFxHDkpyWGxx'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C524BF51A4A7'}}}]}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/notifications/
Successfully subscribed to SNS topic
SNSNotificationHandlerView received POST Request
Received SNS Notification: SubscriptionConfirmation
Subscription Confirmation
Subscription confirmed successfully
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=8yG5cs2TnxEG6XPWGB0axtQEq%2Bo%3D&content-type=image%2Fpng&Expires=1735512890
Photo metadata saved successfully: 105
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:54:51.262Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"08DMB0M6XTMQRDW5","x-amz-id-2":"4SI3sS4KUHb8oNd79DSp33rkXqoiD/oxH7IX1alslLlJ8iyszVXbVFIkwHGNFh+ReoqIwVJZSQpbhiPgfYIUSgU562Lf6If6"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C52B373A31E5"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:54:51.262Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '08DMB0M6XTMQRDW5', 'x-amz-id-2': '4SI3sS4KUHb8oNd79DSp33rkXqoiD/oxH7IX1alslLlJ8iyszVXbVFIkwHGNFh+ReoqIwVJZSQpbhiPgfYIUSgU562Lf6If6'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C52B373A31E5'}}}]}
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=8USSsktXU%2Fs2DuBfrwdmXMOs4jU%3D&content-type=image%2Fpng&Expires=1735512908
Photo metadata saved successfully: 106
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:55:09.688Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"XPVPXX3JQZFWDSKE","x-amz-id-2":"H4ulLEU2d0yo1Rgd7yNKtE6uE1AuOGde0Ysn2WO0DjRrkISZ3jpN3KHvW7wm3SltWkmm/DKG+q0cgZVRQoH1hyV4z20stTGR"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C53DA57DA78C"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:55:09.688Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'XPVPXX3JQZFWDSKE', 'x-amz-id-2': 'H4ulLEU2d0yo1Rgd7yNKtE6uE1AuOGde0Ysn2WO0DjRrkISZ3jpN3KHvW7wm3SltWkmm/DKG+q0cgZVRQoH1hyV4z20stTGR'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C53DA57DA78C'}}}]}
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=5JlLAZGkGbGcBUsd4%2BymOB81bAo%3D&content-type=image%2Fpng&Expires=1735512917
Photo metadata saved successfully: 107
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:55:18.935Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"5YQPKR6ENKQB1GWM","x-amz-id-2":"5U8wzIfywWkO4UVBIUHW/IkRBImkP3B16kMeeC+is8kBCKLRfWuTkOBgdKU2277912ViF8MBVK+Iv8W82HCQBng1pitZes3A"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C546E3303A17"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:55:18.935Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '5YQPKR6ENKQB1GWM', 'x-amz-id-2': '5U8wzIfywWkO4UVBIUHW/IkRBImkP3B16kMeeC+is8kBCKLRfWuTkOBgdKU2277912ViF8MBVK+Iv8W82HCQBng1pitZes3A'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C546E3303A17'}}}]}
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=el7RSJ0YSaTZjpvTldUEgmnKYgI%3D&content-type=image%2Fpng&Expires=1735512934
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=el7RSJ0YSaTZjpvTldUEgmnKYgI%3D&content-type=image%2Fpng&Expires=1735512934
Photo metadata saved successfully: 108
Photo metadata saved successfully: 109
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=VpuYqpv%2BpbqxZUa9xFaNzKTAEpY%3D&content-type=image%2Fpng&Expires=1735512935
Photo metadata saved successfully: 110
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:55:35.704Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"S07FRFNHRTNETFGX","x-amz-id-2":"EWqHPFSuOjI1O5XXsfvhMqb2g7YE7wC6/8yu/HqwZPnVjQzsg3MOpLRFqmRMMBD77+9vGO9dyYySJcOWbeExdYiZuj+zpH03"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C557A93BD617"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:55:35.704Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'S07FRFNHRTNETFGX', 'x-amz-id-2': 'EWqHPFSuOjI1O5XXsfvhMqb2g7YE7wC6/8yu/HqwZPnVjQzsg3MOpLRFqmRMMBD77+9vGO9dyYySJcOWbeExdYiZuj+zpH03'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C557A93BD617'}}}]}
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:55:35.903Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"S075W43TQGZKM64K","x-amz-id-2":"tiy6Z9kcAHnoWv3I9X3QY7v0JaYxPaE2nUSndfCOrkqsAXsXqWyC6paF/Nyuy1U+UhizP9DKQvVhSDWkjuDIAEp6SvxIx7HG"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C557DD33A54E"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:55:35.903Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'S075W43TQGZKM64K', 'x-amz-id-2': 'tiy6Z9kcAHnoWv3I9X3QY7v0JaYxPaE2nUSndfCOrkqsAXsXqWyC6paF/Nyuy1U+UhizP9DKQvVhSDWkjuDIAEp6SvxIx7HG'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C557DD33A54E'}}}]}
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=lFSEuGV8sivO6eOPfx1MXZXSk2s%3D&content-type=image%2Fpng&Expires=1735512942
Photo metadata saved successfully: 111
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=lFSEuGV8sivO6eOPfx1MXZXSk2s%3D&content-type=image%2Fpng&Expires=1735512942
Photo metadata saved successfully: 112
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=8sZDpt4p2PdSuPZNqwL8Q5Fr%2BoA%3D&content-type=image%2Fpng&Expires=1735512943
Photo metadata saved successfully: 113
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:55:43.178Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"XR7XB09C9F0KNP4T","x-amz-id-2":"wAvq481BVhhiaYHPxVgL2AWQ2mrDymVipFD7yn8Z/3bRWHNZLre7Vr3G8WWSAefohx3cKctQg4/DHz5c5Fv/IoXVcklHTZW6"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C55F25684CFE"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:55:43.178Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'XR7XB09C9F0KNP4T', 'x-amz-id-2': 'wAvq481BVhhiaYHPxVgL2AWQ2mrDymVipFD7yn8Z/3bRWHNZLre7Vr3G8WWSAefohx3cKctQg4/DHz5c5Fv/IoXVcklHTZW6'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C55F25684CFE'}}}]}
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:55:43.926Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"XR7JHS7GQBBCVTND","x-amz-id-2":"/oQ/xtqtp2Pvsq6i7rtbP3SRvlSyIPDJivnwJjQZuM6GoOBc8N2dpf3QgBR3iprkNBIRgMJJJOyuPgmATk/NrOX3rQ46ce5z"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C55FE2D7DF51"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:55:43.926Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'XR7JHS7GQBBCVTND', 'x-amz-id-2': '/oQ/xtqtp2Pvsq6i7rtbP3SRvlSyIPDJivnwJjQZuM6GoOBc8N2dpf3QgBR3iprkNBIRgMJJJOyuPgmATk/NrOX3rQ46ce5z'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C55FE2D7DF51'}}}]}
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:55:43.562Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"XR7MC0Z74KRNG8W7","x-amz-id-2":"B4hNEBmJLGwtwo3sNh0+IV7flir/bnOaQAWaWTgH6p2XF+7kJZ2H9nTUqEc6OL4C6KejelOQUP2tjsI7cAjjN2ZmHrRGyNWj"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C55F87E0CE77"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:55:43.562Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'XR7MC0Z74KRNG8W7', 'x-amz-id-2': 'B4hNEBmJLGwtwo3sNh0+IV7flir/bnOaQAWaWTgH6p2XF+7kJZ2H9nTUqEc6OL4C6KejelOQUP2tjsI7cAjjN2ZmHrRGyNWj'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C55F87E0CE77'}}}]}
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=%2FRV%2BCI7PU01CphzG%2BEPgQ9wn74w%3D&content-type=image%2Fpng&Expires=1735512954
Photo metadata saved successfully: 114
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=%2FRV%2BCI7PU01CphzG%2BEPgQ9wn74w%3D&content-type=image%2Fpng&Expires=1735512954
Photo metadata saved successfully: 115
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=%2FRV%2BCI7PU01CphzG%2BEPgQ9wn74w%3D&content-type=image%2Fpng&Expires=1735512954
Photo metadata saved successfully: 116
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
SNSNotificationHandlerView received POST Request
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:55:55.631Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"MG1C7FCYWF835VJB","x-amz-id-2":"BLpD1wuxJMxDAm42TNi9f/NsMLr0xoWJP8rmQustVPPAJwGpeFP9iu8FxC3rhrMX0QLiPwAPlb0Wgr0QKafZbXDmr03ZvKxS"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C56B980154A9"}}}]}
Received SNS Notification: Notification
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:55:55.631Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'MG1C7FCYWF835VJB', 'x-amz-id-2': 'BLpD1wuxJMxDAm42TNi9f/NsMLr0xoWJP8rmQustVPPAJwGpeFP9iu8FxC3rhrMX0QLiPwAPlb0Wgr0QKafZbXDmr03ZvKxS'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C56B980154A9'}}}]}
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:55:55.552Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"MG19E5ZZZMKHJ3T0","x-amz-id-2":"la5JwFL7QZ76xVh7P9uszVlsbuM0RLJrgpDrLSL3kg9VP23ZsTFSZcNSEHyXV+FN6izzJOEIo55o2DFpaTzT/GBM7DzMhrEW"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C56B8431064A"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:55:55.552Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'MG19E5ZZZMKHJ3T0', 'x-amz-id-2': 'la5JwFL7QZ76xVh7P9uszVlsbuM0RLJrgpDrLSL3kg9VP23ZsTFSZcNSEHyXV+FN6izzJOEIo55o2DFpaTzT/GBM7DzMhrEW'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C56B8431064A'}}}]}
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:55:55.527Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"MG12RJXFQXXVA1NE","x-amz-id-2":"5y9fk8TxSFzoEMpeGCyNNbEMqNHst19J6HfCTgUkhD9U5RKkjr2LlG3DUX1E1VOQlOYemocxweE5ANTBxJg/Y/MaA4KCihrs"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C56B7D0C1388"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:55:55.527Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'MG12RJXFQXXVA1NE', 'x-amz-id-2': '5y9fk8TxSFzoEMpeGCyNNbEMqNHst19J6HfCTgUkhD9U5RKkjr2LlG3DUX1E1VOQlOYemocxweE5ANTBxJg/Y/MaA4KCihrs'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C56B7D0C1388'}}}]}
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=g2fHdZ41zp60Z5Bgpx4WTOvbEO0%3D&content-type=image%2Fpng&Expires=1735512991
Photo metadata saved successfully: 117
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=g2fHdZ41zp60Z5Bgpx4WTOvbEO0%3D&content-type=image%2Fpng&Expires=1735512991
Photo metadata saved successfully: 118
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=g2fHdZ41zp60Z5Bgpx4WTOvbEO0%3D&content-type=image%2Fpng&Expires=1735512991
Photo metadata saved successfully: 119
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:56:32.132Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"58PFGK7HGWNN636J","x-amz-id-2":"pbHJrHpA3bWyAZrhZOIpNZIbSHBThk7axtOu7VnbZu3nXuYeWO5qssTBBVL1BWt+fp//U44e7oaGGQNN3uRx8jxwEp5/ulie"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C590183701E8"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:56:32.132Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '58PFGK7HGWNN636J', 'x-amz-id-2': 'pbHJrHpA3bWyAZrhZOIpNZIbSHBThk7axtOu7VnbZu3nXuYeWO5qssTBBVL1BWt+fp//U44e7oaGGQNN3uRx8jxwEp5/ulie'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C590183701E8'}}}]}
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:56:32.239Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"58P7Y8PC8NFJFDVQ","x-amz-id-2":"K8lvpKyCmgDortOKrjTh59p5waswPqIDz/tQh0tmS0Pxpt9IUVkOgh3qitm0aYN7JNhEQJBlc3OTpoS7IJfdQVp/IjTm8vVo"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C590374BEDA6"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:56:32.239Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '58P7Y8PC8NFJFDVQ', 'x-amz-id-2': 'K8lvpKyCmgDortOKrjTh59p5waswPqIDz/tQh0tmS0Pxpt9IUVkOgh3qitm0aYN7JNhEQJBlc3OTpoS7IJfdQVp/IjTm8vVo'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C590374BEDA6'}}}]}
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-29T21:56:32.526Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"58P3GH0AR4KTHVFZ","x-amz-id-2":"VB9bONyJbFeES8NcgaK6r83o7hmonK45cTGE+NeGGotZiS2aKuR0QZ3tMLzR3gu6KKjoeA2UcdlifbBYbnz7xFds/1Mubety"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006771C5907D400C2C"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-29T21:56:32.526Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '58P3GH0AR4KTHVFZ', 'x-amz-id-2': 'VB9bONyJbFeES8NcgaK6r83o7hmonK45cTGE+NeGGotZiS2aKuR0QZ3tMLzR3gu6KKjoeA2UcdlifbBYbnz7xFds/1Mubety'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006771C5907D400C2C'}}}]}
Calculation result: https://foodphotobucket.s3.amazonaws.com/test_image.jpg?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=jOqB%2BXFq%2Ffi0jCike4PTwquBPXg%3D&content-type=image%2Fjpeg&Expires=1735528741
Calculation result: <MagicMock name='client().generate_presigned_url()' id='140316591984656'>
Generating presigned URL for file: invalid.png with size: -100
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/invalid.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=LXhzB52cubBd3sg%2FgWWzy8yRpN0%3D&content-type=image%2Fpng&Expires=1735528941
Failed to serialize photo data: {'file_size': [ErrorDetail(string='Ensure this value is greater than or equal to 0.', code='min_value')]}
Missing filename or file_size in request data
Generating presigned URL for file: test_image.png with size: 1024
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/test_image.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=uM6akZxkve1s98KwYHIKQMvc8Nc%3D&content-type=image%2Fpng&Expires=1735528941
Photo metadata saved successfully: 1
Retrieving photo metadata for photo ID: 999
Photo not found with ID: 999
Retrieving photo metadata for photo ID: 3
Photo metadata retrieved: 3
Generating presigned URL for file: invalid.png with size: -100
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/invalid.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=1ovFnP0eRRw9f2tcTuQS0vgTiBc%3D&content-type=image%2Fpng&Expires=1735529130
Failed to serialize photo data: {'file_size': [ErrorDetail(string='Ensure this value is greater than or equal to 0.', code='min_value')]}
Missing filename or file_size in request data
Generating presigned URL for file: test_image.png with size: 1024
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/test_image.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=lg4fMO74gdrW4Lmh7w5la27UGcA%3D&content-type=image%2Fpng&Expires=1735529130
Photo metadata saved successfully: 1
Retrieving photo metadata for photo ID: 999
Photo not found with ID: 999
Retrieving photo metadata for photo ID: 3
Photo metadata retrieved: 3
SNSNotificationHandlerView received POST Request
Received SNS Notification: None
Invalid SNS message type: None
SNSNotificationHandlerView received POST Request
Received SNS Notification: None
Invalid SNS message type: None
SNSNotificationHandlerView received POST Request
Received SNS Notification: None
Invalid SNS message type: None
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/notifications/
Successfully subscribed to SNS topic
SNSNotificationHandlerView received POST Request
Received SNS Notification: SubscriptionConfirmation
Subscription Confirmation
Subscription confirmed successfully
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/notifications/
Successfully subscribed to SNS topic
SNSNotificationHandlerView received POST Request
Received SNS Notification: SubscriptionConfirmation
Subscription Confirmation
Subscription confirmed successfully
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=uWWnD80%2Bs0EFeUjkheniBhxugsg%3D&content-type=image%2Fpng&Expires=1735529398
Photo metadata saved successfully: 121
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-30T02:29:58.802Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"VKFN2JQ844T9JNKD","x-amz-id-2":"O03gPe8Xdsx4mgovgqyQl6/zMWywUUSYBPRvgNP50YLvduZvumF2m7Ee3tOr8IOMdqrZV8+cvg6pLSGm6KJgtF55GW9qZO2O"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"00677205A6C339A436"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-30T02:29:58.802Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'VKFN2JQ844T9JNKD', 'x-amz-id-2': 'O03gPe8Xdsx4mgovgqyQl6/zMWywUUSYBPRvgNP50YLvduZvumF2m7Ee3tOr8IOMdqrZV8+cvg6pLSGm6KJgtF55GW9qZO2O'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '00677205A6C339A436'}}}]}
Generating presigned URL for file: invalid.png with size: -100
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/invalid.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=trBKHvtMvH%2FnYrl05bh4JOdyQNM%3D&content-type=image%2Fpng&Expires=1735529778
Failed to serialize photo data: {'file_size': [ErrorDetail(string='Ensure this value is greater than or equal to 0.', code='min_value')]}
Missing filename or file_size in request data
Generating presigned URL for file: test_image.png with size: 1024
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/test_image.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=IZGcmpPJz4F9XrKj%2BAwxW2hULk0%3D&content-type=image%2Fpng&Expires=1735529778
Photo metadata saved successfully: 1
Retrieving photo metadata for photo ID: 999
Photo not found with ID: 999
Retrieving photo metadata for photo ID: 3
Photo metadata retrieved: 3
SNSNotificationHandlerView received POST Request
Received SNS Notification: None
Invalid SNS message type: None - Body: {'Type': 'InvalidType'}
SNSNotificationHandlerView received POST Request
Received SNS Notification: None
Invalid SNS message type: None - Body: {'Type': 'Notification', 'Message': '{"event": "s3:ObjectCreated:Put", "key": "test_image.png"}'}
SNSNotificationHandlerView received POST Request
Received SNS Notification: None
Invalid SNS message type: None - Body: {'Type': 'SubscriptionConfirmation', 'SubscribeURL': 'https://mock-subscribe-url.com'}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/notifications/
Successfully subscribed to SNS topic
SNSNotificationHandlerView received POST Request
Received SNS Notification: SubscriptionConfirmation
Subscription Confirmation
Subscription confirmed successfully
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=4JaPf%2BlPMK%2BjwLU%2FNMv3zYhgXTE%3D&content-type=image%2Fpng&Expires=1735538523
Photo metadata saved successfully: 123
SNSNotificationHandlerView received POST Request
Received SNS Notification: Notification
Received SNS Notification: {"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-30T05:02:03.859Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"8KN4JW2F71DT1VKC","x-amz-id-2":"/OSFUX6EBUkrAdXHVJ4ScLwSsxVgVqrqlHVrQUp1sg1CgS0EVD/nVjop0Ome5R2E8Pw63LxcIAOGKkhhpexVuzEq+krkeW29"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"006772294BCF09D4E6"}}}]}
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-30T05:02:03.859Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '8KN4JW2F71DT1VKC', 'x-amz-id-2': '/OSFUX6EBUkrAdXHVJ4ScLwSsxVgVqrqlHVrQUp1sg1CgS0EVD/nVjop0Ome5R2E8Pw63LxcIAOGKkhhpexVuzEq+krkeW29'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006772294BCF09D4E6'}}}]}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/notifications/
Successfully subscribed to SNS topic
SNSNotificationHandlerView received POST Request
Subscription confirmed successfully
Generating presigned URL for file: 1kb.png with size: 1049
Presigned URL generated: https://foodphotobucket.s3.amazonaws.com/1kb.png?AWSAccessKeyId=AKIAXNGUVOKN4FDPIJJK&Signature=wnzD76%2BbXHSdMGMGkhqw4a%2FJsSs%3D&content-type=image%2Fpng&Expires=1735538691
Photo metadata saved successfully: 127
SNSNotificationHandlerView received POST Request
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-30T05:04:52.069Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'W4CMWG9S77ZXJTPV', 'x-amz-id-2': '3R6ico8fMcvG3E7OEaYAUuVRGifyWqZXj352VJdnR76miUA+ZkRin59BTrfe11m5FLuVaFyO8o185DujQymPfuWcNKohrjVd'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '00677229F4016663C3'}}}]}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
SNSNotificationHandlerView received POST Request
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-30T05:16:39.244Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '83HCB5GQPK8XKQDD', 'x-amz-id-2': 'Bn6o738NvxrJk97CDEmCoaRCNB+15ODZQ5qLUgHHupV0LW+GOhZsQPGRXbb76h0yZmVzZ+7o1QzE69Xe2rXKTRaj+DAVuzlh'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067722CB72B064700'}}}]}
SNSNotificationHandlerView received POST Request
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-30T05:16:41.163Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'SYV20PY0EWKN6EDF', 'x-amz-id-2': 'Fs1ZY5L86IMdPOTXbPRqqySevkOEhjbXnXUqW18z6U7BvITKkXizjY/Val8D2ycafeH7ODiArQZmNgZaa3KPGXVPVk8yOQIg'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067722CB9204E7F19'}}}]}
SNSNotificationHandlerView received POST Request
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-30T05:16:45.487Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'W4EQ4R0FTM1Q92D2', 'x-amz-id-2': 'n/RJMhG5OhZmiRZuZsXLINdRNZPRS7F3ectvdBA1EQyT9DpxnGrvql9YsVbkc4ELvUIXALJgErO0vgBkKE4k9/TLYoNzibWt'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067722CBD6D1C0EDC'}}}]}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://d418-76-126-145-131.ngrok-free.app/photos/notifications/
SNSNotificationHandlerView received POST Request
Subscription confirmed successfully
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://fa8c-76-126-145-131.ngrok-free.app/photos/notifications/
SNSNotificationHandlerView received POST Request
Subscription confirmed successfully
SNSNotificationHandlerView received POST Request
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:00:57.143Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'CSPTSG6RG3JTFMWB', 'x-amz-id-2': 'pxoDUMzGyI2moTamVeNBvfvt143in+00UV5CxUTk0RedzZbzel4MdTf2ON2fQ2AJzcQi+6cYR1hOrEgheM//WvtdBHO79yrq'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '00677423491CF6E9B7'}}}]}
Error processing SNS notification: 'SNSNotificationHandler' object has no attribute 'classify_photo'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:01:20.352Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'N6K9Y6BDMJ45W35Q', 'x-amz-id-2': 'SqU8JihddbRi8oy3Jflt7M0Ao19TXJPjE7ST7Eq0KXHeGv8gi5LC7oRZ9/918zpNuSHGC/2ba+hYD9l4VI5F3CmULSNY96Hi'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006774236050E4A923'}}}]}
SNSNotificationHandlerView received POST Request
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:00:57.143Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'CSPTSG6RG3JTFMWB', 'x-amz-id-2': 'pxoDUMzGyI2moTamVeNBvfvt143in+00UV5CxUTk0RedzZbzel4MdTf2ON2fQ2AJzcQi+6cYR1hOrEgheM//WvtdBHO79yrq'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '00677423491CF6E9B7'}}}]}
SNSNotificationHandlerView received POST Request
Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:01:55.145Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '5R8YRGK9C7PVS37E', 'x-amz-id-2': '0OSmBaPPVqdoS+KS9K+oKw9a11PYkA2hvk11JA8DMLPoAer+GqFvOoD4Q0INpZwUf4uFUSGJMzS/vqNoXouSgK8gkiS7ehqS'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '00677423831AF853FE'}}}]}
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:13:22.385Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'FMJCDK6HWQ1D8900', 'x-amz-id-2': 'nEf5pZphon1X68/VCLgEXBi//SRdpVTA7yQJIzn987p+sQXGNd0UjJ3Qw3uS6MhRQ+/foU7LdEtPNt9kkcidSMT3ryeGnz5i'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006774263259D48E5E'}}}]}
Error processing SNS notification: 'Response' object has no attribute 'status'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:13:22.385Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'FMJCDK6HWQ1D8900', 'x-amz-id-2': 'nEf5pZphon1X68/VCLgEXBi//SRdpVTA7yQJIzn987p+sQXGNd0UjJ3Qw3uS6MhRQ+/foU7LdEtPNt9kkcidSMT3ryeGnz5i'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006774263259D48E5E'}}}]}
Error processing SNS notification: 'Response' object has no attribute 'status'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:13:22.385Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'FMJCDK6HWQ1D8900', 'x-amz-id-2': 'nEf5pZphon1X68/VCLgEXBi//SRdpVTA7yQJIzn987p+sQXGNd0UjJ3Qw3uS6MhRQ+/foU7LdEtPNt9kkcidSMT3ryeGnz5i'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006774263259D48E5E'}}}]}
Error processing SNS notification: 'Response' object has no attribute 'status'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:13:22.385Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'FMJCDK6HWQ1D8900', 'x-amz-id-2': 'nEf5pZphon1X68/VCLgEXBi//SRdpVTA7yQJIzn987p+sQXGNd0UjJ3Qw3uS6MhRQ+/foU7LdEtPNt9kkcidSMT3ryeGnz5i'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006774263259D48E5E'}}}]}
Error processing SNS notification: 'Response' object has no attribute 'status'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
column "upload_status" of relation "photo_handler_photo" does not exist
LINE 1: ...r_photo" ("filename", "file_size", "upload_time", "upload_st...
                                                             ^

Internal Server Error: /photos/create/
"POST /photos/create/ HTTP/1.1" 500 252
column "upload_status" of relation "photo_handler_photo" does not exist
LINE 1: ...r_photo" ("filename", "file_size", "upload_time", "upload_st...
                                                             ^

Internal Server Error: /photos/create/
"POST /photos/create/ HTTP/1.1" 500 252
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Internal Server Error: /photos/inject-test-data/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
psycopg2.errors.UndefinedColumn: column "upload_status" of relation "photo_handler_photo" does not exist
LINE 1: ...r_photo" ("filename", "file_size", "upload_time", "upload_st...
                                                             ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 213, in post
    serializer.save()
  File "/usr/local/lib/python3.11/site-packages/rest_framework/serializers.py", line 208, in save
    self.instance = self.create(validated_data)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/serializers.py", line 989, in create
    instance = ModelClass._default_manager.create(**validated_data)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/models/query.py", line 679, in create
    obj.save(force_insert=True, using=self.db)
  File "/app/photo_handler/models.py", line 20, in save
    super().save(*args, **kwargs)
  File "/usr/local/lib/python3.11/site-packages/django/db/models/base.py", line 892, in save
    self.save_base(
  File "/usr/local/lib/python3.11/site-packages/django/db/models/base.py", line 998, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/models/base.py", line 1161, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/models/base.py", line 1202, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/models/query.py", line 1847, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/models/sql/compiler.py", line 1836, in execute_sql
    cursor.execute(sql, params)
  File "/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py", line 122, in execute
    return super().execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
  File "/usr/local/lib/python3.11/site-packages/django/db/utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/usr/local/lib/python3.11/site-packages/django/db/backends/utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
django.db.utils.ProgrammingError: column "upload_status" of relation "photo_handler_photo" does not exist
LINE 1: ...r_photo" ("filename", "file_size", "upload_time", "upload_st...
                                                             ^

"POST /photos/inject-test-data/ HTTP/1.1" 500 190508
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Parameter validation failed:
Unknown parameter in input: "id", must be one of: ACL, Body, Bucket, CacheControl, ContentDisposition, ContentEncoding, ContentLanguage, ContentLength, ContentMD5, ContentType, ChecksumAlgorithm, ChecksumCRC32, ChecksumCRC32C, ChecksumSHA1, ChecksumSHA256, Expires, IfMatch, IfNoneMatch, GrantFullControl, GrantRead, GrantReadACP, GrantWriteACP, Key, WriteOffsetBytes, Metadata, ServerSideEncryption, StorageClass, WebsiteRedirectLocation, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, SSEKMSEncryptionContext, BucketKeyEnabled, RequestPayer, Tagging, ObjectLockMode, ObjectLockRetainUntilDate, ObjectLockLegalHoldStatus, ExpectedBucketOwner
Internal Server Error: /photos/create/
"POST /photos/create/ HTTP/1.1" 500 724
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:27:42.183Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '1TMNN2YT1JGHAQ2X', 'x-amz-id-2': 'DglUVDtUbGqUdkuIIHDienN1Qg5NCd+9rU/4ebZgTYeAvK2Axau6U1xHliUgQfR9u/2niftNUUi4/dNAdZ6Wmvf1figWb1/3'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_143', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006774298E26AA6E13'}}}]}
Error processing SNS notification: 'Response' object has no attribute 'status'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:27:42.183Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '1TMNN2YT1JGHAQ2X', 'x-amz-id-2': 'DglUVDtUbGqUdkuIIHDienN1Qg5NCd+9rU/4ebZgTYeAvK2Axau6U1xHliUgQfR9u/2niftNUUi4/dNAdZ6Wmvf1figWb1/3'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_143', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006774298E26AA6E13'}}}]}
Error processing SNS notification: 'Response' object has no attribute 'status'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:27:42.183Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '1TMNN2YT1JGHAQ2X', 'x-amz-id-2': 'DglUVDtUbGqUdkuIIHDienN1Qg5NCd+9rU/4ebZgTYeAvK2Axau6U1xHliUgQfR9u/2niftNUUi4/dNAdZ6Wmvf1figWb1/3'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_143', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006774298E26AA6E13'}}}]}
Error processing SNS notification: 'Response' object has no attribute 'status'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:27:42.183Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '1TMNN2YT1JGHAQ2X', 'x-amz-id-2': 'DglUVDtUbGqUdkuIIHDienN1Qg5NCd+9rU/4ebZgTYeAvK2Axau6U1xHliUgQfR9u/2niftNUUi4/dNAdZ6Wmvf1figWb1/3'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_143', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '006774298E26AA6E13'}}}]}
Error processing SNS notification: 'Response' object has no attribute 'status'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:31:50.819Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '61RS01XGZ6YS75K2', 'x-amz-id-2': 'Z9E3VUsrBtl+9EcLIAY8JVq1lQTbRK8/M8Qa1aTPmwsqHE2Me6rBGfNhcAbP7bOC2HviuEneoDiHErpdTHX8valJ2rgdUPuf'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_145', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742A86C6F9AC81'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'aa37f5ff-0d5b-585b-be69-aa112193c4b9', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:31:50.819Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"61RS01XGZ6YS75K2","x-amz-id-2":"Z9E3VUsrBtl+9EcLIAY8JVq1lQTbRK8/M8Qa1aTPmwsqHE2Me6rBGfNhcAbP7bOC2HviuEneoDiHErpdTHX8valJ2rgdUPuf"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_145","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742A86C6F9AC81"}}}]}', 'Timestamp': '2024-12-31T17:31:52.036Z', 'SignatureVersion': '1', 'Signature': 'ZEeek5d7F1K2+sDpcm07UbthTQipKZoCLpsF0Ms+vBUYj1BgsxBGRpU3+3wK2I3PsmWIAAwA82BPh5s3CuDV7F4zmyOoIVE+1+S4JerFi9tmTRnfG/SfxsHlT2/jk+kH3LZ9RWEVDC6klV/W463pH+Wj21l+8UuhQzVzVTYWLN/+57eWbqFsmxegXCOmIE41qPss73DycGhH2IyEIwdIhB9ifohRhlaDBj5/JA8aMavrtxvxpryx25G4yr1T5Ay055OBGB6l+1rnc78wmvWBLOYKw6PD5Ov4lYpDLxFHGp6ovSxpqvBrpQrBnPd0Y03NygMbff9Mn4oiqmKNtAfiMg==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'dict' object has no attribute 'id'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:31:50.819Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '61RS01XGZ6YS75K2', 'x-amz-id-2': 'Z9E3VUsrBtl+9EcLIAY8JVq1lQTbRK8/M8Qa1aTPmwsqHE2Me6rBGfNhcAbP7bOC2HviuEneoDiHErpdTHX8valJ2rgdUPuf'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_145', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742A86C6F9AC81'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'aa37f5ff-0d5b-585b-be69-aa112193c4b9', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:31:50.819Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"61RS01XGZ6YS75K2","x-amz-id-2":"Z9E3VUsrBtl+9EcLIAY8JVq1lQTbRK8/M8Qa1aTPmwsqHE2Me6rBGfNhcAbP7bOC2HviuEneoDiHErpdTHX8valJ2rgdUPuf"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_145","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742A86C6F9AC81"}}}]}', 'Timestamp': '2024-12-31T17:31:52.036Z', 'SignatureVersion': '1', 'Signature': 'ZEeek5d7F1K2+sDpcm07UbthTQipKZoCLpsF0Ms+vBUYj1BgsxBGRpU3+3wK2I3PsmWIAAwA82BPh5s3CuDV7F4zmyOoIVE+1+S4JerFi9tmTRnfG/SfxsHlT2/jk+kH3LZ9RWEVDC6klV/W463pH+Wj21l+8UuhQzVzVTYWLN/+57eWbqFsmxegXCOmIE41qPss73DycGhH2IyEIwdIhB9ifohRhlaDBj5/JA8aMavrtxvxpryx25G4yr1T5Ay055OBGB6l+1rnc78wmvWBLOYKw6PD5Ov4lYpDLxFHGp6ovSxpqvBrpQrBnPd0Y03NygMbff9Mn4oiqmKNtAfiMg==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'dict' object has no attribute 'id'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:32:26.800Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'R4YG9P9DW1QSMJ5H', 'x-amz-id-2': 'nIlOxPcW3XWrrRHydQZqMiExhyvMSgjQ7/JDGPur0XDCsi5GzhBj+ImLiWkd7xdH2AlAM4wF38Jpp5FTcjyADU4ZdMALSo6M'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_146', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742AAABA16EBF1'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '98d798fb-7508-53ba-9bb3-c71559e33c14', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:32:26.800Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"R4YG9P9DW1QSMJ5H","x-amz-id-2":"nIlOxPcW3XWrrRHydQZqMiExhyvMSgjQ7/JDGPur0XDCsi5GzhBj+ImLiWkd7xdH2AlAM4wF38Jpp5FTcjyADU4ZdMALSo6M"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_146","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742AAABA16EBF1"}}}]}', 'Timestamp': '2024-12-31T17:32:27.894Z', 'SignatureVersion': '1', 'Signature': 'fd06ZqPTYQRX79nUpdcQ/+ZjTW5jKD7ydtnbMcsUjDPNPDHrhncWXSfICHoib4DDtUwYhJo+1xD7+l163GzR2577cUZxRN/xlrhbaQ10lW1NVvmx+dlsIZuI4V1JIcEHNqnGooTLH3VnSwpsZWZeIfcIZ26igveLfPPilTBCdjlrWrIjWwPYTCdp1hMsvN7u8ib6jvggt8n52o5nOaod1BXv59SLBsTS4FoWLzZtU5cL1AcR7xttZdx4ORB82IGGNc09emN0iFsBE8ofsrm+zzhvbK37cQWcuu2BgSSdd1ZCSUPqB2bNZSvoMmHoCWasjFTCquQKLxyb5SKWa7jCkw==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'dict' object has no attribute 'id'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:32:31.667Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'EVRSD05Q7KZWA0ZB', 'x-amz-id-2': '9JxUuUCm2RGk4pdjPkiIse54p7pOUJaFYvWWcrO0zD/SD197BSbpJDnzYRTCjbuwcCO7dBi86DNE8JB2c5Z4lLImCnZH5uBY'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_147', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742AAFA02C3A73'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'a7cc81ab-ef0d-5fdd-bf8d-de45c3fd775d', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:32:31.667Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"EVRSD05Q7KZWA0ZB","x-amz-id-2":"9JxUuUCm2RGk4pdjPkiIse54p7pOUJaFYvWWcrO0zD/SD197BSbpJDnzYRTCjbuwcCO7dBi86DNE8JB2c5Z4lLImCnZH5uBY"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_147","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742AAFA02C3A73"}}}]}', 'Timestamp': '2024-12-31T17:32:32.205Z', 'SignatureVersion': '1', 'Signature': 'HsC9mwFP/Uu0ugq2UXv+KeSqnIfo6D+opyNCdhyOlHIWq9q2SB1CM9+WmcQIw0liJDaRs7DgR30k6vO0mnOwf6k2qEBRfM6yVodptP5+wxuAiGP3BBRV6F/z1P+KujHG4qp8EBhvMZKFSze5bAWNY0PRYWc9yj7PmU07xeHoJ0uPIdyzSyU+nztqlBf9Z5F5UH/H8U+eu1BDclp35kBNX7Na0sLsoshJqExpiB9Y0hTRRJzrWm3EEXHhROhtZyck/0y/u/a+LjdlI6ro5FlvZtQnTP7Vzqo9bGSRzaVNDUrzu00VzZ6gdrRHU9fKzmslDjbJ3pyAOWveFDpqwGeQlA==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'dict' object has no attribute 'id'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:31:50.819Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '61RS01XGZ6YS75K2', 'x-amz-id-2': 'Z9E3VUsrBtl+9EcLIAY8JVq1lQTbRK8/M8Qa1aTPmwsqHE2Me6rBGfNhcAbP7bOC2HviuEneoDiHErpdTHX8valJ2rgdUPuf'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_145', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742A86C6F9AC81'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'aa37f5ff-0d5b-585b-be69-aa112193c4b9', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:31:50.819Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"61RS01XGZ6YS75K2","x-amz-id-2":"Z9E3VUsrBtl+9EcLIAY8JVq1lQTbRK8/M8Qa1aTPmwsqHE2Me6rBGfNhcAbP7bOC2HviuEneoDiHErpdTHX8valJ2rgdUPuf"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_145","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742A86C6F9AC81"}}}]}', 'Timestamp': '2024-12-31T17:31:52.036Z', 'SignatureVersion': '1', 'Signature': 'ZEeek5d7F1K2+sDpcm07UbthTQipKZoCLpsF0Ms+vBUYj1BgsxBGRpU3+3wK2I3PsmWIAAwA82BPh5s3CuDV7F4zmyOoIVE+1+S4JerFi9tmTRnfG/SfxsHlT2/jk+kH3LZ9RWEVDC6klV/W463pH+Wj21l+8UuhQzVzVTYWLN/+57eWbqFsmxegXCOmIE41qPss73DycGhH2IyEIwdIhB9ifohRhlaDBj5/JA8aMavrtxvxpryx25G4yr1T5Ay055OBGB6l+1rnc78wmvWBLOYKw6PD5Ov4lYpDLxFHGp6ovSxpqvBrpQrBnPd0Y03NygMbff9Mn4oiqmKNtAfiMg==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'dict' object has no attribute 'id'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:32:26.800Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'R4YG9P9DW1QSMJ5H', 'x-amz-id-2': 'nIlOxPcW3XWrrRHydQZqMiExhyvMSgjQ7/JDGPur0XDCsi5GzhBj+ImLiWkd7xdH2AlAM4wF38Jpp5FTcjyADU4ZdMALSo6M'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_146', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742AAABA16EBF1'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '98d798fb-7508-53ba-9bb3-c71559e33c14', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:32:26.800Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"R4YG9P9DW1QSMJ5H","x-amz-id-2":"nIlOxPcW3XWrrRHydQZqMiExhyvMSgjQ7/JDGPur0XDCsi5GzhBj+ImLiWkd7xdH2AlAM4wF38Jpp5FTcjyADU4ZdMALSo6M"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_146","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742AAABA16EBF1"}}}]}', 'Timestamp': '2024-12-31T17:32:27.894Z', 'SignatureVersion': '1', 'Signature': 'fd06ZqPTYQRX79nUpdcQ/+ZjTW5jKD7ydtnbMcsUjDPNPDHrhncWXSfICHoib4DDtUwYhJo+1xD7+l163GzR2577cUZxRN/xlrhbaQ10lW1NVvmx+dlsIZuI4V1JIcEHNqnGooTLH3VnSwpsZWZeIfcIZ26igveLfPPilTBCdjlrWrIjWwPYTCdp1hMsvN7u8ib6jvggt8n52o5nOaod1BXv59SLBsTS4FoWLzZtU5cL1AcR7xttZdx4ORB82IGGNc09emN0iFsBE8ofsrm+zzhvbK37cQWcuu2BgSSdd1ZCSUPqB2bNZSvoMmHoCWasjFTCquQKLxyb5SKWa7jCkw==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'dict' object has no attribute 'id'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:32:31.667Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'EVRSD05Q7KZWA0ZB', 'x-amz-id-2': '9JxUuUCm2RGk4pdjPkiIse54p7pOUJaFYvWWcrO0zD/SD197BSbpJDnzYRTCjbuwcCO7dBi86DNE8JB2c5Z4lLImCnZH5uBY'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_147', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742AAFA02C3A73'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'a7cc81ab-ef0d-5fdd-bf8d-de45c3fd775d', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:32:31.667Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"EVRSD05Q7KZWA0ZB","x-amz-id-2":"9JxUuUCm2RGk4pdjPkiIse54p7pOUJaFYvWWcrO0zD/SD197BSbpJDnzYRTCjbuwcCO7dBi86DNE8JB2c5Z4lLImCnZH5uBY"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_147","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742AAFA02C3A73"}}}]}', 'Timestamp': '2024-12-31T17:32:32.205Z', 'SignatureVersion': '1', 'Signature': 'HsC9mwFP/Uu0ugq2UXv+KeSqnIfo6D+opyNCdhyOlHIWq9q2SB1CM9+WmcQIw0liJDaRs7DgR30k6vO0mnOwf6k2qEBRfM6yVodptP5+wxuAiGP3BBRV6F/z1P+KujHG4qp8EBhvMZKFSze5bAWNY0PRYWc9yj7PmU07xeHoJ0uPIdyzSyU+nztqlBf9Z5F5UH/H8U+eu1BDclp35kBNX7Na0sLsoshJqExpiB9Y0hTRRJzrWm3EEXHhROhtZyck/0y/u/a+LjdlI6ro5FlvZtQnTP7Vzqo9bGSRzaVNDUrzu00VzZ6gdrRHU9fKzmslDjbJ3pyAOWveFDpqwGeQlA==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'dict' object has no attribute 'id'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:31:50.819Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '61RS01XGZ6YS75K2', 'x-amz-id-2': 'Z9E3VUsrBtl+9EcLIAY8JVq1lQTbRK8/M8Qa1aTPmwsqHE2Me6rBGfNhcAbP7bOC2HviuEneoDiHErpdTHX8valJ2rgdUPuf'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_145', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742A86C6F9AC81'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'aa37f5ff-0d5b-585b-be69-aa112193c4b9', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:31:50.819Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"61RS01XGZ6YS75K2","x-amz-id-2":"Z9E3VUsrBtl+9EcLIAY8JVq1lQTbRK8/M8Qa1aTPmwsqHE2Me6rBGfNhcAbP7bOC2HviuEneoDiHErpdTHX8valJ2rgdUPuf"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_145","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742A86C6F9AC81"}}}]}', 'Timestamp': '2024-12-31T17:31:52.036Z', 'SignatureVersion': '1', 'Signature': 'ZEeek5d7F1K2+sDpcm07UbthTQipKZoCLpsF0Ms+vBUYj1BgsxBGRpU3+3wK2I3PsmWIAAwA82BPh5s3CuDV7F4zmyOoIVE+1+S4JerFi9tmTRnfG/SfxsHlT2/jk+kH3LZ9RWEVDC6klV/W463pH+Wj21l+8UuhQzVzVTYWLN/+57eWbqFsmxegXCOmIE41qPss73DycGhH2IyEIwdIhB9ifohRhlaDBj5/JA8aMavrtxvxpryx25G4yr1T5Ay055OBGB6l+1rnc78wmvWBLOYKw6PD5Ov4lYpDLxFHGp6ovSxpqvBrpQrBnPd0Y03NygMbff9Mn4oiqmKNtAfiMg==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'dict' object has no attribute 'id'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:32:26.800Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'R4YG9P9DW1QSMJ5H', 'x-amz-id-2': 'nIlOxPcW3XWrrRHydQZqMiExhyvMSgjQ7/JDGPur0XDCsi5GzhBj+ImLiWkd7xdH2AlAM4wF38Jpp5FTcjyADU4ZdMALSo6M'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_146', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742AAABA16EBF1'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '98d798fb-7508-53ba-9bb3-c71559e33c14', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:32:26.800Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"R4YG9P9DW1QSMJ5H","x-amz-id-2":"nIlOxPcW3XWrrRHydQZqMiExhyvMSgjQ7/JDGPur0XDCsi5GzhBj+ImLiWkd7xdH2AlAM4wF38Jpp5FTcjyADU4ZdMALSo6M"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_146","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742AAABA16EBF1"}}}]}', 'Timestamp': '2024-12-31T17:32:27.894Z', 'SignatureVersion': '1', 'Signature': 'fd06ZqPTYQRX79nUpdcQ/+ZjTW5jKD7ydtnbMcsUjDPNPDHrhncWXSfICHoib4DDtUwYhJo+1xD7+l163GzR2577cUZxRN/xlrhbaQ10lW1NVvmx+dlsIZuI4V1JIcEHNqnGooTLH3VnSwpsZWZeIfcIZ26igveLfPPilTBCdjlrWrIjWwPYTCdp1hMsvN7u8ib6jvggt8n52o5nOaod1BXv59SLBsTS4FoWLzZtU5cL1AcR7xttZdx4ORB82IGGNc09emN0iFsBE8ofsrm+zzhvbK37cQWcuu2BgSSdd1ZCSUPqB2bNZSvoMmHoCWasjFTCquQKLxyb5SKWa7jCkw==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'dict' object has no attribute 'id'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:32:31.667Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'EVRSD05Q7KZWA0ZB', 'x-amz-id-2': '9JxUuUCm2RGk4pdjPkiIse54p7pOUJaFYvWWcrO0zD/SD197BSbpJDnzYRTCjbuwcCO7dBi86DNE8JB2c5Z4lLImCnZH5uBY'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_147', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742AAFA02C3A73'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'a7cc81ab-ef0d-5fdd-bf8d-de45c3fd775d', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:32:31.667Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"EVRSD05Q7KZWA0ZB","x-amz-id-2":"9JxUuUCm2RGk4pdjPkiIse54p7pOUJaFYvWWcrO0zD/SD197BSbpJDnzYRTCjbuwcCO7dBi86DNE8JB2c5Z4lLImCnZH5uBY"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_147","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742AAFA02C3A73"}}}]}', 'Timestamp': '2024-12-31T17:32:32.205Z', 'SignatureVersion': '1', 'Signature': 'HsC9mwFP/Uu0ugq2UXv+KeSqnIfo6D+opyNCdhyOlHIWq9q2SB1CM9+WmcQIw0liJDaRs7DgR30k6vO0mnOwf6k2qEBRfM6yVodptP5+wxuAiGP3BBRV6F/z1P+KujHG4qp8EBhvMZKFSze5bAWNY0PRYWc9yj7PmU07xeHoJ0uPIdyzSyU+nztqlBf9Z5F5UH/H8U+eu1BDclp35kBNX7Na0sLsoshJqExpiB9Y0hTRRJzrWm3EEXHhROhtZyck/0y/u/a+LjdlI6ro5FlvZtQnTP7Vzqo9bGSRzaVNDUrzu00VzZ6gdrRHU9fKzmslDjbJ3pyAOWveFDpqwGeQlA==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'dict' object has no attribute 'id'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:32:26.800Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'R4YG9P9DW1QSMJ5H', 'x-amz-id-2': 'nIlOxPcW3XWrrRHydQZqMiExhyvMSgjQ7/JDGPur0XDCsi5GzhBj+ImLiWkd7xdH2AlAM4wF38Jpp5FTcjyADU4ZdMALSo6M'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_146', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742AAABA16EBF1'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '98d798fb-7508-53ba-9bb3-c71559e33c14', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:32:26.800Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"R4YG9P9DW1QSMJ5H","x-amz-id-2":"nIlOxPcW3XWrrRHydQZqMiExhyvMSgjQ7/JDGPur0XDCsi5GzhBj+ImLiWkd7xdH2AlAM4wF38Jpp5FTcjyADU4ZdMALSo6M"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_146","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742AAABA16EBF1"}}}]}', 'Timestamp': '2024-12-31T17:32:27.894Z', 'SignatureVersion': '1', 'Signature': 'fd06ZqPTYQRX79nUpdcQ/+ZjTW5jKD7ydtnbMcsUjDPNPDHrhncWXSfICHoib4DDtUwYhJo+1xD7+l163GzR2577cUZxRN/xlrhbaQ10lW1NVvmx+dlsIZuI4V1JIcEHNqnGooTLH3VnSwpsZWZeIfcIZ26igveLfPPilTBCdjlrWrIjWwPYTCdp1hMsvN7u8ib6jvggt8n52o5nOaod1BXv59SLBsTS4FoWLzZtU5cL1AcR7xttZdx4ORB82IGGNc09emN0iFsBE8ofsrm+zzhvbK37cQWcuu2BgSSdd1ZCSUPqB2bNZSvoMmHoCWasjFTCquQKLxyb5SKWa7jCkw==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'dict' object has no attribute 'id'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:32:31.667Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'EVRSD05Q7KZWA0ZB', 'x-amz-id-2': '9JxUuUCm2RGk4pdjPkiIse54p7pOUJaFYvWWcrO0zD/SD197BSbpJDnzYRTCjbuwcCO7dBi86DNE8JB2c5Z4lLImCnZH5uBY'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_147', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742AAFA02C3A73'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'a7cc81ab-ef0d-5fdd-bf8d-de45c3fd775d', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:32:31.667Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"EVRSD05Q7KZWA0ZB","x-amz-id-2":"9JxUuUCm2RGk4pdjPkiIse54p7pOUJaFYvWWcrO0zD/SD197BSbpJDnzYRTCjbuwcCO7dBi86DNE8JB2c5Z4lLImCnZH5uBY"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_147","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742AAFA02C3A73"}}}]}', 'Timestamp': '2024-12-31T17:32:32.205Z', 'SignatureVersion': '1', 'Signature': 'HsC9mwFP/Uu0ugq2UXv+KeSqnIfo6D+opyNCdhyOlHIWq9q2SB1CM9+WmcQIw0liJDaRs7DgR30k6vO0mnOwf6k2qEBRfM6yVodptP5+wxuAiGP3BBRV6F/z1P+KujHG4qp8EBhvMZKFSze5bAWNY0PRYWc9yj7PmU07xeHoJ0uPIdyzSyU+nztqlBf9Z5F5UH/H8U+eu1BDclp35kBNX7Na0sLsoshJqExpiB9Y0hTRRJzrWm3EEXHhROhtZyck/0y/u/a+LjdlI6ro5FlvZtQnTP7Vzqo9bGSRzaVNDUrzu00VzZ6gdrRHU9fKzmslDjbJ3pyAOWveFDpqwGeQlA==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'dict' object has no attribute 'id'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:34:20.430Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '27RS2D6VCTNDXJAQ', 'x-amz-id-2': 'BKMv5Wslinrbp8ja/L7Y0WdaRR76onpU8K5jWMYR2DdXUhq4wl5Hikl/bfNU90KJZkJv/P6h8VYSB9KXUtV8ne9iHfIzSUJF'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_148', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742B1C62C37864'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '274bb0ac-d923-5c2e-8adc-ef42f47e98a7', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:34:20.430Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"27RS2D6VCTNDXJAQ","x-amz-id-2":"BKMv5Wslinrbp8ja/L7Y0WdaRR76onpU8K5jWMYR2DdXUhq4wl5Hikl/bfNU90KJZkJv/P6h8VYSB9KXUtV8ne9iHfIzSUJF"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_148","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742B1C62C37864"}}}]}', 'Timestamp': '2024-12-31T17:34:21.089Z', 'SignatureVersion': '1', 'Signature': 'cmlyBDAmhHfQc/wMu+eYLLwkJPEs/o82qZvunhmxEyjKUC0G5xF98ChzVAQENABIY/TJdlW8KqT9ol+ikCfy8HmT+B4CVrLwG/mgZKcRzZRWIkWMWWcZzJZOU0TcdqUDH6++kVfozZSY7Se/5pbKX9Va5XjQmxznsq6Hk8+cWL6xr1yIRcKMXELM1JGK6Xcj+SoAQ2Qizs+Dzg25BEJgJXDn+xkMTSGyDyQDlAyBYPj7qhfrWrYezw8gSvFuJpMSPc88pKmImZMbHEU3GmfhHRhplxGlgDLfw3QHxeIgrnjAGf1Yged8OQuGjNT7NzbBPQVJtHVABwh/dfb+1xeCrw==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'dict' object has no attribute 'id'
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 105, in post
    photo_classification = self.request_photo_classification(body.id)
                                                             ^^^^^^^
AttributeError: 'dict' object has no attribute 'id'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:34:20.430Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '27RS2D6VCTNDXJAQ', 'x-amz-id-2': 'BKMv5Wslinrbp8ja/L7Y0WdaRR76onpU8K5jWMYR2DdXUhq4wl5Hikl/bfNU90KJZkJv/P6h8VYSB9KXUtV8ne9iHfIzSUJF'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_148', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742B1C62C37864'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '274bb0ac-d923-5c2e-8adc-ef42f47e98a7', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:34:20.430Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"27RS2D6VCTNDXJAQ","x-amz-id-2":"BKMv5Wslinrbp8ja/L7Y0WdaRR76onpU8K5jWMYR2DdXUhq4wl5Hikl/bfNU90KJZkJv/P6h8VYSB9KXUtV8ne9iHfIzSUJF"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_148","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742B1C62C37864"}}}]}', 'Timestamp': '2024-12-31T17:34:21.089Z', 'SignatureVersion': '1', 'Signature': 'cmlyBDAmhHfQc/wMu+eYLLwkJPEs/o82qZvunhmxEyjKUC0G5xF98ChzVAQENABIY/TJdlW8KqT9ol+ikCfy8HmT+B4CVrLwG/mgZKcRzZRWIkWMWWcZzJZOU0TcdqUDH6++kVfozZSY7Se/5pbKX9Va5XjQmxznsq6Hk8+cWL6xr1yIRcKMXELM1JGK6Xcj+SoAQ2Qizs+Dzg25BEJgJXDn+xkMTSGyDyQDlAyBYPj7qhfrWrYezw8gSvFuJpMSPc88pKmImZMbHEU3GmfhHRhplxGlgDLfw3QHxeIgrnjAGf1Yged8OQuGjNT7NzbBPQVJtHVABwh/dfb+1xeCrw==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'dict' object has no attribute 'id'
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 105, in post
    photo_classification = self.request_photo_classification(body.id)
                                                             ^^^^^^^
AttributeError: 'dict' object has no attribute 'id'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:34:20.430Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '27RS2D6VCTNDXJAQ', 'x-amz-id-2': 'BKMv5Wslinrbp8ja/L7Y0WdaRR76onpU8K5jWMYR2DdXUhq4wl5Hikl/bfNU90KJZkJv/P6h8VYSB9KXUtV8ne9iHfIzSUJF'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_148', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742B1C62C37864'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '274bb0ac-d923-5c2e-8adc-ef42f47e98a7', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:34:20.430Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"27RS2D6VCTNDXJAQ","x-amz-id-2":"BKMv5Wslinrbp8ja/L7Y0WdaRR76onpU8K5jWMYR2DdXUhq4wl5Hikl/bfNU90KJZkJv/P6h8VYSB9KXUtV8ne9iHfIzSUJF"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_148","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742B1C62C37864"}}}]}', 'Timestamp': '2024-12-31T17:34:21.089Z', 'SignatureVersion': '1', 'Signature': 'cmlyBDAmhHfQc/wMu+eYLLwkJPEs/o82qZvunhmxEyjKUC0G5xF98ChzVAQENABIY/TJdlW8KqT9ol+ikCfy8HmT+B4CVrLwG/mgZKcRzZRWIkWMWWcZzJZOU0TcdqUDH6++kVfozZSY7Se/5pbKX9Va5XjQmxznsq6Hk8+cWL6xr1yIRcKMXELM1JGK6Xcj+SoAQ2Qizs+Dzg25BEJgJXDn+xkMTSGyDyQDlAyBYPj7qhfrWrYezw8gSvFuJpMSPc88pKmImZMbHEU3GmfhHRhplxGlgDLfw3QHxeIgrnjAGf1Yged8OQuGjNT7NzbBPQVJtHVABwh/dfb+1xeCrw==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'dict' object has no attribute 'id'
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 105, in post
    photo_classification = self.request_photo_classification(body.id)
                                                             ^^^^^^^
AttributeError: 'dict' object has no attribute 'id'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:34:20.430Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '27RS2D6VCTNDXJAQ', 'x-amz-id-2': 'BKMv5Wslinrbp8ja/L7Y0WdaRR76onpU8K5jWMYR2DdXUhq4wl5Hikl/bfNU90KJZkJv/P6h8VYSB9KXUtV8ne9iHfIzSUJF'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_148', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742B1C62C37864'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '274bb0ac-d923-5c2e-8adc-ef42f47e98a7', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:34:20.430Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"27RS2D6VCTNDXJAQ","x-amz-id-2":"BKMv5Wslinrbp8ja/L7Y0WdaRR76onpU8K5jWMYR2DdXUhq4wl5Hikl/bfNU90KJZkJv/P6h8VYSB9KXUtV8ne9iHfIzSUJF"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_148","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742B1C62C37864"}}}]}', 'Timestamp': '2024-12-31T17:34:21.089Z', 'SignatureVersion': '1', 'Signature': 'cmlyBDAmhHfQc/wMu+eYLLwkJPEs/o82qZvunhmxEyjKUC0G5xF98ChzVAQENABIY/TJdlW8KqT9ol+ikCfy8HmT+B4CVrLwG/mgZKcRzZRWIkWMWWcZzJZOU0TcdqUDH6++kVfozZSY7Se/5pbKX9Va5XjQmxznsq6Hk8+cWL6xr1yIRcKMXELM1JGK6Xcj+SoAQ2Qizs+Dzg25BEJgJXDn+xkMTSGyDyQDlAyBYPj7qhfrWrYezw8gSvFuJpMSPc88pKmImZMbHEU3GmfhHRhplxGlgDLfw3QHxeIgrnjAGf1Yged8OQuGjNT7NzbBPQVJtHVABwh/dfb+1xeCrw==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'dict' object has no attribute 'id'
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 105, in post
    photo_classification = self.request_photo_classification(body.id)
                                                             ^^^^^^^
AttributeError: 'dict' object has no attribute 'id'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Error processing SNS notification: Unsupported media type "text/plain; charset=UTF-8" in request.
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 95, in post
    logger.info(f'Request Data: {request.data}')
                                 ^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/request.py", line 220, in data
    self._load_data_and_files()
  File "/usr/local/lib/python3.11/site-packages/rest_framework/request.py", line 283, in _load_data_and_files
    self._data, self._files = self._parse()
                              ^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/request.py", line 355, in _parse
    raise exceptions.UnsupportedMediaType(media_type)
rest_framework.exceptions.UnsupportedMediaType: Unsupported media type "text/plain; charset=UTF-8" in request.
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:43:07.970Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'F8QH3VABT7TZVRA1', 'x-amz-id-2': 'qq87+lDEpmgvjLNj76vtf08byf0hoyli1yLqcZ6RiG5w/p+oSrv10UEWcfLq+Y5siU/3Pez/YHtB6ue9gK4xlSeUXB7yxJX8'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_150', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742D2BEC160FD4'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '4df35645-ae01-53fd-8daa-09ab816db354', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:43:07.970Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"F8QH3VABT7TZVRA1","x-amz-id-2":"qq87+lDEpmgvjLNj76vtf08byf0hoyli1yLqcZ6RiG5w/p+oSrv10UEWcfLq+Y5siU/3Pez/YHtB6ue9gK4xlSeUXB7yxJX8"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_150","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742D2BEC160FD4"}}}]}', 'Timestamp': '2024-12-31T17:43:08.946Z', 'SignatureVersion': '1', 'Signature': 'p2+w0Pa+2+ct6T63Yp7/j5nHIQHobjGIDuJH7biIuoGPvdaWOewY9NBW27lDXWIPnhamLoDwhnrfU77vqu4bwxgoFsNYLboaJlx/uAothHQVYHjxHiy9HT6AhAc8IzEDYn6vxvOAmCv+kgk+wjx3JYBXL4cB2j3tlgpzAdmGEqmSdLm8ZrExwzpE7SA/1aOZ69iYyGoicIUS+hJbBVPzo6XfX8xYVqjPnABbf29bIHKv+YXDYkhFLBuHt5Y828Seqh7OxAE1V/Q1xzE49QoZlxMAaI7ecf1pf9VKSvSuMdSa3in7NjfhjDULNnw/qPM6lDrVs+eBzO9Z3pWo8ZQARg==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'Response' object has no attribute 'json'
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 105, in post
    response_data = notif_resp.json()
                    ^^^^^^^^^^^^^^^
AttributeError: 'Response' object has no attribute 'json'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:43:07.970Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'F8QH3VABT7TZVRA1', 'x-amz-id-2': 'qq87+lDEpmgvjLNj76vtf08byf0hoyli1yLqcZ6RiG5w/p+oSrv10UEWcfLq+Y5siU/3Pez/YHtB6ue9gK4xlSeUXB7yxJX8'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_150', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742D2BEC160FD4'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '4df35645-ae01-53fd-8daa-09ab816db354', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:43:07.970Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"F8QH3VABT7TZVRA1","x-amz-id-2":"qq87+lDEpmgvjLNj76vtf08byf0hoyli1yLqcZ6RiG5w/p+oSrv10UEWcfLq+Y5siU/3Pez/YHtB6ue9gK4xlSeUXB7yxJX8"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_150","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742D2BEC160FD4"}}}]}', 'Timestamp': '2024-12-31T17:43:08.946Z', 'SignatureVersion': '1', 'Signature': 'p2+w0Pa+2+ct6T63Yp7/j5nHIQHobjGIDuJH7biIuoGPvdaWOewY9NBW27lDXWIPnhamLoDwhnrfU77vqu4bwxgoFsNYLboaJlx/uAothHQVYHjxHiy9HT6AhAc8IzEDYn6vxvOAmCv+kgk+wjx3JYBXL4cB2j3tlgpzAdmGEqmSdLm8ZrExwzpE7SA/1aOZ69iYyGoicIUS+hJbBVPzo6XfX8xYVqjPnABbf29bIHKv+YXDYkhFLBuHt5Y828Seqh7OxAE1V/Q1xzE49QoZlxMAaI7ecf1pf9VKSvSuMdSa3in7NjfhjDULNnw/qPM6lDrVs+eBzO9Z3pWo8ZQARg==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'Response' object has no attribute 'json'
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 105, in post
    response_data = notif_resp.json()
                    ^^^^^^^^^^^^^^^
AttributeError: 'Response' object has no attribute 'json'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:43:07.970Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'F8QH3VABT7TZVRA1', 'x-amz-id-2': 'qq87+lDEpmgvjLNj76vtf08byf0hoyli1yLqcZ6RiG5w/p+oSrv10UEWcfLq+Y5siU/3Pez/YHtB6ue9gK4xlSeUXB7yxJX8'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_150', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742D2BEC160FD4'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '4df35645-ae01-53fd-8daa-09ab816db354', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:43:07.970Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"F8QH3VABT7TZVRA1","x-amz-id-2":"qq87+lDEpmgvjLNj76vtf08byf0hoyli1yLqcZ6RiG5w/p+oSrv10UEWcfLq+Y5siU/3Pez/YHtB6ue9gK4xlSeUXB7yxJX8"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_150","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742D2BEC160FD4"}}}]}', 'Timestamp': '2024-12-31T17:43:08.946Z', 'SignatureVersion': '1', 'Signature': 'p2+w0Pa+2+ct6T63Yp7/j5nHIQHobjGIDuJH7biIuoGPvdaWOewY9NBW27lDXWIPnhamLoDwhnrfU77vqu4bwxgoFsNYLboaJlx/uAothHQVYHjxHiy9HT6AhAc8IzEDYn6vxvOAmCv+kgk+wjx3JYBXL4cB2j3tlgpzAdmGEqmSdLm8ZrExwzpE7SA/1aOZ69iYyGoicIUS+hJbBVPzo6XfX8xYVqjPnABbf29bIHKv+YXDYkhFLBuHt5Y828Seqh7OxAE1V/Q1xzE49QoZlxMAaI7ecf1pf9VKSvSuMdSa3in7NjfhjDULNnw/qPM6lDrVs+eBzO9Z3pWo8ZQARg==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'Response' object has no attribute 'json'
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 105, in post
    response_data = notif_resp.json()
                    ^^^^^^^^^^^^^^^
AttributeError: 'Response' object has no attribute 'json'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:44:48.901Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'RHY3QSYZPPXGRPXD', 'x-amz-id-2': '2OTLy16k1c3mjjV5uWjfgMCiDgKLOEtZRP13DPUHGVXrfNXeFkrKlnXbojLhlLPvGCgbw8tU+r6wJ6626hE0Uo0NKiMij2dE'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_151', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742D90D4D96C3D'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '818949fd-935c-5376-8ad4-1613bc8d8dbd', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:44:48.901Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"RHY3QSYZPPXGRPXD","x-amz-id-2":"2OTLy16k1c3mjjV5uWjfgMCiDgKLOEtZRP13DPUHGVXrfNXeFkrKlnXbojLhlLPvGCgbw8tU+r6wJ6626hE0Uo0NKiMij2dE"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_151","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742D90D4D96C3D"}}}]}', 'Timestamp': '2024-12-31T17:44:49.466Z', 'SignatureVersion': '1', 'Signature': 'Ue+4QoIhcGGX15zYnd2Nyk4fSuod5TwTlTEfWpg0mazV78jSfx1GgjFM4e4ydGerfX7nPCIxcWESi7pDV62xFx+caNWqc3wpIP6dcWR0y+6NzVtvWohUorrANY2Re12CM0hanpncSSYmIYNB5PUELpkWQZdJ5ogmBzqSfkz1iq8FG/Jaht7cgtDds+yEJtXQTwsBN7u0uMaR0XhFXniaKaF1EFjCTOS+jaVFhEZ4BFrbSU5SE+8uanuA7VzwU45+URbo7WYOD76BvYXliQPx/vULfzZKyfwJEhGigZoYwfNbhFfdV46dWb/xfau4N7iuvOSMAB55XnMKYFtueWqZFg==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: 'message'
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 106, in post
    message = notif_resp['Message']
              ~~~~~~~~~~^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/http/response.py", line 199, in __getitem__
    return self.headers[header]
           ~~~~~~~~~~~~^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/utils/datastructures.py", line 308, in __getitem__
    return self._store[key.lower()][1]
           ~~~~~~~~~~~^^^^^^^^^^^^^
KeyError: 'message'
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:45:08.286Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'A27ZDM85F6ACKA22', 'x-amz-id-2': 'piV+HwQH7q8kdUuKDudYfu5gFjbKmYafc6OzvYvpgmfA/gS0Sdz09BOftyOL8uyn+5bLyfAra7UvjFkNextir8sTMki+R3s+'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_152', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742DA4412A25B2'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'c22e5c3a-c24c-51db-9c85-03d4eda9f1ca', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:45:08.286Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"A27ZDM85F6ACKA22","x-amz-id-2":"piV+HwQH7q8kdUuKDudYfu5gFjbKmYafc6OzvYvpgmfA/gS0Sdz09BOftyOL8uyn+5bLyfAra7UvjFkNextir8sTMki+R3s+"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_152","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742DA4412A25B2"}}}]}', 'Timestamp': '2024-12-31T17:45:09.296Z', 'SignatureVersion': '1', 'Signature': 'F2G+eI68ju/iFAsIcJzcVVjnjZ/KlFdUq4K5w5sTouCYvaf/gc2lM6X4jDiwmpph9K6qC7pGxF1fmCRSJYXnmxTposO9qVWf6O82FKYg746XXoxycGrIO9SWYMKQtXHMuQHMPb+RHtFWC2PlLXL0kPzL87VjuY5DSY0Q/1M9QDJ3V/J1ythBmojWA9Q0vYNvIgS6HDqz3LPzoPXbku/BuxQgWpRB8ogggxV2UgRl+zK5Cjn3ApES3VotJsuDgdNuytj4upLJIDtt4UyVQa4g8blrky2Mdky+WkTBv6P9JmQMZbIUBhmbottfKNq4BHtwGzuk8YMeaJ4DRy37YtzeKA==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: the JSON object must be str, bytes or bytearray, not Response
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 107, in post
    parsed_message = json.loads(message)
                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/json/__init__.py", line 339, in loads
    raise TypeError(f'the JSON object must be str, bytes or bytearray, '
TypeError: the JSON object must be str, bytes or bytearray, not Response
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:44:48.901Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'RHY3QSYZPPXGRPXD', 'x-amz-id-2': '2OTLy16k1c3mjjV5uWjfgMCiDgKLOEtZRP13DPUHGVXrfNXeFkrKlnXbojLhlLPvGCgbw8tU+r6wJ6626hE0Uo0NKiMij2dE'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_151', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742D90D4D96C3D'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '818949fd-935c-5376-8ad4-1613bc8d8dbd', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:44:48.901Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"RHY3QSYZPPXGRPXD","x-amz-id-2":"2OTLy16k1c3mjjV5uWjfgMCiDgKLOEtZRP13DPUHGVXrfNXeFkrKlnXbojLhlLPvGCgbw8tU+r6wJ6626hE0Uo0NKiMij2dE"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_151","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742D90D4D96C3D"}}}]}', 'Timestamp': '2024-12-31T17:44:49.466Z', 'SignatureVersion': '1', 'Signature': 'Ue+4QoIhcGGX15zYnd2Nyk4fSuod5TwTlTEfWpg0mazV78jSfx1GgjFM4e4ydGerfX7nPCIxcWESi7pDV62xFx+caNWqc3wpIP6dcWR0y+6NzVtvWohUorrANY2Re12CM0hanpncSSYmIYNB5PUELpkWQZdJ5ogmBzqSfkz1iq8FG/Jaht7cgtDds+yEJtXQTwsBN7u0uMaR0XhFXniaKaF1EFjCTOS+jaVFhEZ4BFrbSU5SE+8uanuA7VzwU45+URbo7WYOD76BvYXliQPx/vULfzZKyfwJEhGigZoYwfNbhFfdV46dWb/xfau4N7iuvOSMAB55XnMKYFtueWqZFg==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
Error processing SNS notification: the JSON object must be str, bytes or bytearray, not Response
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 107, in post
    parsed_message = json.loads(message)
                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/json/__init__.py", line 339, in loads
    raise TypeError(f'the JSON object must be str, bytes or bytearray, '
TypeError: the JSON object must be str, bytes or bytearray, not Response
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:45:08.286Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'A27ZDM85F6ACKA22', 'x-amz-id-2': 'piV+HwQH7q8kdUuKDudYfu5gFjbKmYafc6OzvYvpgmfA/gS0Sdz09BOftyOL8uyn+5bLyfAra7UvjFkNextir8sTMki+R3s+'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_152', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742DA4412A25B2'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'c22e5c3a-c24c-51db-9c85-03d4eda9f1ca', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:45:08.286Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"A27ZDM85F6ACKA22","x-amz-id-2":"piV+HwQH7q8kdUuKDudYfu5gFjbKmYafc6OzvYvpgmfA/gS0Sdz09BOftyOL8uyn+5bLyfAra7UvjFkNextir8sTMki+R3s+"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_152","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742DA4412A25B2"}}}]}', 'Timestamp': '2024-12-31T17:45:09.296Z', 'SignatureVersion': '1', 'Signature': 'F2G+eI68ju/iFAsIcJzcVVjnjZ/KlFdUq4K5w5sTouCYvaf/gc2lM6X4jDiwmpph9K6qC7pGxF1fmCRSJYXnmxTposO9qVWf6O82FKYg746XXoxycGrIO9SWYMKQtXHMuQHMPb+RHtFWC2PlLXL0kPzL87VjuY5DSY0Q/1M9QDJ3V/J1ythBmojWA9Q0vYNvIgS6HDqz3LPzoPXbku/BuxQgWpRB8ogggxV2UgRl+zK5Cjn3ApES3VotJsuDgdNuytj4upLJIDtt4UyVQa4g8blrky2Mdky+WkTBv6P9JmQMZbIUBhmbottfKNq4BHtwGzuk8YMeaJ4DRy37YtzeKA==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_152
Error processing SNS notification: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/152/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/152/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/152/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(key.split('_')[1])
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/152/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/152/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/152/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>

Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:44:48.901Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'RHY3QSYZPPXGRPXD', 'x-amz-id-2': '2OTLy16k1c3mjjV5uWjfgMCiDgKLOEtZRP13DPUHGVXrfNXeFkrKlnXbojLhlLPvGCgbw8tU+r6wJ6626hE0Uo0NKiMij2dE'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_151', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742D90D4D96C3D'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '818949fd-935c-5376-8ad4-1613bc8d8dbd', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:44:48.901Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"RHY3QSYZPPXGRPXD","x-amz-id-2":"2OTLy16k1c3mjjV5uWjfgMCiDgKLOEtZRP13DPUHGVXrfNXeFkrKlnXbojLhlLPvGCgbw8tU+r6wJ6626hE0Uo0NKiMij2dE"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_151","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742D90D4D96C3D"}}}]}', 'Timestamp': '2024-12-31T17:44:49.466Z', 'SignatureVersion': '1', 'Signature': 'Ue+4QoIhcGGX15zYnd2Nyk4fSuod5TwTlTEfWpg0mazV78jSfx1GgjFM4e4ydGerfX7nPCIxcWESi7pDV62xFx+caNWqc3wpIP6dcWR0y+6NzVtvWohUorrANY2Re12CM0hanpncSSYmIYNB5PUELpkWQZdJ5ogmBzqSfkz1iq8FG/Jaht7cgtDds+yEJtXQTwsBN7u0uMaR0XhFXniaKaF1EFjCTOS+jaVFhEZ4BFrbSU5SE+8uanuA7VzwU45+URbo7WYOD76BvYXliQPx/vULfzZKyfwJEhGigZoYwfNbhFfdV46dWb/xfau4N7iuvOSMAB55XnMKYFtueWqZFg==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_151
Error processing SNS notification: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/151/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/151/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/151/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(key.split('_')[1])
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/151/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/151/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/151/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>

Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:45:35.449Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'NS607ZNZ4E3ZJ5A0', 'x-amz-id-2': 'gNaEXMtPHitkMw1JmeSya/lTZlj7g+aTuWz17ofBwJ36scH2BiU/KW+3ZAvC0ttBMrllpaeqOp+F7dv4w1rzcWL+cv1IU4uU'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_153', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742DBF693203C3'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '104b0e4c-0f5f-5122-a79d-51a23f5f42ec', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:45:35.449Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"NS607ZNZ4E3ZJ5A0","x-amz-id-2":"gNaEXMtPHitkMw1JmeSya/lTZlj7g+aTuWz17ofBwJ36scH2BiU/KW+3ZAvC0ttBMrllpaeqOp+F7dv4w1rzcWL+cv1IU4uU"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_153","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742DBF693203C3"}}}]}', 'Timestamp': '2024-12-31T17:45:36.705Z', 'SignatureVersion': '1', 'Signature': 'YJS9ydPcmOG1pXYOfruMMHSxRMEvZJK67sejk1M/BCsHqGb5BYosZVxtPKBvqzp1g9vVn08X5CaQQURs675Qnm319Jp/44NiU4MVUyTslDcpUQ0yZ929oXQebrhLrGD3lqj26FHTh435OseXVGwueZui0FhsG67I2XnsnO99Qyu5jPxY9MVvANAVxiFZvgBLBPi3BZ/jT6JRKuJMdiVAtPkoJ+WSbX7YrvLlIkkw/4bEpr0Q69bo/+uuQ8ncsYJZg8kiWXkBPEtcHtSIHI/v6xAMozqLB+YYafIMeq8lnP1TovOw/9wKyeIwrhkCsWhiMZ6x/9sp2MiVNCTpaAU8Rg==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_153
Error processing SNS notification: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/153/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/153/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/153/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(key.split('_')[1])
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/153/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/153/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/153/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>

Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:45:08.286Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'A27ZDM85F6ACKA22', 'x-amz-id-2': 'piV+HwQH7q8kdUuKDudYfu5gFjbKmYafc6OzvYvpgmfA/gS0Sdz09BOftyOL8uyn+5bLyfAra7UvjFkNextir8sTMki+R3s+'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_152', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742DA4412A25B2'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'c22e5c3a-c24c-51db-9c85-03d4eda9f1ca', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:45:08.286Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"A27ZDM85F6ACKA22","x-amz-id-2":"piV+HwQH7q8kdUuKDudYfu5gFjbKmYafc6OzvYvpgmfA/gS0Sdz09BOftyOL8uyn+5bLyfAra7UvjFkNextir8sTMki+R3s+"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_152","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742DA4412A25B2"}}}]}', 'Timestamp': '2024-12-31T17:45:09.296Z', 'SignatureVersion': '1', 'Signature': 'F2G+eI68ju/iFAsIcJzcVVjnjZ/KlFdUq4K5w5sTouCYvaf/gc2lM6X4jDiwmpph9K6qC7pGxF1fmCRSJYXnmxTposO9qVWf6O82FKYg746XXoxycGrIO9SWYMKQtXHMuQHMPb+RHtFWC2PlLXL0kPzL87VjuY5DSY0Q/1M9QDJ3V/J1ythBmojWA9Q0vYNvIgS6HDqz3LPzoPXbku/BuxQgWpRB8ogggxV2UgRl+zK5Cjn3ApES3VotJsuDgdNuytj4upLJIDtt4UyVQa4g8blrky2Mdky+WkTBv6P9JmQMZbIUBhmbottfKNq4BHtwGzuk8YMeaJ4DRy37YtzeKA==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_152
Error processing SNS notification: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/152/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/152/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/152/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(key.split('_')[1])
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/152/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/152/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/152/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>

Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:44:48.901Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'RHY3QSYZPPXGRPXD', 'x-amz-id-2': '2OTLy16k1c3mjjV5uWjfgMCiDgKLOEtZRP13DPUHGVXrfNXeFkrKlnXbojLhlLPvGCgbw8tU+r6wJ6626hE0Uo0NKiMij2dE'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_151', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742D90D4D96C3D'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '818949fd-935c-5376-8ad4-1613bc8d8dbd', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:44:48.901Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"RHY3QSYZPPXGRPXD","x-amz-id-2":"2OTLy16k1c3mjjV5uWjfgMCiDgKLOEtZRP13DPUHGVXrfNXeFkrKlnXbojLhlLPvGCgbw8tU+r6wJ6626hE0Uo0NKiMij2dE"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_151","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742D90D4D96C3D"}}}]}', 'Timestamp': '2024-12-31T17:44:49.466Z', 'SignatureVersion': '1', 'Signature': 'Ue+4QoIhcGGX15zYnd2Nyk4fSuod5TwTlTEfWpg0mazV78jSfx1GgjFM4e4ydGerfX7nPCIxcWESi7pDV62xFx+caNWqc3wpIP6dcWR0y+6NzVtvWohUorrANY2Re12CM0hanpncSSYmIYNB5PUELpkWQZdJ5ogmBzqSfkz1iq8FG/Jaht7cgtDds+yEJtXQTwsBN7u0uMaR0XhFXniaKaF1EFjCTOS+jaVFhEZ4BFrbSU5SE+8uanuA7VzwU45+URbo7WYOD76BvYXliQPx/vULfzZKyfwJEhGigZoYwfNbhFfdV46dWb/xfau4N7iuvOSMAB55XnMKYFtueWqZFg==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_151
Error processing SNS notification: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/151/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/151/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/151/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(key.split('_')[1])
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/151/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/151/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/151/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>

Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:45:35.449Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'NS607ZNZ4E3ZJ5A0', 'x-amz-id-2': 'gNaEXMtPHitkMw1JmeSya/lTZlj7g+aTuWz17ofBwJ36scH2BiU/KW+3ZAvC0ttBMrllpaeqOp+F7dv4w1rzcWL+cv1IU4uU'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_153', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742DBF693203C3'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '104b0e4c-0f5f-5122-a79d-51a23f5f42ec', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:45:35.449Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"NS607ZNZ4E3ZJ5A0","x-amz-id-2":"gNaEXMtPHitkMw1JmeSya/lTZlj7g+aTuWz17ofBwJ36scH2BiU/KW+3ZAvC0ttBMrllpaeqOp+F7dv4w1rzcWL+cv1IU4uU"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_153","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742DBF693203C3"}}}]}', 'Timestamp': '2024-12-31T17:45:36.705Z', 'SignatureVersion': '1', 'Signature': 'YJS9ydPcmOG1pXYOfruMMHSxRMEvZJK67sejk1M/BCsHqGb5BYosZVxtPKBvqzp1g9vVn08X5CaQQURs675Qnm319Jp/44NiU4MVUyTslDcpUQ0yZ929oXQebrhLrGD3lqj26FHTh435OseXVGwueZui0FhsG67I2XnsnO99Qyu5jPxY9MVvANAVxiFZvgBLBPi3BZ/jT6JRKuJMdiVAtPkoJ+WSbX7YrvLlIkkw/4bEpr0Q69bo/+uuQ8ncsYJZg8kiWXkBPEtcHtSIHI/v6xAMozqLB+YYafIMeq8lnP1TovOw/9wKyeIwrhkCsWhiMZ6x/9sp2MiVNCTpaAU8Rg==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_153
Error processing SNS notification: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/153/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/153/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/153/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(key.split('_')[1])
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/153/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/153/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/153/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>

Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:45:08.286Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'A27ZDM85F6ACKA22', 'x-amz-id-2': 'piV+HwQH7q8kdUuKDudYfu5gFjbKmYafc6OzvYvpgmfA/gS0Sdz09BOftyOL8uyn+5bLyfAra7UvjFkNextir8sTMki+R3s+'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_152', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742DA4412A25B2'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'c22e5c3a-c24c-51db-9c85-03d4eda9f1ca', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:45:08.286Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"A27ZDM85F6ACKA22","x-amz-id-2":"piV+HwQH7q8kdUuKDudYfu5gFjbKmYafc6OzvYvpgmfA/gS0Sdz09BOftyOL8uyn+5bLyfAra7UvjFkNextir8sTMki+R3s+"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_152","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742DA4412A25B2"}}}]}', 'Timestamp': '2024-12-31T17:45:09.296Z', 'SignatureVersion': '1', 'Signature': 'F2G+eI68ju/iFAsIcJzcVVjnjZ/KlFdUq4K5w5sTouCYvaf/gc2lM6X4jDiwmpph9K6qC7pGxF1fmCRSJYXnmxTposO9qVWf6O82FKYg746XXoxycGrIO9SWYMKQtXHMuQHMPb+RHtFWC2PlLXL0kPzL87VjuY5DSY0Q/1M9QDJ3V/J1ythBmojWA9Q0vYNvIgS6HDqz3LPzoPXbku/BuxQgWpRB8ogggxV2UgRl+zK5Cjn3ApES3VotJsuDgdNuytj4upLJIDtt4UyVQa4g8blrky2Mdky+WkTBv6P9JmQMZbIUBhmbottfKNq4BHtwGzuk8YMeaJ4DRy37YtzeKA==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_152
Error processing SNS notification: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/152/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/152/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/152/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(key.split('_')[1])
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/152/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/152/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/152/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>

Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:45:35.449Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'NS607ZNZ4E3ZJ5A0', 'x-amz-id-2': 'gNaEXMtPHitkMw1JmeSya/lTZlj7g+aTuWz17ofBwJ36scH2BiU/KW+3ZAvC0ttBMrllpaeqOp+F7dv4w1rzcWL+cv1IU4uU'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_153', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742DBF693203C3'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '104b0e4c-0f5f-5122-a79d-51a23f5f42ec', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:45:35.449Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"NS607ZNZ4E3ZJ5A0","x-amz-id-2":"gNaEXMtPHitkMw1JmeSya/lTZlj7g+aTuWz17ofBwJ36scH2BiU/KW+3ZAvC0ttBMrllpaeqOp+F7dv4w1rzcWL+cv1IU4uU"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_153","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742DBF693203C3"}}}]}', 'Timestamp': '2024-12-31T17:45:36.705Z', 'SignatureVersion': '1', 'Signature': 'YJS9ydPcmOG1pXYOfruMMHSxRMEvZJK67sejk1M/BCsHqGb5BYosZVxtPKBvqzp1g9vVn08X5CaQQURs675Qnm319Jp/44NiU4MVUyTslDcpUQ0yZ929oXQebrhLrGD3lqj26FHTh435OseXVGwueZui0FhsG67I2XnsnO99Qyu5jPxY9MVvANAVxiFZvgBLBPi3BZ/jT6JRKuJMdiVAtPkoJ+WSbX7YrvLlIkkw/4bEpr0Q69bo/+uuQ8ncsYJZg8kiWXkBPEtcHtSIHI/v6xAMozqLB+YYafIMeq8lnP1TovOw/9wKyeIwrhkCsWhiMZ6x/9sp2MiVNCTpaAU8Rg==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_153
Error processing SNS notification: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/153/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/153/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/153/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(key.split('_')[1])
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/153/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/153/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/153/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>

Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:47:09.841Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '179ARHCFG7XD3SAQ', 'x-amz-id-2': 'rzH8Y550j34yxfjydoWY2afmLDJ4fSWaErrtQevS84u4aNMHBHm+THpmvU2l6xs6F2+0WUn8jtVQARq/oi/0IrgNdDEOX90b'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_154', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742E1DCBEC66A4'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'cad33e16-d738-5a92-8d18-61f8e767dbf5', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:47:09.841Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"179ARHCFG7XD3SAQ","x-amz-id-2":"rzH8Y550j34yxfjydoWY2afmLDJ4fSWaErrtQevS84u4aNMHBHm+THpmvU2l6xs6F2+0WUn8jtVQARq/oi/0IrgNdDEOX90b"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_154","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742E1DCBEC66A4"}}}]}', 'Timestamp': '2024-12-31T17:47:11.027Z', 'SignatureVersion': '1', 'Signature': 'HHUAwu/cv41HRbd1w8qW8+VjsKHXFeRa3db5nQITrH1L3/ATxfUkgK8rCBUwVnM4/NjL6MPhudPMIDE+9mLN2/9cgfJe7yPp+LTJbpxl4JKpfHZ1EzYOHueB9zY8RLd+ZNk/Jf9ko9x3PTHDleib4DfzQ3NBN9ModJgsKZXCYohdkwc29Hjh2mDirN1XA6Kf2HDGfK8tvIE6S3rCSmN305PIBxPyuQLpTj/KLw3gsBMgi5c1VmgsRWIXaS90HjclVGvBlKJjIJMeopFCXn4o5QnPHn6f344z5Ix7jCjo/Vd7Q3nyfYbjHI0bvwCq2QCzCcnqDW+3SB3um5ULdrtkrw==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_154
154
classification complete
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:50:52.025Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'QMWH45RPE5H0YN1J', 'x-amz-id-2': '2TP9/7RtrqSGUsduH6g/19u79EAb04q9RkHdbwTPyTMe3QJmbJCce3jE//LAFd3/ZSSXI0yre+8ueTExhI7r6rxrKHTm+uvP'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_155', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742EFBF9074716'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'dcec46f2-2fd4-5329-a21f-191c1ee83a80', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:50:52.025Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"QMWH45RPE5H0YN1J","x-amz-id-2":"2TP9/7RtrqSGUsduH6g/19u79EAb04q9RkHdbwTPyTMe3QJmbJCce3jE//LAFd3/ZSSXI0yre+8ueTExhI7r6rxrKHTm+uvP"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_155","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742EFBF9074716"}}}]}', 'Timestamp': '2024-12-31T17:50:52.914Z', 'SignatureVersion': '1', 'Signature': 'RQ//T5GNb7k2qV8Og6fbeRkOWk42hxCBO5tTzJFxPMlgt88NLyHlc3KC4RCh2SLSUvjfV/IUHGmU4el6EDfQq0Q/tv4ZmDAIIBIfvIuuc2xnChQsDWV+rCvrcKViOFceX1l/BojAVbfHXwMr/Sl3P63Ma6pnZV1qEUO134Mo9IIpU8U7jdYngNuaR/hz8LsGjQmEDH6X3yiwjg9GfarRNDMYLesu4HowYAM3EVlZTMa7c1Cg+vvp37RooS9SF+1EHiPe8EP1FpVNyLGpv9aVaKRyM7iVYNg6AS/hA/89rMr5zpAcoU3X/Gc5kF/GMXdwisI/hTqNfesHs+6R6Bjycw==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_155
Error processing SNS notification: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/155/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/155/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/155/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/155/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/155/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/155/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>

Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:50:52.025Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'QMWH45RPE5H0YN1J', 'x-amz-id-2': '2TP9/7RtrqSGUsduH6g/19u79EAb04q9RkHdbwTPyTMe3QJmbJCce3jE//LAFd3/ZSSXI0yre+8ueTExhI7r6rxrKHTm+uvP'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_155', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742EFBF9074716'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'dcec46f2-2fd4-5329-a21f-191c1ee83a80', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:50:52.025Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"QMWH45RPE5H0YN1J","x-amz-id-2":"2TP9/7RtrqSGUsduH6g/19u79EAb04q9RkHdbwTPyTMe3QJmbJCce3jE//LAFd3/ZSSXI0yre+8ueTExhI7r6rxrKHTm+uvP"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_155","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742EFBF9074716"}}}]}', 'Timestamp': '2024-12-31T17:50:52.914Z', 'SignatureVersion': '1', 'Signature': 'RQ//T5GNb7k2qV8Og6fbeRkOWk42hxCBO5tTzJFxPMlgt88NLyHlc3KC4RCh2SLSUvjfV/IUHGmU4el6EDfQq0Q/tv4ZmDAIIBIfvIuuc2xnChQsDWV+rCvrcKViOFceX1l/BojAVbfHXwMr/Sl3P63Ma6pnZV1qEUO134Mo9IIpU8U7jdYngNuaR/hz8LsGjQmEDH6X3yiwjg9GfarRNDMYLesu4HowYAM3EVlZTMa7c1Cg+vvp37RooS9SF+1EHiPe8EP1FpVNyLGpv9aVaKRyM7iVYNg6AS/hA/89rMr5zpAcoU3X/Gc5kF/GMXdwisI/hTqNfesHs+6R6Bjycw==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_155
Error processing SNS notification: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/155/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/155/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/155/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/155/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/155/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/155/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>

Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:50:52.025Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'QMWH45RPE5H0YN1J', 'x-amz-id-2': '2TP9/7RtrqSGUsduH6g/19u79EAb04q9RkHdbwTPyTMe3QJmbJCce3jE//LAFd3/ZSSXI0yre+8ueTExhI7r6rxrKHTm+uvP'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_155', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742EFBF9074716'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'dcec46f2-2fd4-5329-a21f-191c1ee83a80', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:50:52.025Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"QMWH45RPE5H0YN1J","x-amz-id-2":"2TP9/7RtrqSGUsduH6g/19u79EAb04q9RkHdbwTPyTMe3QJmbJCce3jE//LAFd3/ZSSXI0yre+8ueTExhI7r6rxrKHTm+uvP"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_155","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742EFBF9074716"}}}]}', 'Timestamp': '2024-12-31T17:50:52.914Z', 'SignatureVersion': '1', 'Signature': 'RQ//T5GNb7k2qV8Og6fbeRkOWk42hxCBO5tTzJFxPMlgt88NLyHlc3KC4RCh2SLSUvjfV/IUHGmU4el6EDfQq0Q/tv4ZmDAIIBIfvIuuc2xnChQsDWV+rCvrcKViOFceX1l/BojAVbfHXwMr/Sl3P63Ma6pnZV1qEUO134Mo9IIpU8U7jdYngNuaR/hz8LsGjQmEDH6X3yiwjg9GfarRNDMYLesu4HowYAM3EVlZTMa7c1Cg+vvp37RooS9SF+1EHiPe8EP1FpVNyLGpv9aVaKRyM7iVYNg6AS/hA/89rMr5zpAcoU3X/Gc5kF/GMXdwisI/hTqNfesHs+6R6Bjycw==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_155
Error processing SNS notification: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/155/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/155/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/155/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/155/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/155/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/155/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>

Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:50:52.025Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'QMWH45RPE5H0YN1J', 'x-amz-id-2': '2TP9/7RtrqSGUsduH6g/19u79EAb04q9RkHdbwTPyTMe3QJmbJCce3jE//LAFd3/ZSSXI0yre+8ueTExhI7r6rxrKHTm+uvP'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_155', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742EFBF9074716'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'dcec46f2-2fd4-5329-a21f-191c1ee83a80', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:50:52.025Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"QMWH45RPE5H0YN1J","x-amz-id-2":"2TP9/7RtrqSGUsduH6g/19u79EAb04q9RkHdbwTPyTMe3QJmbJCce3jE//LAFd3/ZSSXI0yre+8ueTExhI7r6rxrKHTm+uvP"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_155","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742EFBF9074716"}}}]}', 'Timestamp': '2024-12-31T17:50:52.914Z', 'SignatureVersion': '1', 'Signature': 'RQ//T5GNb7k2qV8Og6fbeRkOWk42hxCBO5tTzJFxPMlgt88NLyHlc3KC4RCh2SLSUvjfV/IUHGmU4el6EDfQq0Q/tv4ZmDAIIBIfvIuuc2xnChQsDWV+rCvrcKViOFceX1l/BojAVbfHXwMr/Sl3P63Ma6pnZV1qEUO134Mo9IIpU8U7jdYngNuaR/hz8LsGjQmEDH6X3yiwjg9GfarRNDMYLesu4HowYAM3EVlZTMa7c1Cg+vvp37RooS9SF+1EHiPe8EP1FpVNyLGpv9aVaKRyM7iVYNg6AS/hA/89rMr5zpAcoU3X/Gc5kF/GMXdwisI/hTqNfesHs+6R6Bjycw==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_155
Error processing SNS notification: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/155/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/155/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/155/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 404 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /predict/155/</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>GET</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://fa8c-76-126-145-131.ngrok-free.app/predict/155/</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>food_identifier.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                photos/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                food/
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>predict/155/</code>,
        
        didn’t match any of these.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>

Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:53:19.273Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'HEJAJG3ETK5N9B25', 'x-amz-id-2': 'Il0uvypw3NkQE4KYvHFcnokf7Zi2jDoCGYWSxP/AISdOPED2TzMqtaBdhCXNlZswSLq86YPvBmeTyz9RyOU7vYkWbixlEwJ5'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_157', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742F8F3AE2E8FF'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'aeacac0e-b7c3-5536-a242-f3e08613176d', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:53:19.273Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"HEJAJG3ETK5N9B25","x-amz-id-2":"Il0uvypw3NkQE4KYvHFcnokf7Zi2jDoCGYWSxP/AISdOPED2TzMqtaBdhCXNlZswSLq86YPvBmeTyz9RyOU7vYkWbixlEwJ5"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_157","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742F8F3AE2E8FF"}}}]}', 'Timestamp': '2024-12-31T17:53:20.102Z', 'SignatureVersion': '1', 'Signature': 'ixOktWTS/41X79aLLLx40pSO86k83fkTEvzxRbGCSiM9L11yO3p1Fhxu7PwJZwFDzmcvvp7t5p/tQkqgpO/ocywgmeJI9z16CT1XqIthlozyfFtERl6PaNaoBMGypS+PXGP3FMlV/j1JhDmJWaF3fZUq55lWovsgx7TOXnLUosgHmSQyzNBqNI1fxyVS1HObX3eGtCLUdERE0EtbzZPfzKOGaxeZkGp83+JDfZzjnmJJumHcipX6ci7kIjhYV2L0uoONO4Ho1jP7hMdn+YZrQQJNdx187V6GyKOKNVOvQiqmZmhhm8I7B4XJ0rtK6Q19/ixhc9bMlFhDOdlQoNTbeA==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_157
Error processing SNS notification: Error from classification API: 405 - {"detail":"Method \"GET\" not allowed."}
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 405 - {"detail":"Method \"GET\" not allowed."}
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:53:19.273Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'HEJAJG3ETK5N9B25', 'x-amz-id-2': 'Il0uvypw3NkQE4KYvHFcnokf7Zi2jDoCGYWSxP/AISdOPED2TzMqtaBdhCXNlZswSLq86YPvBmeTyz9RyOU7vYkWbixlEwJ5'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_157', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742F8F3AE2E8FF'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'aeacac0e-b7c3-5536-a242-f3e08613176d', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:53:19.273Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"HEJAJG3ETK5N9B25","x-amz-id-2":"Il0uvypw3NkQE4KYvHFcnokf7Zi2jDoCGYWSxP/AISdOPED2TzMqtaBdhCXNlZswSLq86YPvBmeTyz9RyOU7vYkWbixlEwJ5"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_157","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742F8F3AE2E8FF"}}}]}', 'Timestamp': '2024-12-31T17:53:20.102Z', 'SignatureVersion': '1', 'Signature': 'ixOktWTS/41X79aLLLx40pSO86k83fkTEvzxRbGCSiM9L11yO3p1Fhxu7PwJZwFDzmcvvp7t5p/tQkqgpO/ocywgmeJI9z16CT1XqIthlozyfFtERl6PaNaoBMGypS+PXGP3FMlV/j1JhDmJWaF3fZUq55lWovsgx7TOXnLUosgHmSQyzNBqNI1fxyVS1HObX3eGtCLUdERE0EtbzZPfzKOGaxeZkGp83+JDfZzjnmJJumHcipX6ci7kIjhYV2L0uoONO4Ho1jP7hMdn+YZrQQJNdx187V6GyKOKNVOvQiqmZmhhm8I7B4XJ0rtK6Q19/ixhc9bMlFhDOdlQoNTbeA==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_157
Error processing SNS notification: Error from classification API: 405 - {"detail":"Method \"GET\" not allowed."}
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 405 - {"detail":"Method \"GET\" not allowed."}
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:53:19.273Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'HEJAJG3ETK5N9B25', 'x-amz-id-2': 'Il0uvypw3NkQE4KYvHFcnokf7Zi2jDoCGYWSxP/AISdOPED2TzMqtaBdhCXNlZswSLq86YPvBmeTyz9RyOU7vYkWbixlEwJ5'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_157', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067742F8F3AE2E8FF'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'aeacac0e-b7c3-5536-a242-f3e08613176d', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:53:19.273Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"HEJAJG3ETK5N9B25","x-amz-id-2":"Il0uvypw3NkQE4KYvHFcnokf7Zi2jDoCGYWSxP/AISdOPED2TzMqtaBdhCXNlZswSLq86YPvBmeTyz9RyOU7vYkWbixlEwJ5"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_157","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067742F8F3AE2E8FF"}}}]}', 'Timestamp': '2024-12-31T17:53:20.102Z', 'SignatureVersion': '1', 'Signature': 'ixOktWTS/41X79aLLLx40pSO86k83fkTEvzxRbGCSiM9L11yO3p1Fhxu7PwJZwFDzmcvvp7t5p/tQkqgpO/ocywgmeJI9z16CT1XqIthlozyfFtERl6PaNaoBMGypS+PXGP3FMlV/j1JhDmJWaF3fZUq55lWovsgx7TOXnLUosgHmSQyzNBqNI1fxyVS1HObX3eGtCLUdERE0EtbzZPfzKOGaxeZkGp83+JDfZzjnmJJumHcipX6ci7kIjhYV2L0uoONO4Ho1jP7hMdn+YZrQQJNdx187V6GyKOKNVOvQiqmZmhhm8I7B4XJ0rtK6Q19/ixhc9bMlFhDOdlQoNTbeA==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_157
Error processing SNS notification: Error from classification API: 405 - {"detail":"Method \"GET\" not allowed."}
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 405 - {"detail":"Method \"GET\" not allowed."}
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:55:35.495Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'XEHH0X2QV3VG222V', 'x-amz-id-2': '3OmPNUFjnIBv12aDQzg726dJSlST3FKKZZYlTCKITo1jqiQMbKcjmVwTq4OBnGrl5dgt5FogyP2VpVFUVMbb4UqKRBJAIpOq'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_158', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067743017752DFA39'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'a16ba20b-06d3-52da-9209-fde5348bfdca', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:55:35.495Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"XEHH0X2QV3VG222V","x-amz-id-2":"3OmPNUFjnIBv12aDQzg726dJSlST3FKKZZYlTCKITo1jqiQMbKcjmVwTq4OBnGrl5dgt5FogyP2VpVFUVMbb4UqKRBJAIpOq"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_158","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067743017752DFA39"}}}]}', 'Timestamp': '2024-12-31T17:55:36.406Z', 'SignatureVersion': '1', 'Signature': 'PNyUIhFmjgmKqVv53JRe7L6KNS8K0sIjOOcReGfysd8lHou3K9KDsEguXT/Ng26CG/WgMgOTJSstm6hT+AVypCat1h4Yzw8nglx3Q6Ps/zZOOIWQVfZ2aE0xL7P8qfTIpw174oP9FOdz6xI+gza5EQu5r4zhevglkI6mmdh+mn+KveL3nZLyJ5h+fjhzl7c+n3hOMiqTBP1An1d/ivkAQ7qAImKtU8GM8P8AJZ5POTY0O8/vdl26fvL6pwCem69+0wcz6LFyWlhAEy8qh+l6la1D0naWHzp++aHMsZ5ZcmBLK0C43jqUgVVcv0l0Keu6BMhf8FDuFRdO/KSxgaxqMA==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_158
Error processing SNS notification: Error from classification API: 201 - {"photo_id":158,"category":"Burger","confidence":0.6889613743891644}
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 201 - {"photo_id":158,"category":"Burger","confidence":0.6889613743891644}
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:55:35.495Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'XEHH0X2QV3VG222V', 'x-amz-id-2': '3OmPNUFjnIBv12aDQzg726dJSlST3FKKZZYlTCKITo1jqiQMbKcjmVwTq4OBnGrl5dgt5FogyP2VpVFUVMbb4UqKRBJAIpOq'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_158', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067743017752DFA39'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'a16ba20b-06d3-52da-9209-fde5348bfdca', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:55:35.495Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"XEHH0X2QV3VG222V","x-amz-id-2":"3OmPNUFjnIBv12aDQzg726dJSlST3FKKZZYlTCKITo1jqiQMbKcjmVwTq4OBnGrl5dgt5FogyP2VpVFUVMbb4UqKRBJAIpOq"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_158","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067743017752DFA39"}}}]}', 'Timestamp': '2024-12-31T17:55:36.406Z', 'SignatureVersion': '1', 'Signature': 'PNyUIhFmjgmKqVv53JRe7L6KNS8K0sIjOOcReGfysd8lHou3K9KDsEguXT/Ng26CG/WgMgOTJSstm6hT+AVypCat1h4Yzw8nglx3Q6Ps/zZOOIWQVfZ2aE0xL7P8qfTIpw174oP9FOdz6xI+gza5EQu5r4zhevglkI6mmdh+mn+KveL3nZLyJ5h+fjhzl7c+n3hOMiqTBP1An1d/ivkAQ7qAImKtU8GM8P8AJZ5POTY0O8/vdl26fvL6pwCem69+0wcz6LFyWlhAEy8qh+l6la1D0naWHzp++aHMsZ5ZcmBLK0C43jqUgVVcv0l0Keu6BMhf8FDuFRdO/KSxgaxqMA==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_158
Error processing SNS notification: Error from classification API: 201 - {"photo_id":158,"category":"Pizza","confidence":0.7946358231424662}
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 201 - {"photo_id":158,"category":"Pizza","confidence":0.7946358231424662}
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:55:35.495Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'XEHH0X2QV3VG222V', 'x-amz-id-2': '3OmPNUFjnIBv12aDQzg726dJSlST3FKKZZYlTCKITo1jqiQMbKcjmVwTq4OBnGrl5dgt5FogyP2VpVFUVMbb4UqKRBJAIpOq'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_158', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067743017752DFA39'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'a16ba20b-06d3-52da-9209-fde5348bfdca', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:55:35.495Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"XEHH0X2QV3VG222V","x-amz-id-2":"3OmPNUFjnIBv12aDQzg726dJSlST3FKKZZYlTCKITo1jqiQMbKcjmVwTq4OBnGrl5dgt5FogyP2VpVFUVMbb4UqKRBJAIpOq"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_158","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067743017752DFA39"}}}]}', 'Timestamp': '2024-12-31T17:55:36.406Z', 'SignatureVersion': '1', 'Signature': 'PNyUIhFmjgmKqVv53JRe7L6KNS8K0sIjOOcReGfysd8lHou3K9KDsEguXT/Ng26CG/WgMgOTJSstm6hT+AVypCat1h4Yzw8nglx3Q6Ps/zZOOIWQVfZ2aE0xL7P8qfTIpw174oP9FOdz6xI+gza5EQu5r4zhevglkI6mmdh+mn+KveL3nZLyJ5h+fjhzl7c+n3hOMiqTBP1An1d/ivkAQ7qAImKtU8GM8P8AJZ5POTY0O8/vdl26fvL6pwCem69+0wcz6LFyWlhAEy8qh+l6la1D0naWHzp++aHMsZ5ZcmBLK0C43jqUgVVcv0l0Keu6BMhf8FDuFRdO/KSxgaxqMA==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_158
Error processing SNS notification: Error from classification API: 201 - {"photo_id":158,"category":"Sushi","confidence":0.603392426257214}
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 201 - {"photo_id":158,"category":"Sushi","confidence":0.603392426257214}
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T17:55:35.495Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'XEHH0X2QV3VG222V', 'x-amz-id-2': '3OmPNUFjnIBv12aDQzg726dJSlST3FKKZZYlTCKITo1jqiQMbKcjmVwTq4OBnGrl5dgt5FogyP2VpVFUVMbb4UqKRBJAIpOq'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_158', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067743017752DFA39'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'a16ba20b-06d3-52da-9209-fde5348bfdca', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T17:55:35.495Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"XEHH0X2QV3VG222V","x-amz-id-2":"3OmPNUFjnIBv12aDQzg726dJSlST3FKKZZYlTCKITo1jqiQMbKcjmVwTq4OBnGrl5dgt5FogyP2VpVFUVMbb4UqKRBJAIpOq"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_158","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067743017752DFA39"}}}]}', 'Timestamp': '2024-12-31T17:55:36.406Z', 'SignatureVersion': '1', 'Signature': 'PNyUIhFmjgmKqVv53JRe7L6KNS8K0sIjOOcReGfysd8lHou3K9KDsEguXT/Ng26CG/WgMgOTJSstm6hT+AVypCat1h4Yzw8nglx3Q6Ps/zZOOIWQVfZ2aE0xL7P8qfTIpw174oP9FOdz6xI+gza5EQu5r4zhevglkI6mmdh+mn+KveL3nZLyJ5h+fjhzl7c+n3hOMiqTBP1An1d/ivkAQ7qAImKtU8GM8P8AJZ5POTY0O8/vdl26fvL6pwCem69+0wcz6LFyWlhAEy8qh+l6la1D0naWHzp++aHMsZ5ZcmBLK0C43jqUgVVcv0l0Keu6BMhf8FDuFRdO/KSxgaxqMA==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_158
Error processing SNS notification: Error from classification API: 201 - {"photo_id":158,"category":"Sushi","confidence":0.7618726010784166}
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 201 - {"photo_id":158,"category":"Sushi","confidence":0.7618726010784166}
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T18:03:36.509Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '353E3MZ7C6JQJ0TJ', 'x-amz-id-2': 'dHAr7/Hl85Yw1+KevMeKmvX62CQB58Em/tR06+JKPAqT52/eJPB4MomQsM2yW0fryMOIMtoolt84OxfoJXrX3iCpFPPOFfzW'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_159', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '00677431F878CB488E'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '75cd5d60-8a95-5ec2-95ac-028ebeacb87d', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T18:03:36.509Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"353E3MZ7C6JQJ0TJ","x-amz-id-2":"dHAr7/Hl85Yw1+KevMeKmvX62CQB58Em/tR06+JKPAqT52/eJPB4MomQsM2yW0fryMOIMtoolt84OxfoJXrX3iCpFPPOFfzW"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_159","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"00677431F878CB488E"}}}]}', 'Timestamp': '2024-12-31T18:03:37.345Z', 'SignatureVersion': '1', 'Signature': 'cqxaTyzex1hhGLx1+X7nqv2PF3mGYstYS8qX1ntndH72joOniCZpK0FPR3Mi51M6SfRgXemTE9vWFVzgV/2C8HROyMwwKxXMPwQwbK+gIK+PZVKzHHC1e5It7ZIZjeUKLi4+uD1qX9DL42WJycqMz/KIo/QFPtQyslilfvl5X29dP6v4QmdULrJ24Pf9qqBDeQkCvf7DR7lRd4q2fesjVvslNqu4Lyt7wOtxxywbpy+tfJAmoHoeMQ2L9FalRz3HNqCQum2A449KVO/qyvHfZaTX+0fCIGh8Qj9okrY1dndlxcL96PUaf38aP11lM6ZJpbjTphTw1+qptiokPqVejg==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_159
Internal Server Error: /food/predict/159/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_identifier/views.py", line 18, in post
    label, _ = FoodLabel.objects.get_or_create(name=result['label'])
                                                    ~~~~~~^^^^^^^^^
KeyError: 'label'
"POST /food/predict/159/ HTTP/1.1" 500 87711
Error processing SNS notification: Error from classification API: 500 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>KeyError
          at /food/predict/159/</title>
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background-color:#fff; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size: 0.6875rem; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #info { padding: 0; }
    #info > * { padding:10px 20px; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size: 0.7rem; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5rem; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<header id="summary">
  <h1>KeyError
       at /food/predict/159/</h1>
  <pre class="exception_value">&#x27;label&#x27;</pre>
  <table class="meta">

    <tr>
      <th scope="row">Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th scope="row">Request URL:</th>
      <td>http://fa8c-76-126-145-131.ngrok-free.app/food/predict/159/</td>
    </tr>

    <tr>
      <th scope="row">Django Version:</th>
      <td>5.1.4</td>
    </tr>

    <tr>
      <th scope="row">Exception Type:</th>
      <td>KeyError</td>
    </tr>


    <tr>
      <th scope="row">Exception Value:</th>
      <td><pre>&#x27;label&#x27;</pre></td>
    </tr>


    <tr>
      <th scope="row">Exception Location:</th>
      <td><span class="fname">/app/photo_identifier/views.py</span>, line 18, in post</td>
    </tr>


    <tr>
      <th scope="row">Raised during:</th>
      <td>photo_identifier.views.PredictFoodView</td>
    </tr>

    <tr>
      <th scope="row">Python Executable:</th>
      <td>/usr/local/bin/python</td>
    </tr>
    <tr>
      <th scope="row">Python Version:</th>
      <td>3.11.11</td>
    </tr>
    <tr>
      <th scope="row">Python Path:</th>
      <td><pre><code>[&#x27;/app&#x27;,
 &#x27;/usr/local/lib/python311.zip&#x27;,
 &#x27;/usr/local/lib/python3.11&#x27;,
 &#x27;/usr/local/lib/python3.11/lib-dynload&#x27;,
 &#x27;/usr/local/lib/python3.11/site-packages&#x27;]</code></pre></td>
    </tr>
    <tr>
      <th scope="row">Server time:</th>
      <td>Tue, 31 Dec 2024 18:03:37 +0000</td>
    </tr>
  </table>
</header>

<main id="info">




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c140672389586816">
              
                <ol start="48" class="pre-context" id="pre140672389586816">
                
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>                response = get_response(request)
                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post140672389586816">
                  
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672389586816">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7ff0dc47ec90&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c140672389592000">
              
                <ol start="190" class="pre-context" id="pre140672389592000">
                
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post140672389592000">
                  
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672389592000">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de99e0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7ff0dc47ec90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de99e0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py</code>, line 65, in _view_wrapper
          

          
            <div class="context" id="c140672389428032">
              
                <ol start="58" class="pre-context" id="pre140672389428032">
                
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre>        async def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre>            return await view_func(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre>        def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="65" class="context-line">
                <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre>            return view_func(request, *args, **kwargs)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='66' class="post-context" id="post140672389428032">
                  
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre>    _view_wrapper.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre>    return wraps(view_func)(_view_wrapper)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672389428032">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de9940&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/views/generic/base.py</code>, line 104, in view
          

          
            <div class="context" id="c140672464795456">
              
                <ol start="97" class="pre-context" id="pre140672464795456">
                
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>            self = cls(**initkwargs)</pre></li>
                
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>            self.setup(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>
                
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>                raise AttributeError(</pre></li>
                
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>
                
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>
                
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="104" class="context-line">
                <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>            return self.dispatch(request, *args, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='105' class="post-context" id="post140672464795456">
                  
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>        view.view_class = cls</pre></li>
                  
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>        view.view_initkwargs = initkwargs</pre></li>
                  
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>
                  
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672464795456">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;photo_identifier.views.PredictFoodView&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c140672389416640">
              
                <ol start="502" class="pre-context" id="pre140672389416640">
                
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>            response = self.handle_exception(exc)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post140672389416640">
                  
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672389416640">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method PredictFoodView.post of &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c140672389417216">
              
                <ol start="462" class="pre-context" id="pre140672389417216">
                
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>            self.raise_uncaught_exception(exc)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post140672389417216">
                  
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672389417216">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {&#x27;photo_id&#x27;: 159},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;,
 &#x27;view&#x27;: &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x7ff0dc9f4360&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c140672389415360">
              
                <ol start="473" class="pre-context" id="pre140672389415360">
                
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>        raise exc
             ^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post140672389415360">
                  
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672389415360">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c140672387594368">
              
                <ol start="499" class="pre-context" id="pre140672387594368">
                
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>            response = handler(request, *args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post140672387594368">
                  
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672387594368">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method PredictFoodView.post of &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/app/photo_identifier/views.py</code>, line 18, in post
          

          
            <div class="context" id="c140672377200512">
              
                <ol start="11" class="pre-context" id="pre140672377200512">
                
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>            # Retrieve the photo</pre></li>
                
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>            photo = Photo.objects.get(id=photo_id)</pre></li>
                
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>            # Run the ML model on the photo</pre></li>
                
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>            result = run_food_model(photo.filename)</pre></li>
                
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>            # Get or create the food label</pre></li>
                
                </ol>
              
              <ol start="18" class="context-line">
                <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>            label, _ = FoodLabel.objects.get_or_create(name=result[&#x27;label&#x27;])
                                                                ^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='19' class="post-context" id="post140672377200512">
                  
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>            # Save the prediction</pre></li>
                  
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>            prediction = FoodPrediction.objects.create(</pre></li>
                  
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>                photo=photo,</pre></li>
                  
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>                label=label,</pre></li>
                  
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>                confidence=result[&#x27;confidence&#x27;]</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672377200512">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>photo</td>
                    <td class="code"><pre>&lt;Photo: Photo 159 - 1kb.png&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>photo_id</td>
                    <td class="code"><pre>159</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>{&#x27;category&#x27;: &#x27;Pizza&#x27;, &#x27;confidence&#x27;: 0.7896969450538273}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="KeyError at /food/predict/159/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://fa8c-76-126-145-131.ngrok-free.app/food/predict/159/

Django Version: 5.1.4
Python Version: 3.11.11
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;photo_handler&#x27;,
 &#x27;photo_identifier&#x27;,
 &#x27;rest_framework&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;]



Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
    ^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_identifier/views.py", line 18, in post
    label, _ = FoodLabel.objects.get_or_create(name=result[&#x27;label&#x27;])
                                                    ^^^^^^^^^^^^^^^

Exception Type: KeyError at /food/predict/159/
Exception Value: &#x27;label&#x27;
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Variable</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>AWS_ACCESS_KEY_ID</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_REGION</td>
          <td class="code"><pre>&#x27;us-east-1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SECRET_ACCESS_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SNS_S3_OBJECT_PUT_NOTIFS</td>
          <td class="code"><pre>&#x27;arn:aws:sns:us-east-1:509399626395:photoUploadAlert&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_STORAGE_BUCKET_NAME</td>
          <td class="code"><pre>&#x27;foodphotobucket&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHOKIDAR_USEPOLLING</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;text/plain&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_URL</td>
          <td class="code"><pre>&#x27;postgres://user:password@db:5432/dbname&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;food_identifier.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GPG_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/root&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOSTNAME</td>
          <td class="code"><pre>&#x27;87634ebf08a0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;python-requests/2.32.3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#x27;76.126.145.131&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_HOST</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_PROTO</td>
          <td class="code"><pre>&#x27;https&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;C.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_AUTHTOKEN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_PUBLIC_URL</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/food/predict/159/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYTHON_SHA256</td>
          <td class="code"><pre>&#x27;2a9920c7a0cd236de33644ed980a13cbbc21058bfdc528febb6081575ed73be3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYTHON_VERSION</td>
          <td class="code"><pre>&#x27;3.11.11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REACT_APP_API_URL</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;172.18.0.3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;87634ebf08a0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#x27;0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WATCHPACK_POLLING</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x7ff0d7ce68f0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>food_identifier.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Setting</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;, &#x27;localhost&#x27;, &#x27;127.0.0.1&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;auth.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_ACCESS_KEY_ID</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_REGION</td>
          <td class="code"><pre>&#x27;us-east-1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SECRET_ACCESS_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SNS_S3_OBJECT_PUT_NOTIFS</td>
          <td class="code"><pre>&#x27;arn:aws:sns:us-east-1:509399626395:photoUploadAlert&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_STORAGE_BUCKET_NAME</td>
          <td class="code"><pre>&#x27;foodphotobucket&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/app&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOWED_ORIGINS</td>
          <td class="code"><pre>[&#x27;http://localhost:3000&#x27;, &#x27;http://fa8c-76-126-145-131.ngrok-free.app&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_HEADERS</td>
          <td class="code"><pre>(&#x27;accept&#x27;,
 &#x27;authorization&#x27;,
 &#x27;content-type&#x27;,
 &#x27;user-agent&#x27;,
 &#x27;x-csrftoken&#x27;,
 &#x27;x-requested-with&#x27;,
 &#x27;ngrok-skip-browser-warning&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_METHODS</td>
          <td class="code"><pre>[&#x27;GET&#x27;, &#x27;POST&#x27;, &#x27;PUT&#x27;, &#x27;DELETE&#x27;, &#x27;OPTIONS&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,
             &#x27;HOST&#x27;: &#x27;db&#x27;,
             &#x27;NAME&#x27;: &#x27;dbname&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;user&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMS_URLFIELD_ASSUME_HTTPS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;photo_handler&#x27;,
 &#x27;photo_identifier&#x27;,
 &#x27;rest_framework&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian Bokmål&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;ug&#x27;, &#x27;Uyghur&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ug&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;en-us&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{&#x27;disable_existing_loggers&#x27;: False,
 &#x27;handlers&#x27;: {&#x27;console&#x27;: {&#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;, &#x27;level&#x27;: &#x27;DEBUG&#x27;},
              &#x27;file&#x27;: {&#x27;class&#x27;: &#x27;logging.FileHandler&#x27;,
                       &#x27;filename&#x27;: &#x27;django_debug.log&#x27;,
                       &#x27;level&#x27;: &#x27;DEBUG&#x27;}},
 &#x27;loggers&#x27;: {&#x27;django&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                        &#x27;level&#x27;: &#x27;ERROR&#x27;,
                        &#x27;propagate&#x27;: True},
             &#x27;django.db.backend&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                                   &#x27;level&#x27;: &#x27;ERROR&#x27;,
                                   &#x27;propagate&#x27;: True},
             &#x27;photo_handler&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                               &#x27;level&#x27;: &#x27;DEBUG&#x27;,
                               &#x27;propagate&#x27;: False}},
 &#x27;version&#x27;: 1}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_PUBLIC_URL</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;food_identifier.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;food_identifier.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [&#x27;/app/photo_handler&#x27;],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;food_identifier.wsgi.application&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>
</main>


  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </footer>

</body>
</html>
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 500 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>KeyError
          at /food/predict/159/</title>
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background-color:#fff; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size: 0.6875rem; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #info { padding: 0; }
    #info > * { padding:10px 20px; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size: 0.7rem; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5rem; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<header id="summary">
  <h1>KeyError
       at /food/predict/159/</h1>
  <pre class="exception_value">&#x27;label&#x27;</pre>
  <table class="meta">

    <tr>
      <th scope="row">Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th scope="row">Request URL:</th>
      <td>http://fa8c-76-126-145-131.ngrok-free.app/food/predict/159/</td>
    </tr>

    <tr>
      <th scope="row">Django Version:</th>
      <td>5.1.4</td>
    </tr>

    <tr>
      <th scope="row">Exception Type:</th>
      <td>KeyError</td>
    </tr>


    <tr>
      <th scope="row">Exception Value:</th>
      <td><pre>&#x27;label&#x27;</pre></td>
    </tr>


    <tr>
      <th scope="row">Exception Location:</th>
      <td><span class="fname">/app/photo_identifier/views.py</span>, line 18, in post</td>
    </tr>


    <tr>
      <th scope="row">Raised during:</th>
      <td>photo_identifier.views.PredictFoodView</td>
    </tr>

    <tr>
      <th scope="row">Python Executable:</th>
      <td>/usr/local/bin/python</td>
    </tr>
    <tr>
      <th scope="row">Python Version:</th>
      <td>3.11.11</td>
    </tr>
    <tr>
      <th scope="row">Python Path:</th>
      <td><pre><code>[&#x27;/app&#x27;,
 &#x27;/usr/local/lib/python311.zip&#x27;,
 &#x27;/usr/local/lib/python3.11&#x27;,
 &#x27;/usr/local/lib/python3.11/lib-dynload&#x27;,
 &#x27;/usr/local/lib/python3.11/site-packages&#x27;]</code></pre></td>
    </tr>
    <tr>
      <th scope="row">Server time:</th>
      <td>Tue, 31 Dec 2024 18:03:37 +0000</td>
    </tr>
  </table>
</header>

<main id="info">




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c140672389586816">
              
                <ol start="48" class="pre-context" id="pre140672389586816">
                
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>                response = get_response(request)
                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post140672389586816">
                  
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre140672389586816', 'post140672389586816')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672389586816">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7ff0dc47ec90&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c140672389592000">
              
                <ol start="190" class="pre-context" id="pre140672389592000">
                
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post140672389592000">
                  
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389592000', 'post140672389592000')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672389592000">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de99e0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7ff0dc47ec90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de99e0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py</code>, line 65, in _view_wrapper
          

          
            <div class="context" id="c140672389428032">
              
                <ol start="58" class="pre-context" id="pre140672389428032">
                
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre>        async def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre>            return await view_func(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre>        def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="65" class="context-line">
                <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre>            return view_func(request, *args, **kwargs)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='66' class="post-context" id="post140672389428032">
                  
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre>    _view_wrapper.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389428032', 'post140672389428032')"><pre>    return wraps(view_func)(_view_wrapper)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672389428032">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de9940&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/views/generic/base.py</code>, line 104, in view
          

          
            <div class="context" id="c140672464795456">
              
                <ol start="97" class="pre-context" id="pre140672464795456">
                
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>            self = cls(**initkwargs)</pre></li>
                
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>            self.setup(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>
                
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>                raise AttributeError(</pre></li>
                
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>
                
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>
                
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="104" class="context-line">
                <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>            return self.dispatch(request, *args, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='105' class="post-context" id="post140672464795456">
                  
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>        view.view_class = cls</pre></li>
                  
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>        view.view_initkwargs = initkwargs</pre></li>
                  
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>
                  
                  <li onclick="toggle('pre140672464795456', 'post140672464795456')"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672464795456">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;photo_identifier.views.PredictFoodView&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c140672389416640">
              
                <ol start="502" class="pre-context" id="pre140672389416640">
                
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>            response = self.handle_exception(exc)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post140672389416640">
                  
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140672389416640', 'post140672389416640')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672389416640">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method PredictFoodView.post of &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c140672389417216">
              
                <ol start="462" class="pre-context" id="pre140672389417216">
                
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>            self.raise_uncaught_exception(exc)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post140672389417216">
                  
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre140672389417216', 'post140672389417216')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672389417216">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {&#x27;photo_id&#x27;: 159},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;,
 &#x27;view&#x27;: &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x7ff0dc9f4360&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c140672389415360">
              
                <ol start="473" class="pre-context" id="pre140672389415360">
                
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>        raise exc
             ^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post140672389415360">
                  
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140672389415360', 'post140672389415360')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672389415360">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c140672387594368">
              
                <ol start="499" class="pre-context" id="pre140672387594368">
                
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>            response = handler(request, *args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post140672387594368">
                  
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140672387594368', 'post140672387594368')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672387594368">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method PredictFoodView.post of &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/app/photo_identifier/views.py</code>, line 18, in post
          

          
            <div class="context" id="c140672377200512">
              
                <ol start="11" class="pre-context" id="pre140672377200512">
                
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>            # Retrieve the photo</pre></li>
                
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>            photo = Photo.objects.get(id=photo_id)</pre></li>
                
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>            # Run the ML model on the photo</pre></li>
                
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>            result = run_food_model(photo.filename)</pre></li>
                
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>            # Get or create the food label</pre></li>
                
                </ol>
              
              <ol start="18" class="context-line">
                <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>            label, _ = FoodLabel.objects.get_or_create(name=result[&#x27;label&#x27;])
                                                                ^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='19' class="post-context" id="post140672377200512">
                  
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>            # Save the prediction</pre></li>
                  
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>            prediction = FoodPrediction.objects.create(</pre></li>
                  
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>                photo=photo,</pre></li>
                  
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>                label=label,</pre></li>
                  
                  <li onclick="toggle('pre140672377200512', 'post140672377200512')"><pre>                confidence=result[&#x27;confidence&#x27;]</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672377200512">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>photo</td>
                    <td class="code"><pre>&lt;Photo: Photo 159 - 1kb.png&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>photo_id</td>
                    <td class="code"><pre>159</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>{&#x27;category&#x27;: &#x27;Pizza&#x27;, &#x27;confidence&#x27;: 0.7896969450538273}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7cd12d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="KeyError at /food/predict/159/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://fa8c-76-126-145-131.ngrok-free.app/food/predict/159/

Django Version: 5.1.4
Python Version: 3.11.11
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;photo_handler&#x27;,
 &#x27;photo_identifier&#x27;,
 &#x27;rest_framework&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;]



Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
    ^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_identifier/views.py", line 18, in post
    label, _ = FoodLabel.objects.get_or_create(name=result[&#x27;label&#x27;])
                                                    ^^^^^^^^^^^^^^^

Exception Type: KeyError at /food/predict/159/
Exception Value: &#x27;label&#x27;
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Variable</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>AWS_ACCESS_KEY_ID</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_REGION</td>
          <td class="code"><pre>&#x27;us-east-1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SECRET_ACCESS_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SNS_S3_OBJECT_PUT_NOTIFS</td>
          <td class="code"><pre>&#x27;arn:aws:sns:us-east-1:509399626395:photoUploadAlert&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_STORAGE_BUCKET_NAME</td>
          <td class="code"><pre>&#x27;foodphotobucket&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHOKIDAR_USEPOLLING</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;text/plain&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_URL</td>
          <td class="code"><pre>&#x27;postgres://user:password@db:5432/dbname&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;food_identifier.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GPG_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/root&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOSTNAME</td>
          <td class="code"><pre>&#x27;87634ebf08a0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;python-requests/2.32.3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#x27;76.126.145.131&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_HOST</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_PROTO</td>
          <td class="code"><pre>&#x27;https&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;C.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_AUTHTOKEN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_PUBLIC_URL</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/food/predict/159/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYTHON_SHA256</td>
          <td class="code"><pre>&#x27;2a9920c7a0cd236de33644ed980a13cbbc21058bfdc528febb6081575ed73be3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYTHON_VERSION</td>
          <td class="code"><pre>&#x27;3.11.11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REACT_APP_API_URL</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;172.18.0.3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;87634ebf08a0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#x27;0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WATCHPACK_POLLING</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x7ff0d7ce68f0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>food_identifier.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Setting</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;, &#x27;localhost&#x27;, &#x27;127.0.0.1&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;auth.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_ACCESS_KEY_ID</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_REGION</td>
          <td class="code"><pre>&#x27;us-east-1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SECRET_ACCESS_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SNS_S3_OBJECT_PUT_NOTIFS</td>
          <td class="code"><pre>&#x27;arn:aws:sns:us-east-1:509399626395:photoUploadAlert&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_STORAGE_BUCKET_NAME</td>
          <td class="code"><pre>&#x27;foodphotobucket&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/app&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOWED_ORIGINS</td>
          <td class="code"><pre>[&#x27;http://localhost:3000&#x27;, &#x27;http://fa8c-76-126-145-131.ngrok-free.app&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_HEADERS</td>
          <td class="code"><pre>(&#x27;accept&#x27;,
 &#x27;authorization&#x27;,
 &#x27;content-type&#x27;,
 &#x27;user-agent&#x27;,
 &#x27;x-csrftoken&#x27;,
 &#x27;x-requested-with&#x27;,
 &#x27;ngrok-skip-browser-warning&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_METHODS</td>
          <td class="code"><pre>[&#x27;GET&#x27;, &#x27;POST&#x27;, &#x27;PUT&#x27;, &#x27;DELETE&#x27;, &#x27;OPTIONS&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,
             &#x27;HOST&#x27;: &#x27;db&#x27;,
             &#x27;NAME&#x27;: &#x27;dbname&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;user&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMS_URLFIELD_ASSUME_HTTPS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;photo_handler&#x27;,
 &#x27;photo_identifier&#x27;,
 &#x27;rest_framework&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian Bokmål&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;ug&#x27;, &#x27;Uyghur&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ug&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;en-us&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{&#x27;disable_existing_loggers&#x27;: False,
 &#x27;handlers&#x27;: {&#x27;console&#x27;: {&#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;, &#x27;level&#x27;: &#x27;DEBUG&#x27;},
              &#x27;file&#x27;: {&#x27;class&#x27;: &#x27;logging.FileHandler&#x27;,
                       &#x27;filename&#x27;: &#x27;django_debug.log&#x27;,
                       &#x27;level&#x27;: &#x27;DEBUG&#x27;}},
 &#x27;loggers&#x27;: {&#x27;django&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                        &#x27;level&#x27;: &#x27;ERROR&#x27;,
                        &#x27;propagate&#x27;: True},
             &#x27;django.db.backend&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                                   &#x27;level&#x27;: &#x27;ERROR&#x27;,
                                   &#x27;propagate&#x27;: True},
             &#x27;photo_handler&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                               &#x27;level&#x27;: &#x27;DEBUG&#x27;,
                               &#x27;propagate&#x27;: False}},
 &#x27;version&#x27;: 1}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_PUBLIC_URL</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;food_identifier.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;food_identifier.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [&#x27;/app/photo_handler&#x27;],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;food_identifier.wsgi.application&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>
</main>


  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </footer>

</body>
</html>

Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T18:03:36.509Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '353E3MZ7C6JQJ0TJ', 'x-amz-id-2': 'dHAr7/Hl85Yw1+KevMeKmvX62CQB58Em/tR06+JKPAqT52/eJPB4MomQsM2yW0fryMOIMtoolt84OxfoJXrX3iCpFPPOFfzW'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_159', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '00677431F878CB488E'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '75cd5d60-8a95-5ec2-95ac-028ebeacb87d', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T18:03:36.509Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"353E3MZ7C6JQJ0TJ","x-amz-id-2":"dHAr7/Hl85Yw1+KevMeKmvX62CQB58Em/tR06+JKPAqT52/eJPB4MomQsM2yW0fryMOIMtoolt84OxfoJXrX3iCpFPPOFfzW"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_159","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"00677431F878CB488E"}}}]}', 'Timestamp': '2024-12-31T18:03:37.345Z', 'SignatureVersion': '1', 'Signature': 'cqxaTyzex1hhGLx1+X7nqv2PF3mGYstYS8qX1ntndH72joOniCZpK0FPR3Mi51M6SfRgXemTE9vWFVzgV/2C8HROyMwwKxXMPwQwbK+gIK+PZVKzHHC1e5It7ZIZjeUKLi4+uD1qX9DL42WJycqMz/KIo/QFPtQyslilfvl5X29dP6v4QmdULrJ24Pf9qqBDeQkCvf7DR7lRd4q2fesjVvslNqu4Lyt7wOtxxywbpy+tfJAmoHoeMQ2L9FalRz3HNqCQum2A449KVO/qyvHfZaTX+0fCIGh8Qj9okrY1dndlxcL96PUaf38aP11lM6ZJpbjTphTw1+qptiokPqVejg==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_159
Internal Server Error: /food/predict/159/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_identifier/views.py", line 18, in post
    label, _ = FoodLabel.objects.get_or_create(name=result['label'])
                                                    ~~~~~~^^^^^^^^^
KeyError: 'label'
"POST /food/predict/159/ HTTP/1.1" 500 87711
Error processing SNS notification: Error from classification API: 500 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>KeyError
          at /food/predict/159/</title>
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background-color:#fff; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size: 0.6875rem; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #info { padding: 0; }
    #info > * { padding:10px 20px; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size: 0.7rem; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5rem; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<header id="summary">
  <h1>KeyError
       at /food/predict/159/</h1>
  <pre class="exception_value">&#x27;label&#x27;</pre>
  <table class="meta">

    <tr>
      <th scope="row">Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th scope="row">Request URL:</th>
      <td>http://fa8c-76-126-145-131.ngrok-free.app/food/predict/159/</td>
    </tr>

    <tr>
      <th scope="row">Django Version:</th>
      <td>5.1.4</td>
    </tr>

    <tr>
      <th scope="row">Exception Type:</th>
      <td>KeyError</td>
    </tr>


    <tr>
      <th scope="row">Exception Value:</th>
      <td><pre>&#x27;label&#x27;</pre></td>
    </tr>


    <tr>
      <th scope="row">Exception Location:</th>
      <td><span class="fname">/app/photo_identifier/views.py</span>, line 18, in post</td>
    </tr>


    <tr>
      <th scope="row">Raised during:</th>
      <td>photo_identifier.views.PredictFoodView</td>
    </tr>

    <tr>
      <th scope="row">Python Executable:</th>
      <td>/usr/local/bin/python</td>
    </tr>
    <tr>
      <th scope="row">Python Version:</th>
      <td>3.11.11</td>
    </tr>
    <tr>
      <th scope="row">Python Path:</th>
      <td><pre><code>[&#x27;/app&#x27;,
 &#x27;/usr/local/lib/python311.zip&#x27;,
 &#x27;/usr/local/lib/python3.11&#x27;,
 &#x27;/usr/local/lib/python3.11/lib-dynload&#x27;,
 &#x27;/usr/local/lib/python3.11/site-packages&#x27;]</code></pre></td>
    </tr>
    <tr>
      <th scope="row">Server time:</th>
      <td>Tue, 31 Dec 2024 18:03:59 +0000</td>
    </tr>
  </table>
</header>

<main id="info">




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c140672376409280">
              
                <ol start="48" class="pre-context" id="pre140672376409280">
                
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>                response = get_response(request)
                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post140672376409280">
                  
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376409280">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7ff0dc47ec90&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c140672376414784">
              
                <ol start="190" class="pre-context" id="pre140672376414784">
                
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post140672376414784">
                  
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376414784">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de99e0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7ff0dc47ec90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de99e0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py</code>, line 65, in _view_wrapper
          

          
            <div class="context" id="c140672376411200">
              
                <ol start="58" class="pre-context" id="pre140672376411200">
                
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre>        async def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre>            return await view_func(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre>        def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="65" class="context-line">
                <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre>            return view_func(request, *args, **kwargs)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='66' class="post-context" id="post140672376411200">
                  
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre>    _view_wrapper.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre>    return wraps(view_func)(_view_wrapper)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376411200">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de9940&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/views/generic/base.py</code>, line 104, in view
          

          
            <div class="context" id="c140672376414528">
              
                <ol start="97" class="pre-context" id="pre140672376414528">
                
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>            self = cls(**initkwargs)</pre></li>
                
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>            self.setup(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>
                
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>                raise AttributeError(</pre></li>
                
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>
                
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>
                
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="104" class="context-line">
                <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>            return self.dispatch(request, *args, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='105' class="post-context" id="post140672376414528">
                  
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>        view.view_class = cls</pre></li>
                  
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>        view.view_initkwargs = initkwargs</pre></li>
                  
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>
                  
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376414528">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;photo_identifier.views.PredictFoodView&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c140672376409344">
              
                <ol start="502" class="pre-context" id="pre140672376409344">
                
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>            response = self.handle_exception(exc)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post140672376409344">
                  
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376409344">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method PredictFoodView.post of &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c140672376414080">
              
                <ol start="462" class="pre-context" id="pre140672376414080">
                
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>            self.raise_uncaught_exception(exc)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post140672376414080">
                  
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376414080">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {&#x27;photo_id&#x27;: 159},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;,
 &#x27;view&#x27;: &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x7ff0dc9f4360&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c140672376409216">
              
                <ol start="473" class="pre-context" id="pre140672376409216">
                
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>        raise exc
             ^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post140672376409216">
                  
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376409216">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c140672388778752">
              
                <ol start="499" class="pre-context" id="pre140672388778752">
                
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>            response = handler(request, *args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post140672388778752">
                  
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672388778752">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method PredictFoodView.post of &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/app/photo_identifier/views.py</code>, line 18, in post
          

          
            <div class="context" id="c140672376937920">
              
                <ol start="11" class="pre-context" id="pre140672376937920">
                
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>            # Retrieve the photo</pre></li>
                
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>            photo = Photo.objects.get(id=photo_id)</pre></li>
                
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>            # Run the ML model on the photo</pre></li>
                
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>            result = run_food_model(photo.filename)</pre></li>
                
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>            # Get or create the food label</pre></li>
                
                </ol>
              
              <ol start="18" class="context-line">
                <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>            label, _ = FoodLabel.objects.get_or_create(name=result[&#x27;label&#x27;])
                                                                ^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='19' class="post-context" id="post140672376937920">
                  
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>            # Save the prediction</pre></li>
                  
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>            prediction = FoodPrediction.objects.create(</pre></li>
                  
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>                photo=photo,</pre></li>
                  
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>                label=label,</pre></li>
                  
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>                confidence=result[&#x27;confidence&#x27;]</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376937920">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>photo</td>
                    <td class="code"><pre>&lt;Photo: Photo 159 - 1kb.png&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>photo_id</td>
                    <td class="code"><pre>159</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>{&#x27;category&#x27;: &#x27;Pasta&#x27;, &#x27;confidence&#x27;: 0.6364132010455427}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="KeyError at /food/predict/159/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://fa8c-76-126-145-131.ngrok-free.app/food/predict/159/

Django Version: 5.1.4
Python Version: 3.11.11
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;photo_handler&#x27;,
 &#x27;photo_identifier&#x27;,
 &#x27;rest_framework&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;]



Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
    ^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_identifier/views.py", line 18, in post
    label, _ = FoodLabel.objects.get_or_create(name=result[&#x27;label&#x27;])
                                                    ^^^^^^^^^^^^^^^

Exception Type: KeyError at /food/predict/159/
Exception Value: &#x27;label&#x27;
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Variable</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>AWS_ACCESS_KEY_ID</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_REGION</td>
          <td class="code"><pre>&#x27;us-east-1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SECRET_ACCESS_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SNS_S3_OBJECT_PUT_NOTIFS</td>
          <td class="code"><pre>&#x27;arn:aws:sns:us-east-1:509399626395:photoUploadAlert&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_STORAGE_BUCKET_NAME</td>
          <td class="code"><pre>&#x27;foodphotobucket&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHOKIDAR_USEPOLLING</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;text/plain&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_URL</td>
          <td class="code"><pre>&#x27;postgres://user:password@db:5432/dbname&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;food_identifier.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GPG_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/root&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOSTNAME</td>
          <td class="code"><pre>&#x27;87634ebf08a0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;python-requests/2.32.3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#x27;76.126.145.131&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_HOST</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_PROTO</td>
          <td class="code"><pre>&#x27;https&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;C.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_AUTHTOKEN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_PUBLIC_URL</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/food/predict/159/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYTHON_SHA256</td>
          <td class="code"><pre>&#x27;2a9920c7a0cd236de33644ed980a13cbbc21058bfdc528febb6081575ed73be3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYTHON_VERSION</td>
          <td class="code"><pre>&#x27;3.11.11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REACT_APP_API_URL</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;172.18.0.3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;87634ebf08a0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#x27;0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WATCHPACK_POLLING</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x7ff0d70a84f0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>food_identifier.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Setting</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;, &#x27;localhost&#x27;, &#x27;127.0.0.1&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;auth.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_ACCESS_KEY_ID</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_REGION</td>
          <td class="code"><pre>&#x27;us-east-1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SECRET_ACCESS_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SNS_S3_OBJECT_PUT_NOTIFS</td>
          <td class="code"><pre>&#x27;arn:aws:sns:us-east-1:509399626395:photoUploadAlert&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_STORAGE_BUCKET_NAME</td>
          <td class="code"><pre>&#x27;foodphotobucket&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/app&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOWED_ORIGINS</td>
          <td class="code"><pre>[&#x27;http://localhost:3000&#x27;, &#x27;http://fa8c-76-126-145-131.ngrok-free.app&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_HEADERS</td>
          <td class="code"><pre>(&#x27;accept&#x27;,
 &#x27;authorization&#x27;,
 &#x27;content-type&#x27;,
 &#x27;user-agent&#x27;,
 &#x27;x-csrftoken&#x27;,
 &#x27;x-requested-with&#x27;,
 &#x27;ngrok-skip-browser-warning&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_METHODS</td>
          <td class="code"><pre>[&#x27;GET&#x27;, &#x27;POST&#x27;, &#x27;PUT&#x27;, &#x27;DELETE&#x27;, &#x27;OPTIONS&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,
             &#x27;HOST&#x27;: &#x27;db&#x27;,
             &#x27;NAME&#x27;: &#x27;dbname&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;user&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMS_URLFIELD_ASSUME_HTTPS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;photo_handler&#x27;,
 &#x27;photo_identifier&#x27;,
 &#x27;rest_framework&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian Bokmål&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;ug&#x27;, &#x27;Uyghur&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ug&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;en-us&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{&#x27;disable_existing_loggers&#x27;: False,
 &#x27;handlers&#x27;: {&#x27;console&#x27;: {&#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;, &#x27;level&#x27;: &#x27;DEBUG&#x27;},
              &#x27;file&#x27;: {&#x27;class&#x27;: &#x27;logging.FileHandler&#x27;,
                       &#x27;filename&#x27;: &#x27;django_debug.log&#x27;,
                       &#x27;level&#x27;: &#x27;DEBUG&#x27;}},
 &#x27;loggers&#x27;: {&#x27;django&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                        &#x27;level&#x27;: &#x27;ERROR&#x27;,
                        &#x27;propagate&#x27;: True},
             &#x27;django.db.backend&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                                   &#x27;level&#x27;: &#x27;ERROR&#x27;,
                                   &#x27;propagate&#x27;: True},
             &#x27;photo_handler&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                               &#x27;level&#x27;: &#x27;DEBUG&#x27;,
                               &#x27;propagate&#x27;: False}},
 &#x27;version&#x27;: 1}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_PUBLIC_URL</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;food_identifier.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;food_identifier.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [&#x27;/app/photo_handler&#x27;],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;food_identifier.wsgi.application&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>
</main>


  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </footer>

</body>
</html>
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 500 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>KeyError
          at /food/predict/159/</title>
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background-color:#fff; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size: 0.6875rem; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #info { padding: 0; }
    #info > * { padding:10px 20px; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size: 0.7rem; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5rem; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<header id="summary">
  <h1>KeyError
       at /food/predict/159/</h1>
  <pre class="exception_value">&#x27;label&#x27;</pre>
  <table class="meta">

    <tr>
      <th scope="row">Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th scope="row">Request URL:</th>
      <td>http://fa8c-76-126-145-131.ngrok-free.app/food/predict/159/</td>
    </tr>

    <tr>
      <th scope="row">Django Version:</th>
      <td>5.1.4</td>
    </tr>

    <tr>
      <th scope="row">Exception Type:</th>
      <td>KeyError</td>
    </tr>


    <tr>
      <th scope="row">Exception Value:</th>
      <td><pre>&#x27;label&#x27;</pre></td>
    </tr>


    <tr>
      <th scope="row">Exception Location:</th>
      <td><span class="fname">/app/photo_identifier/views.py</span>, line 18, in post</td>
    </tr>


    <tr>
      <th scope="row">Raised during:</th>
      <td>photo_identifier.views.PredictFoodView</td>
    </tr>

    <tr>
      <th scope="row">Python Executable:</th>
      <td>/usr/local/bin/python</td>
    </tr>
    <tr>
      <th scope="row">Python Version:</th>
      <td>3.11.11</td>
    </tr>
    <tr>
      <th scope="row">Python Path:</th>
      <td><pre><code>[&#x27;/app&#x27;,
 &#x27;/usr/local/lib/python311.zip&#x27;,
 &#x27;/usr/local/lib/python3.11&#x27;,
 &#x27;/usr/local/lib/python3.11/lib-dynload&#x27;,
 &#x27;/usr/local/lib/python3.11/site-packages&#x27;]</code></pre></td>
    </tr>
    <tr>
      <th scope="row">Server time:</th>
      <td>Tue, 31 Dec 2024 18:03:59 +0000</td>
    </tr>
  </table>
</header>

<main id="info">




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c140672376409280">
              
                <ol start="48" class="pre-context" id="pre140672376409280">
                
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>                response = get_response(request)
                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post140672376409280">
                  
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre140672376409280', 'post140672376409280')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376409280">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7ff0dc47ec90&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c140672376414784">
              
                <ol start="190" class="pre-context" id="pre140672376414784">
                
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post140672376414784">
                  
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376414784', 'post140672376414784')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376414784">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de99e0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7ff0dc47ec90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de99e0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py</code>, line 65, in _view_wrapper
          

          
            <div class="context" id="c140672376411200">
              
                <ol start="58" class="pre-context" id="pre140672376411200">
                
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre>        async def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre>            return await view_func(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre>        def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="65" class="context-line">
                <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre>            return view_func(request, *args, **kwargs)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='66' class="post-context" id="post140672376411200">
                  
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre>    _view_wrapper.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376411200', 'post140672376411200')"><pre>    return wraps(view_func)(_view_wrapper)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376411200">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de9940&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/views/generic/base.py</code>, line 104, in view
          

          
            <div class="context" id="c140672376414528">
              
                <ol start="97" class="pre-context" id="pre140672376414528">
                
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>            self = cls(**initkwargs)</pre></li>
                
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>            self.setup(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>
                
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>                raise AttributeError(</pre></li>
                
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>
                
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>
                
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="104" class="context-line">
                <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>            return self.dispatch(request, *args, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='105' class="post-context" id="post140672376414528">
                  
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>        view.view_class = cls</pre></li>
                  
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>        view.view_initkwargs = initkwargs</pre></li>
                  
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>
                  
                  <li onclick="toggle('pre140672376414528', 'post140672376414528')"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376414528">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;photo_identifier.views.PredictFoodView&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c140672376409344">
              
                <ol start="502" class="pre-context" id="pre140672376409344">
                
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>            response = self.handle_exception(exc)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post140672376409344">
                  
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140672376409344', 'post140672376409344')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376409344">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method PredictFoodView.post of &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c140672376414080">
              
                <ol start="462" class="pre-context" id="pre140672376414080">
                
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>            self.raise_uncaught_exception(exc)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post140672376414080">
                  
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre140672376414080', 'post140672376414080')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376414080">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {&#x27;photo_id&#x27;: 159},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;,
 &#x27;view&#x27;: &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x7ff0dc9f4360&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c140672376409216">
              
                <ol start="473" class="pre-context" id="pre140672376409216">
                
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>        raise exc
             ^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post140672376409216">
                  
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140672376409216', 'post140672376409216')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376409216">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c140672388778752">
              
                <ol start="499" class="pre-context" id="pre140672388778752">
                
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>            response = handler(request, *args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post140672388778752">
                  
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140672388778752', 'post140672388778752')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672388778752">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method PredictFoodView.post of &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/app/photo_identifier/views.py</code>, line 18, in post
          

          
            <div class="context" id="c140672376937920">
              
                <ol start="11" class="pre-context" id="pre140672376937920">
                
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>            # Retrieve the photo</pre></li>
                
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>            photo = Photo.objects.get(id=photo_id)</pre></li>
                
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>            # Run the ML model on the photo</pre></li>
                
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>            result = run_food_model(photo.filename)</pre></li>
                
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>            # Get or create the food label</pre></li>
                
                </ol>
              
              <ol start="18" class="context-line">
                <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>            label, _ = FoodLabel.objects.get_or_create(name=result[&#x27;label&#x27;])
                                                                ^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='19' class="post-context" id="post140672376937920">
                  
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>            # Save the prediction</pre></li>
                  
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>            prediction = FoodPrediction.objects.create(</pre></li>
                  
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>                photo=photo,</pre></li>
                  
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>                label=label,</pre></li>
                  
                  <li onclick="toggle('pre140672376937920', 'post140672376937920')"><pre>                confidence=result[&#x27;confidence&#x27;]</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376937920">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>photo</td>
                    <td class="code"><pre>&lt;Photo: Photo 159 - 1kb.png&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>photo_id</td>
                    <td class="code"><pre>159</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>{&#x27;category&#x27;: &#x27;Pasta&#x27;, &#x27;confidence&#x27;: 0.6364132010455427}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d7068b10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="KeyError at /food/predict/159/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://fa8c-76-126-145-131.ngrok-free.app/food/predict/159/

Django Version: 5.1.4
Python Version: 3.11.11
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;photo_handler&#x27;,
 &#x27;photo_identifier&#x27;,
 &#x27;rest_framework&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;]



Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
    ^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_identifier/views.py", line 18, in post
    label, _ = FoodLabel.objects.get_or_create(name=result[&#x27;label&#x27;])
                                                    ^^^^^^^^^^^^^^^

Exception Type: KeyError at /food/predict/159/
Exception Value: &#x27;label&#x27;
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Variable</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>AWS_ACCESS_KEY_ID</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_REGION</td>
          <td class="code"><pre>&#x27;us-east-1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SECRET_ACCESS_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SNS_S3_OBJECT_PUT_NOTIFS</td>
          <td class="code"><pre>&#x27;arn:aws:sns:us-east-1:509399626395:photoUploadAlert&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_STORAGE_BUCKET_NAME</td>
          <td class="code"><pre>&#x27;foodphotobucket&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHOKIDAR_USEPOLLING</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;text/plain&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_URL</td>
          <td class="code"><pre>&#x27;postgres://user:password@db:5432/dbname&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;food_identifier.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GPG_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/root&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOSTNAME</td>
          <td class="code"><pre>&#x27;87634ebf08a0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;python-requests/2.32.3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#x27;76.126.145.131&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_HOST</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_PROTO</td>
          <td class="code"><pre>&#x27;https&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;C.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_AUTHTOKEN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_PUBLIC_URL</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/food/predict/159/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYTHON_SHA256</td>
          <td class="code"><pre>&#x27;2a9920c7a0cd236de33644ed980a13cbbc21058bfdc528febb6081575ed73be3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYTHON_VERSION</td>
          <td class="code"><pre>&#x27;3.11.11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REACT_APP_API_URL</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;172.18.0.3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;87634ebf08a0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#x27;0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WATCHPACK_POLLING</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x7ff0d70a84f0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>food_identifier.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Setting</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;, &#x27;localhost&#x27;, &#x27;127.0.0.1&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;auth.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_ACCESS_KEY_ID</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_REGION</td>
          <td class="code"><pre>&#x27;us-east-1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SECRET_ACCESS_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SNS_S3_OBJECT_PUT_NOTIFS</td>
          <td class="code"><pre>&#x27;arn:aws:sns:us-east-1:509399626395:photoUploadAlert&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_STORAGE_BUCKET_NAME</td>
          <td class="code"><pre>&#x27;foodphotobucket&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/app&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOWED_ORIGINS</td>
          <td class="code"><pre>[&#x27;http://localhost:3000&#x27;, &#x27;http://fa8c-76-126-145-131.ngrok-free.app&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_HEADERS</td>
          <td class="code"><pre>(&#x27;accept&#x27;,
 &#x27;authorization&#x27;,
 &#x27;content-type&#x27;,
 &#x27;user-agent&#x27;,
 &#x27;x-csrftoken&#x27;,
 &#x27;x-requested-with&#x27;,
 &#x27;ngrok-skip-browser-warning&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_METHODS</td>
          <td class="code"><pre>[&#x27;GET&#x27;, &#x27;POST&#x27;, &#x27;PUT&#x27;, &#x27;DELETE&#x27;, &#x27;OPTIONS&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,
             &#x27;HOST&#x27;: &#x27;db&#x27;,
             &#x27;NAME&#x27;: &#x27;dbname&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;user&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMS_URLFIELD_ASSUME_HTTPS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;photo_handler&#x27;,
 &#x27;photo_identifier&#x27;,
 &#x27;rest_framework&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian Bokmål&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;ug&#x27;, &#x27;Uyghur&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ug&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;en-us&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{&#x27;disable_existing_loggers&#x27;: False,
 &#x27;handlers&#x27;: {&#x27;console&#x27;: {&#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;, &#x27;level&#x27;: &#x27;DEBUG&#x27;},
              &#x27;file&#x27;: {&#x27;class&#x27;: &#x27;logging.FileHandler&#x27;,
                       &#x27;filename&#x27;: &#x27;django_debug.log&#x27;,
                       &#x27;level&#x27;: &#x27;DEBUG&#x27;}},
 &#x27;loggers&#x27;: {&#x27;django&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                        &#x27;level&#x27;: &#x27;ERROR&#x27;,
                        &#x27;propagate&#x27;: True},
             &#x27;django.db.backend&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                                   &#x27;level&#x27;: &#x27;ERROR&#x27;,
                                   &#x27;propagate&#x27;: True},
             &#x27;photo_handler&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                               &#x27;level&#x27;: &#x27;DEBUG&#x27;,
                               &#x27;propagate&#x27;: False}},
 &#x27;version&#x27;: 1}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_PUBLIC_URL</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;food_identifier.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;food_identifier.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [&#x27;/app/photo_handler&#x27;],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;food_identifier.wsgi.application&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>
</main>


  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </footer>

</body>
</html>

Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T18:03:36.509Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '353E3MZ7C6JQJ0TJ', 'x-amz-id-2': 'dHAr7/Hl85Yw1+KevMeKmvX62CQB58Em/tR06+JKPAqT52/eJPB4MomQsM2yW0fryMOIMtoolt84OxfoJXrX3iCpFPPOFfzW'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_159', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '00677431F878CB488E'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '75cd5d60-8a95-5ec2-95ac-028ebeacb87d', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T18:03:36.509Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"353E3MZ7C6JQJ0TJ","x-amz-id-2":"dHAr7/Hl85Yw1+KevMeKmvX62CQB58Em/tR06+JKPAqT52/eJPB4MomQsM2yW0fryMOIMtoolt84OxfoJXrX3iCpFPPOFfzW"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_159","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"00677431F878CB488E"}}}]}', 'Timestamp': '2024-12-31T18:03:37.345Z', 'SignatureVersion': '1', 'Signature': 'cqxaTyzex1hhGLx1+X7nqv2PF3mGYstYS8qX1ntndH72joOniCZpK0FPR3Mi51M6SfRgXemTE9vWFVzgV/2C8HROyMwwKxXMPwQwbK+gIK+PZVKzHHC1e5It7ZIZjeUKLi4+uD1qX9DL42WJycqMz/KIo/QFPtQyslilfvl5X29dP6v4QmdULrJ24Pf9qqBDeQkCvf7DR7lRd4q2fesjVvslNqu4Lyt7wOtxxywbpy+tfJAmoHoeMQ2L9FalRz3HNqCQum2A449KVO/qyvHfZaTX+0fCIGh8Qj9okrY1dndlxcL96PUaf38aP11lM6ZJpbjTphTw1+qptiokPqVejg==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:e09037f4-ae0e-4684-aa8a-b105f858d300'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_159
Internal Server Error: /food/predict/159/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_identifier/views.py", line 18, in post
    label, _ = FoodLabel.objects.get_or_create(name=result['label'])
                                                    ~~~~~~^^^^^^^^^
KeyError: 'label'
"POST /food/predict/159/ HTTP/1.1" 500 87711
Error processing SNS notification: Error from classification API: 500 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>KeyError
          at /food/predict/159/</title>
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background-color:#fff; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size: 0.6875rem; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #info { padding: 0; }
    #info > * { padding:10px 20px; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size: 0.7rem; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5rem; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<header id="summary">
  <h1>KeyError
       at /food/predict/159/</h1>
  <pre class="exception_value">&#x27;label&#x27;</pre>
  <table class="meta">

    <tr>
      <th scope="row">Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th scope="row">Request URL:</th>
      <td>http://fa8c-76-126-145-131.ngrok-free.app/food/predict/159/</td>
    </tr>

    <tr>
      <th scope="row">Django Version:</th>
      <td>5.1.4</td>
    </tr>

    <tr>
      <th scope="row">Exception Type:</th>
      <td>KeyError</td>
    </tr>


    <tr>
      <th scope="row">Exception Value:</th>
      <td><pre>&#x27;label&#x27;</pre></td>
    </tr>


    <tr>
      <th scope="row">Exception Location:</th>
      <td><span class="fname">/app/photo_identifier/views.py</span>, line 18, in post</td>
    </tr>


    <tr>
      <th scope="row">Raised during:</th>
      <td>photo_identifier.views.PredictFoodView</td>
    </tr>

    <tr>
      <th scope="row">Python Executable:</th>
      <td>/usr/local/bin/python</td>
    </tr>
    <tr>
      <th scope="row">Python Version:</th>
      <td>3.11.11</td>
    </tr>
    <tr>
      <th scope="row">Python Path:</th>
      <td><pre><code>[&#x27;/app&#x27;,
 &#x27;/usr/local/lib/python311.zip&#x27;,
 &#x27;/usr/local/lib/python3.11&#x27;,
 &#x27;/usr/local/lib/python3.11/lib-dynload&#x27;,
 &#x27;/usr/local/lib/python3.11/site-packages&#x27;]</code></pre></td>
    </tr>
    <tr>
      <th scope="row">Server time:</th>
      <td>Tue, 31 Dec 2024 18:04:20 +0000</td>
    </tr>
  </table>
</header>

<main id="info">




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c140672376318592">
              
                <ol start="48" class="pre-context" id="pre140672376318592">
                
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>                response = get_response(request)
                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post140672376318592">
                  
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376318592">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7ff0dc47ec90&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c140672376313152">
              
                <ol start="190" class="pre-context" id="pre140672376313152">
                
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post140672376313152">
                  
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376313152">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de99e0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7ff0dc47ec90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de99e0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py</code>, line 65, in _view_wrapper
          

          
            <div class="context" id="c140672376727616">
              
                <ol start="58" class="pre-context" id="pre140672376727616">
                
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre>        async def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre>            return await view_func(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre>        def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="65" class="context-line">
                <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre>            return view_func(request, *args, **kwargs)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='66' class="post-context" id="post140672376727616">
                  
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre>    _view_wrapper.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre>    return wraps(view_func)(_view_wrapper)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376727616">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de9940&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/views/generic/base.py</code>, line 104, in view
          

          
            <div class="context" id="c140672376726272">
              
                <ol start="97" class="pre-context" id="pre140672376726272">
                
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>            self = cls(**initkwargs)</pre></li>
                
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>            self.setup(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>
                
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>                raise AttributeError(</pre></li>
                
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>
                
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>
                
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="104" class="context-line">
                <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>            return self.dispatch(request, *args, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='105' class="post-context" id="post140672376726272">
                  
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>        view.view_class = cls</pre></li>
                  
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>        view.view_initkwargs = initkwargs</pre></li>
                  
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>
                  
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376726272">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;photo_identifier.views.PredictFoodView&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c140672376731968">
              
                <ol start="502" class="pre-context" id="pre140672376731968">
                
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>            response = self.handle_exception(exc)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post140672376731968">
                  
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376731968">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method PredictFoodView.post of &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c140672376727104">
              
                <ol start="462" class="pre-context" id="pre140672376727104">
                
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>            self.raise_uncaught_exception(exc)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post140672376727104">
                  
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376727104">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {&#x27;photo_id&#x27;: 159},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;,
 &#x27;view&#x27;: &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x7ff0dc9f4360&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c140672376723136">
              
                <ol start="473" class="pre-context" id="pre140672376723136">
                
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>        raise exc
             ^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post140672376723136">
                  
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376723136">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c140672376728960">
              
                <ol start="499" class="pre-context" id="pre140672376728960">
                
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>            response = handler(request, *args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post140672376728960">
                  
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376728960">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method PredictFoodView.post of &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/app/photo_identifier/views.py</code>, line 18, in post
          

          
            <div class="context" id="c140672376722368">
              
                <ol start="11" class="pre-context" id="pre140672376722368">
                
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>            # Retrieve the photo</pre></li>
                
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>            photo = Photo.objects.get(id=photo_id)</pre></li>
                
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>            # Run the ML model on the photo</pre></li>
                
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>            result = run_food_model(photo.filename)</pre></li>
                
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>            # Get or create the food label</pre></li>
                
                </ol>
              
              <ol start="18" class="context-line">
                <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>            label, _ = FoodLabel.objects.get_or_create(name=result[&#x27;label&#x27;])
                                                                ^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='19' class="post-context" id="post140672376722368">
                  
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>            # Save the prediction</pre></li>
                  
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>            prediction = FoodPrediction.objects.create(</pre></li>
                  
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>                photo=photo,</pre></li>
                  
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>                label=label,</pre></li>
                  
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>                confidence=result[&#x27;confidence&#x27;]</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376722368">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>photo</td>
                    <td class="code"><pre>&lt;Photo: Photo 159 - 1kb.png&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>photo_id</td>
                    <td class="code"><pre>159</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>{&#x27;category&#x27;: &#x27;Salad&#x27;, &#x27;confidence&#x27;: 0.7178815982001338}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="KeyError at /food/predict/159/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://fa8c-76-126-145-131.ngrok-free.app/food/predict/159/

Django Version: 5.1.4
Python Version: 3.11.11
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;photo_handler&#x27;,
 &#x27;photo_identifier&#x27;,
 &#x27;rest_framework&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;]



Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
    ^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_identifier/views.py", line 18, in post
    label, _ = FoodLabel.objects.get_or_create(name=result[&#x27;label&#x27;])
                                                    ^^^^^^^^^^^^^^^

Exception Type: KeyError at /food/predict/159/
Exception Value: &#x27;label&#x27;
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Variable</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>AWS_ACCESS_KEY_ID</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_REGION</td>
          <td class="code"><pre>&#x27;us-east-1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SECRET_ACCESS_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SNS_S3_OBJECT_PUT_NOTIFS</td>
          <td class="code"><pre>&#x27;arn:aws:sns:us-east-1:509399626395:photoUploadAlert&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_STORAGE_BUCKET_NAME</td>
          <td class="code"><pre>&#x27;foodphotobucket&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHOKIDAR_USEPOLLING</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;text/plain&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_URL</td>
          <td class="code"><pre>&#x27;postgres://user:password@db:5432/dbname&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;food_identifier.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GPG_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/root&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOSTNAME</td>
          <td class="code"><pre>&#x27;87634ebf08a0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;python-requests/2.32.3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#x27;76.126.145.131&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_HOST</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_PROTO</td>
          <td class="code"><pre>&#x27;https&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;C.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_AUTHTOKEN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_PUBLIC_URL</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/food/predict/159/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYTHON_SHA256</td>
          <td class="code"><pre>&#x27;2a9920c7a0cd236de33644ed980a13cbbc21058bfdc528febb6081575ed73be3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYTHON_VERSION</td>
          <td class="code"><pre>&#x27;3.11.11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REACT_APP_API_URL</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;172.18.0.3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;87634ebf08a0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#x27;0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WATCHPACK_POLLING</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x7ff0d7041db0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>food_identifier.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Setting</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;, &#x27;localhost&#x27;, &#x27;127.0.0.1&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;auth.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_ACCESS_KEY_ID</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_REGION</td>
          <td class="code"><pre>&#x27;us-east-1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SECRET_ACCESS_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SNS_S3_OBJECT_PUT_NOTIFS</td>
          <td class="code"><pre>&#x27;arn:aws:sns:us-east-1:509399626395:photoUploadAlert&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_STORAGE_BUCKET_NAME</td>
          <td class="code"><pre>&#x27;foodphotobucket&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/app&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOWED_ORIGINS</td>
          <td class="code"><pre>[&#x27;http://localhost:3000&#x27;, &#x27;http://fa8c-76-126-145-131.ngrok-free.app&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_HEADERS</td>
          <td class="code"><pre>(&#x27;accept&#x27;,
 &#x27;authorization&#x27;,
 &#x27;content-type&#x27;,
 &#x27;user-agent&#x27;,
 &#x27;x-csrftoken&#x27;,
 &#x27;x-requested-with&#x27;,
 &#x27;ngrok-skip-browser-warning&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_METHODS</td>
          <td class="code"><pre>[&#x27;GET&#x27;, &#x27;POST&#x27;, &#x27;PUT&#x27;, &#x27;DELETE&#x27;, &#x27;OPTIONS&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,
             &#x27;HOST&#x27;: &#x27;db&#x27;,
             &#x27;NAME&#x27;: &#x27;dbname&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;user&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMS_URLFIELD_ASSUME_HTTPS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;photo_handler&#x27;,
 &#x27;photo_identifier&#x27;,
 &#x27;rest_framework&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian Bokmål&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;ug&#x27;, &#x27;Uyghur&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ug&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;en-us&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{&#x27;disable_existing_loggers&#x27;: False,
 &#x27;handlers&#x27;: {&#x27;console&#x27;: {&#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;, &#x27;level&#x27;: &#x27;DEBUG&#x27;},
              &#x27;file&#x27;: {&#x27;class&#x27;: &#x27;logging.FileHandler&#x27;,
                       &#x27;filename&#x27;: &#x27;django_debug.log&#x27;,
                       &#x27;level&#x27;: &#x27;DEBUG&#x27;}},
 &#x27;loggers&#x27;: {&#x27;django&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                        &#x27;level&#x27;: &#x27;ERROR&#x27;,
                        &#x27;propagate&#x27;: True},
             &#x27;django.db.backend&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                                   &#x27;level&#x27;: &#x27;ERROR&#x27;,
                                   &#x27;propagate&#x27;: True},
             &#x27;photo_handler&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                               &#x27;level&#x27;: &#x27;DEBUG&#x27;,
                               &#x27;propagate&#x27;: False}},
 &#x27;version&#x27;: 1}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_PUBLIC_URL</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;food_identifier.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;food_identifier.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [&#x27;/app/photo_handler&#x27;],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;food_identifier.wsgi.application&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>
</main>


  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </footer>

</body>
</html>
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code} - {response.text}")
ValueError: Error from classification API: 500 - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>KeyError
          at /food/predict/159/</title>
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background-color:#fff; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size: 0.6875rem; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #info { padding: 0; }
    #info > * { padding:10px 20px; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size: 0.7rem; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5rem; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<header id="summary">
  <h1>KeyError
       at /food/predict/159/</h1>
  <pre class="exception_value">&#x27;label&#x27;</pre>
  <table class="meta">

    <tr>
      <th scope="row">Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th scope="row">Request URL:</th>
      <td>http://fa8c-76-126-145-131.ngrok-free.app/food/predict/159/</td>
    </tr>

    <tr>
      <th scope="row">Django Version:</th>
      <td>5.1.4</td>
    </tr>

    <tr>
      <th scope="row">Exception Type:</th>
      <td>KeyError</td>
    </tr>


    <tr>
      <th scope="row">Exception Value:</th>
      <td><pre>&#x27;label&#x27;</pre></td>
    </tr>


    <tr>
      <th scope="row">Exception Location:</th>
      <td><span class="fname">/app/photo_identifier/views.py</span>, line 18, in post</td>
    </tr>


    <tr>
      <th scope="row">Raised during:</th>
      <td>photo_identifier.views.PredictFoodView</td>
    </tr>

    <tr>
      <th scope="row">Python Executable:</th>
      <td>/usr/local/bin/python</td>
    </tr>
    <tr>
      <th scope="row">Python Version:</th>
      <td>3.11.11</td>
    </tr>
    <tr>
      <th scope="row">Python Path:</th>
      <td><pre><code>[&#x27;/app&#x27;,
 &#x27;/usr/local/lib/python311.zip&#x27;,
 &#x27;/usr/local/lib/python3.11&#x27;,
 &#x27;/usr/local/lib/python3.11/lib-dynload&#x27;,
 &#x27;/usr/local/lib/python3.11/site-packages&#x27;]</code></pre></td>
    </tr>
    <tr>
      <th scope="row">Server time:</th>
      <td>Tue, 31 Dec 2024 18:04:20 +0000</td>
    </tr>
  </table>
</header>

<main id="info">




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c140672376318592">
              
                <ol start="48" class="pre-context" id="pre140672376318592">
                
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>                response = get_response(request)
                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post140672376318592">
                  
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre140672376318592', 'post140672376318592')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376318592">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7ff0dc47ec90&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c140672376313152">
              
                <ol start="190" class="pre-context" id="pre140672376313152">
                
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post140672376313152">
                  
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376313152', 'post140672376313152')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376313152">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de99e0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7ff0dc47ec90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de99e0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py</code>, line 65, in _view_wrapper
          

          
            <div class="context" id="c140672376727616">
              
                <ol start="58" class="pre-context" id="pre140672376727616">
                
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre>        async def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre>            return await view_func(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre>        def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="65" class="context-line">
                <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre>            return view_func(request, *args, **kwargs)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='66' class="post-context" id="post140672376727616">
                  
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre>    _view_wrapper.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376727616', 'post140672376727616')"><pre>    return wraps(view_func)(_view_wrapper)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376727616">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ff0d7de9940&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/django/views/generic/base.py</code>, line 104, in view
          

          
            <div class="context" id="c140672376726272">
              
                <ol start="97" class="pre-context" id="pre140672376726272">
                
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>            self = cls(**initkwargs)</pre></li>
                
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>            self.setup(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>
                
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>                raise AttributeError(</pre></li>
                
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>
                
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>
                
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="104" class="context-line">
                <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>            return self.dispatch(request, *args, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='105' class="post-context" id="post140672376726272">
                  
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>        view.view_class = cls</pre></li>
                  
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>        view.view_initkwargs = initkwargs</pre></li>
                  
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>
                  
                  <li onclick="toggle('pre140672376726272', 'post140672376726272')"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376726272">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;photo_identifier.views.PredictFoodView&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c140672376731968">
              
                <ol start="502" class="pre-context" id="pre140672376731968">
                
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>            response = self.handle_exception(exc)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post140672376731968">
                  
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140672376731968', 'post140672376731968')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376731968">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method PredictFoodView.post of &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c140672376727104">
              
                <ol start="462" class="pre-context" id="pre140672376727104">
                
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>            self.raise_uncaught_exception(exc)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post140672376727104">
                  
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre140672376727104', 'post140672376727104')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376727104">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {&#x27;photo_id&#x27;: 159},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;,
 &#x27;view&#x27;: &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x7ff0dc9f4360&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c140672376723136">
              
                <ol start="473" class="pre-context" id="pre140672376723136">
                
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>        raise exc
             ^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post140672376723136">
                  
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140672376723136', 'post140672376723136')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376723136">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>KeyError(&#x27;label&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/local/lib/python3.11/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c140672376728960">
              
                <ol start="499" class="pre-context" id="pre140672376728960">
                
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>            response = handler(request, *args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post140672376728960">
                  
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140672376728960', 'post140672376728960')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376728960">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method PredictFoodView.post of &lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;photo_id&#x27;: 159}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/app/photo_identifier/views.py</code>, line 18, in post
          

          
            <div class="context" id="c140672376722368">
              
                <ol start="11" class="pre-context" id="pre140672376722368">
                
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>            # Retrieve the photo</pre></li>
                
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>            photo = Photo.objects.get(id=photo_id)</pre></li>
                
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>            # Run the ML model on the photo</pre></li>
                
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>            result = run_food_model(photo.filename)</pre></li>
                
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre></pre></li>
                
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>            # Get or create the food label</pre></li>
                
                </ol>
              
              <ol start="18" class="context-line">
                <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>            label, _ = FoodLabel.objects.get_or_create(name=result[&#x27;label&#x27;])
                                                                ^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='19' class="post-context" id="post140672376722368">
                  
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>            # Save the prediction</pre></li>
                  
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>            prediction = FoodPrediction.objects.create(</pre></li>
                  
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>                photo=photo,</pre></li>
                  
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>                label=label,</pre></li>
                  
                  <li onclick="toggle('pre140672376722368', 'post140672376722368')"><pre>                confidence=result[&#x27;confidence&#x27;]</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140672376722368">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>photo</td>
                    <td class="code"><pre>&lt;Photo: Photo 159 - 1kb.png&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>photo_id</td>
                    <td class="code"><pre>159</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/food/predict/159/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>{&#x27;category&#x27;: &#x27;Salad&#x27;, &#x27;confidence&#x27;: 0.7178815982001338}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;photo_identifier.views.PredictFoodView object at 0x7ff0d70b5410&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="KeyError at /food/predict/159/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://fa8c-76-126-145-131.ngrok-free.app/food/predict/159/

Django Version: 5.1.4
Python Version: 3.11.11
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;photo_handler&#x27;,
 &#x27;photo_identifier&#x27;,
 &#x27;rest_framework&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;]



Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
    ^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_identifier/views.py", line 18, in post
    label, _ = FoodLabel.objects.get_or_create(name=result[&#x27;label&#x27;])
                                                    ^^^^^^^^^^^^^^^

Exception Type: KeyError at /food/predict/159/
Exception Value: &#x27;label&#x27;
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Variable</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>AWS_ACCESS_KEY_ID</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_REGION</td>
          <td class="code"><pre>&#x27;us-east-1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SECRET_ACCESS_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SNS_S3_OBJECT_PUT_NOTIFS</td>
          <td class="code"><pre>&#x27;arn:aws:sns:us-east-1:509399626395:photoUploadAlert&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_STORAGE_BUCKET_NAME</td>
          <td class="code"><pre>&#x27;foodphotobucket&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHOKIDAR_USEPOLLING</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;text/plain&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_URL</td>
          <td class="code"><pre>&#x27;postgres://user:password@db:5432/dbname&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;food_identifier.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GPG_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/root&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOSTNAME</td>
          <td class="code"><pre>&#x27;87634ebf08a0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;python-requests/2.32.3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#x27;76.126.145.131&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_HOST</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_PROTO</td>
          <td class="code"><pre>&#x27;https&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;C.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_AUTHTOKEN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_PUBLIC_URL</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/food/predict/159/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYTHON_SHA256</td>
          <td class="code"><pre>&#x27;2a9920c7a0cd236de33644ed980a13cbbc21058bfdc528febb6081575ed73be3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYTHON_VERSION</td>
          <td class="code"><pre>&#x27;3.11.11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REACT_APP_API_URL</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;172.18.0.3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;87634ebf08a0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#x27;0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WATCHPACK_POLLING</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x7ff0d7041db0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>food_identifier.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Setting</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;, &#x27;localhost&#x27;, &#x27;127.0.0.1&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;auth.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_ACCESS_KEY_ID</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_REGION</td>
          <td class="code"><pre>&#x27;us-east-1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SECRET_ACCESS_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SNS_S3_OBJECT_PUT_NOTIFS</td>
          <td class="code"><pre>&#x27;arn:aws:sns:us-east-1:509399626395:photoUploadAlert&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_STORAGE_BUCKET_NAME</td>
          <td class="code"><pre>&#x27;foodphotobucket&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/app&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOWED_ORIGINS</td>
          <td class="code"><pre>[&#x27;http://localhost:3000&#x27;, &#x27;http://fa8c-76-126-145-131.ngrok-free.app&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_HEADERS</td>
          <td class="code"><pre>(&#x27;accept&#x27;,
 &#x27;authorization&#x27;,
 &#x27;content-type&#x27;,
 &#x27;user-agent&#x27;,
 &#x27;x-csrftoken&#x27;,
 &#x27;x-requested-with&#x27;,
 &#x27;ngrok-skip-browser-warning&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_METHODS</td>
          <td class="code"><pre>[&#x27;GET&#x27;, &#x27;POST&#x27;, &#x27;PUT&#x27;, &#x27;DELETE&#x27;, &#x27;OPTIONS&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,
             &#x27;HOST&#x27;: &#x27;db&#x27;,
             &#x27;NAME&#x27;: &#x27;dbname&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;user&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMS_URLFIELD_ASSUME_HTTPS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;photo_handler&#x27;,
 &#x27;photo_identifier&#x27;,
 &#x27;rest_framework&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian Bokmål&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;ug&#x27;, &#x27;Uyghur&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ug&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;en-us&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{&#x27;disable_existing_loggers&#x27;: False,
 &#x27;handlers&#x27;: {&#x27;console&#x27;: {&#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;, &#x27;level&#x27;: &#x27;DEBUG&#x27;},
              &#x27;file&#x27;: {&#x27;class&#x27;: &#x27;logging.FileHandler&#x27;,
                       &#x27;filename&#x27;: &#x27;django_debug.log&#x27;,
                       &#x27;level&#x27;: &#x27;DEBUG&#x27;}},
 &#x27;loggers&#x27;: {&#x27;django&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                        &#x27;level&#x27;: &#x27;ERROR&#x27;,
                        &#x27;propagate&#x27;: True},
             &#x27;django.db.backend&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                                   &#x27;level&#x27;: &#x27;ERROR&#x27;,
                                   &#x27;propagate&#x27;: True},
             &#x27;photo_handler&#x27;: {&#x27;handlers&#x27;: [&#x27;console&#x27;, &#x27;file&#x27;],
                               &#x27;level&#x27;: &#x27;DEBUG&#x27;,
                               &#x27;propagate&#x27;: False}},
 &#x27;version&#x27;: 1}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NGROK_PUBLIC_URL</td>
          <td class="code"><pre>&#x27;fa8c-76-126-145-131.ngrok-free.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;food_identifier.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;food_identifier.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [&#x27;/app/photo_handler&#x27;],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;food_identifier.wsgi.application&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>
</main>


  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </footer>

</body>
</html>

Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://5b23-76-126-145-131.ngrok-free.app/photos/notifications/
SNSNotificationHandlerView received POST Request
Subscription confirmed successfully
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T18:08:51.627Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'FSFT0DZJAQWM0T7E', 'x-amz-id-2': 'PwHOhgYMyUz+Ry1UqHk2I+JS638QhyDSiSwjoP+759ipaLGPHcEkg9LC+NJV0qIX4y93hoTtfzKfVRxU2jvfucXmGBBaKcy+'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_166', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067743333950AC4E8'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '21bd5083-008e-5017-b001-0f6d35fa8c09', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T18:08:51.627Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"FSFT0DZJAQWM0T7E","x-amz-id-2":"PwHOhgYMyUz+Ry1UqHk2I+JS638QhyDSiSwjoP+759ipaLGPHcEkg9LC+NJV0qIX4y93hoTtfzKfVRxU2jvfucXmGBBaKcy+"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_166","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067743333950AC4E8"}}}]}', 'Timestamp': '2024-12-31T18:08:52.551Z', 'SignatureVersion': '1', 'Signature': 'XuRtly5Et0JP5shDNclp068t2bHhTsJMjwdZHoeoyz5nyMWsjG68ab0hcOA7lrR/hDOLe6VGGhYeNiFc1qT3SzcxFO5hLVKxDMURPJ11/gsX5ZhyDrfqcLH160gwGvQG5iB7FHAFUhDH3ukrVlOQYx5FOgF8KibjmUwgOnPwmeWTo6zUPrMRN5lbaHmkDKfQh0wASzJvPjzl3gNnoXKDI5612LJw0Dz4/PJRMUybtWoc/lvnIoxUXViPzr8ani/Ki+UyYFEaw4jPPhu623nUnTLuuQ7WNQTpCIGlGXXkrCqitYD5VjXfvIcCj7zopcq3W9f/sINAxBb6gnn6gSB8TQ==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:7974f0fd-5738-4098-ab03-b777b596f848'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_166
Internal Server Error: /food/predict/166/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_identifier/views.py", line 18, in post
    label, _ = FoodLabel.objects.get_or_create(name=result['label'])
                                                    ~~~~~~^^^^^^^^^
KeyError: 'label'
"POST /food/predict/166/ HTTP/1.1" 500 87711
Error processing SNS notification: Error from classification API: 500# - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charse
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code}# - {response.text[:100]}")
ValueError: Error from classification API: 500# - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charse
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T18:11:59.946Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'VRA5TGCVSH5P3PK5', 'x-amz-id-2': 'YbvmGKrjwe+nb2PYBbPP+x4NwY+tfzEO6AnB9Pye0jQy3E04vPjrkZGOjIaEmF8LpzPISFGcVyEoGdT6mN7vB5k01ydg0Amp'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_167', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '00677433EFE42BE887'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'd7bfd5b0-d690-5e47-8346-8a5ee0a08fb7', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T18:11:59.946Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"VRA5TGCVSH5P3PK5","x-amz-id-2":"YbvmGKrjwe+nb2PYBbPP+x4NwY+tfzEO6AnB9Pye0jQy3E04vPjrkZGOjIaEmF8LpzPISFGcVyEoGdT6mN7vB5k01ydg0Amp"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_167","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"00677433EFE42BE887"}}}]}', 'Timestamp': '2024-12-31T18:12:00.699Z', 'SignatureVersion': '1', 'Signature': 'gm2ReWaOH/VOfrVPhIcFIRQHezJeefVlZXgl7pXSNdEW/UWZOhoT5kseUUVx8c+sYeqciucIKcgJfQ/NVA6rPX2WB3eLV+n9Fx7JXkwpm70HvT1gaopQSW1W9JV+PRIWuuAAgHI1lEsBiqZZqR9NEXEP3BM9FJ6px73fMunFIUfd2UJZ1JsCiAvqoF1ujLwuWay7NOowzkRwv3dASYDvBo0hW1K5mVRft+3L63Agcu0JzUymwsw7fPiTAfK6suwVAFnL6B5bE08hNAnIw5Bj2cG31Me9/dexvXul7PMTzFlYIbpWfrj09viyCOmzd/hxSTtSMwBZa7M5bXCPWE8FyQ==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:7974f0fd-5738-4098-ab03-b777b596f848'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_167
Internal Server Error: /food/predict/167/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_identifier/views.py", line 18, in post
    label, _ = FoodLabel.objects.get_or_create(name=result['label'])
                                                    ~~~~~~^^^^^^^^^
KeyError: 'label'
"POST /food/predict/167/ HTTP/1.1" 500 87711
Error processing SNS notification: Error from classification API: 500# - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>KeyError
          at /food/predict/167/</title>
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background-color:#fff; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; 
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code}# - {response.text[:500]}")
ValueError: Error from classification API: 500# - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>KeyError
          at /food/predict/167/</title>
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background-color:#fff; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; 
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T18:08:51.627Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'FSFT0DZJAQWM0T7E', 'x-amz-id-2': 'PwHOhgYMyUz+Ry1UqHk2I+JS638QhyDSiSwjoP+759ipaLGPHcEkg9LC+NJV0qIX4y93hoTtfzKfVRxU2jvfucXmGBBaKcy+'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_166', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067743333950AC4E8'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '21bd5083-008e-5017-b001-0f6d35fa8c09', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T18:08:51.627Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"FSFT0DZJAQWM0T7E","x-amz-id-2":"PwHOhgYMyUz+Ry1UqHk2I+JS638QhyDSiSwjoP+759ipaLGPHcEkg9LC+NJV0qIX4y93hoTtfzKfVRxU2jvfucXmGBBaKcy+"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_166","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067743333950AC4E8"}}}]}', 'Timestamp': '2024-12-31T18:08:52.551Z', 'SignatureVersion': '1', 'Signature': 'XuRtly5Et0JP5shDNclp068t2bHhTsJMjwdZHoeoyz5nyMWsjG68ab0hcOA7lrR/hDOLe6VGGhYeNiFc1qT3SzcxFO5hLVKxDMURPJ11/gsX5ZhyDrfqcLH160gwGvQG5iB7FHAFUhDH3ukrVlOQYx5FOgF8KibjmUwgOnPwmeWTo6zUPrMRN5lbaHmkDKfQh0wASzJvPjzl3gNnoXKDI5612LJw0Dz4/PJRMUybtWoc/lvnIoxUXViPzr8ani/Ki+UyYFEaw4jPPhu623nUnTLuuQ7WNQTpCIGlGXXkrCqitYD5VjXfvIcCj7zopcq3W9f/sINAxBb6gnn6gSB8TQ==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:7974f0fd-5738-4098-ab03-b777b596f848'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_166
Internal Server Error: /food/predict/166/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_identifier/views.py", line 18, in post
    label, _ = FoodLabel.objects.get_or_create(name=result['label'])
                                                    ~~~~~~^^^^^^^^^
KeyError: 'label'
"POST /food/predict/166/ HTTP/1.1" 500 87711
Error processing SNS notification: Error from classification API: 500# - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>KeyError
          at /food/predict/166/</title>
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background-color:#fff; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; 
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code}# - {response.text[:500]}")
ValueError: Error from classification API: 500# - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>KeyError
          at /food/predict/166/</title>
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background-color:#fff; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; 
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T18:11:59.946Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'VRA5TGCVSH5P3PK5', 'x-amz-id-2': 'YbvmGKrjwe+nb2PYBbPP+x4NwY+tfzEO6AnB9Pye0jQy3E04vPjrkZGOjIaEmF8LpzPISFGcVyEoGdT6mN7vB5k01ydg0Amp'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_167', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '00677433EFE42BE887'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'd7bfd5b0-d690-5e47-8346-8a5ee0a08fb7', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T18:11:59.946Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"VRA5TGCVSH5P3PK5","x-amz-id-2":"YbvmGKrjwe+nb2PYBbPP+x4NwY+tfzEO6AnB9Pye0jQy3E04vPjrkZGOjIaEmF8LpzPISFGcVyEoGdT6mN7vB5k01ydg0Amp"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_167","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"00677433EFE42BE887"}}}]}', 'Timestamp': '2024-12-31T18:12:00.699Z', 'SignatureVersion': '1', 'Signature': 'gm2ReWaOH/VOfrVPhIcFIRQHezJeefVlZXgl7pXSNdEW/UWZOhoT5kseUUVx8c+sYeqciucIKcgJfQ/NVA6rPX2WB3eLV+n9Fx7JXkwpm70HvT1gaopQSW1W9JV+PRIWuuAAgHI1lEsBiqZZqR9NEXEP3BM9FJ6px73fMunFIUfd2UJZ1JsCiAvqoF1ujLwuWay7NOowzkRwv3dASYDvBo0hW1K5mVRft+3L63Agcu0JzUymwsw7fPiTAfK6suwVAFnL6B5bE08hNAnIw5Bj2cG31Me9/dexvXul7PMTzFlYIbpWfrj09viyCOmzd/hxSTtSMwBZa7M5bXCPWE8FyQ==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:7974f0fd-5738-4098-ab03-b777b596f848'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_167
Internal Server Error: /food/predict/167/
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_identifier/views.py", line 18, in post
    label, _ = FoodLabel.objects.get_or_create(name=result['label'])
                                                    ~~~~~~^^^^^^^^^
KeyError: 'label'
"POST /food/predict/167/ HTTP/1.1" 500 87711
Error processing SNS notification: Error from classification API: 500# - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>KeyError
          at /food/predict/167/</title>
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background-color:#fff; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; 
Traceback (most recent call last):
  File "/app/photo_handler/views.py", line 115, in post
    photo_classification = self.request_photo_classification(photoId)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/photo_handler/views.py", line 192, in request_photo_classification
    raise ValueError(f"Error from classification API: {response.status_code}# - {response.text[:500]}")
ValueError: Error from classification API: 500# - <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>KeyError
          at /food/predict/167/</title>
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background-color:#fff; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; 
Internal Server Error: /photos/notifications/
"POST /photos/notifications/ HTTP/1.1" 500 46
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T18:13:08.698Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'W1C53XXAT13678WC', 'x-amz-id-2': '6fbz3D2r0HGncGcb9ZE0KMBsJ85+/0pjXwX0X2BB+er3SmqB59S1sSRoK/OXBioOPEDmv2PqcQxnv++moMwA/A7Uq8V0AnMU'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_170', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067743434A7E435E3'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '34741f6b-296e-5246-9bfe-40851f1b13c7', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T18:13:08.698Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"W1C53XXAT13678WC","x-amz-id-2":"6fbz3D2r0HGncGcb9ZE0KMBsJ85+/0pjXwX0X2BB+er3SmqB59S1sSRoK/OXBioOPEDmv2PqcQxnv++moMwA/A7Uq8V0AnMU"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_170","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067743434A7E435E3"}}}]}', 'Timestamp': '2024-12-31T18:13:09.965Z', 'SignatureVersion': '1', 'Signature': 'mIm9bMs13r4ItqwwseYE4UGN2IblHKJJAsfsxDZHqjG0xlVCyWD/F9XGszhGxb2708gfZeJXDlcgW06pKjTbgGiopbQcQufCCYoqL6Zr0zrzgLt95ItBGvCSxlcFjPHpQHDTblK+Y3qmojUVMGRAciXKoPzS90COLkNCe7WhKXPglS5g7tryG1qq5fTjoJHcjc2uTtsVjObw3RISsuYRaE1MNUwkourRUx3CDgMVTSkQUGWOh4rri+MjwZLyUIH4Vj34CPHsf9QwkNu7NH1FzKqMQYp9aVVsunE1RwNRve+1eW0bsIqpl3v5sf/EWe5DjU7Jy4XmwftdCus7y4cOGQ==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:7974f0fd-5738-4098-ab03-b777b596f848'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_170
classification complete
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T18:08:51.627Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'FSFT0DZJAQWM0T7E', 'x-amz-id-2': 'PwHOhgYMyUz+Ry1UqHk2I+JS638QhyDSiSwjoP+759ipaLGPHcEkg9LC+NJV0qIX4y93hoTtfzKfVRxU2jvfucXmGBBaKcy+'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_166', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067743333950AC4E8'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': '21bd5083-008e-5017-b001-0f6d35fa8c09', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T18:08:51.627Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"FSFT0DZJAQWM0T7E","x-amz-id-2":"PwHOhgYMyUz+Ry1UqHk2I+JS638QhyDSiSwjoP+759ipaLGPHcEkg9LC+NJV0qIX4y93hoTtfzKfVRxU2jvfucXmGBBaKcy+"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_166","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"0067743333950AC4E8"}}}]}', 'Timestamp': '2024-12-31T18:08:52.551Z', 'SignatureVersion': '1', 'Signature': 'XuRtly5Et0JP5shDNclp068t2bHhTsJMjwdZHoeoyz5nyMWsjG68ab0hcOA7lrR/hDOLe6VGGhYeNiFc1qT3SzcxFO5hLVKxDMURPJ11/gsX5ZhyDrfqcLH160gwGvQG5iB7FHAFUhDH3ukrVlOQYx5FOgF8KibjmUwgOnPwmeWTo6zUPrMRN5lbaHmkDKfQh0wASzJvPjzl3gNnoXKDI5612LJw0Dz4/PJRMUybtWoc/lvnIoxUXViPzr8ani/Ki+UyYFEaw4jPPhu623nUnTLuuQ7WNQTpCIGlGXXkrCqitYD5VjXfvIcCj7zopcq3W9f/sINAxBb6gnn6gSB8TQ==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:7974f0fd-5738-4098-ab03-b777b596f848'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_166
classification complete
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T18:11:59.946Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'VRA5TGCVSH5P3PK5', 'x-amz-id-2': 'YbvmGKrjwe+nb2PYBbPP+x4NwY+tfzEO6AnB9Pye0jQy3E04vPjrkZGOjIaEmF8LpzPISFGcVyEoGdT6mN7vB5k01ydg0Amp'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_167', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '00677433EFE42BE887'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'd7bfd5b0-d690-5e47-8346-8a5ee0a08fb7', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T18:11:59.946Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"VRA5TGCVSH5P3PK5","x-amz-id-2":"YbvmGKrjwe+nb2PYBbPP+x4NwY+tfzEO6AnB9Pye0jQy3E04vPjrkZGOjIaEmF8LpzPISFGcVyEoGdT6mN7vB5k01ydg0Amp"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_167","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"00677433EFE42BE887"}}}]}', 'Timestamp': '2024-12-31T18:12:00.699Z', 'SignatureVersion': '1', 'Signature': 'gm2ReWaOH/VOfrVPhIcFIRQHezJeefVlZXgl7pXSNdEW/UWZOhoT5kseUUVx8c+sYeqciucIKcgJfQ/NVA6rPX2WB3eLV+n9Fx7JXkwpm70HvT1gaopQSW1W9JV+PRIWuuAAgHI1lEsBiqZZqR9NEXEP3BM9FJ6px73fMunFIUfd2UJZ1JsCiAvqoF1ujLwuWay7NOowzkRwv3dASYDvBo0hW1K5mVRft+3L63Agcu0JzUymwsw7fPiTAfK6suwVAFnL6B5bE08hNAnIw5Bj2cG31Me9/dexvXul7PMTzFlYIbpWfrj09viyCOmzd/hxSTtSMwBZa7M5bXCPWE8FyQ==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:7974f0fd-5738-4098-ab03-b777b596f848'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_167
classification complete
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T18:15:46.441Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'RC04GBC172FDAGHD', 'x-amz-id-2': 'jkQaXU39ta29QvXkbO+KCC0RPeUir66QfK1FfcS7GKfHylSxgGuHq7JgA0E6lp0eUha3JQTFUwnP69NEYIiBo39kLPaZ9SnE'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_172', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '00677434D26802E351'}}}]}
Request body Response: {'Type': 'Notification', 'MessageId': 'f5686c02-7cb4-532d-b5de-33ec4ba717ea', 'TopicArn': 'arn:aws:sns:us-east-1:509399626395:photoUploadAlert', 'Subject': 'Amazon S3 Notification', 'Message': '{"Records":[{"eventVersion":"2.1","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2024-12-31T18:15:46.441Z","eventName":"ObjectCreated:Put","userIdentity":{"principalId":"AWS:AIDAXNGUVOKNVXMIRWK5E"},"requestParameters":{"sourceIPAddress":"76.126.145.131"},"responseElements":{"x-amz-request-id":"RC04GBC172FDAGHD","x-amz-id-2":"jkQaXU39ta29QvXkbO+KCC0RPeUir66QfK1FfcS7GKfHylSxgGuHq7JgA0E6lp0eUha3JQTFUwnP69NEYIiBo39kLPaZ9SnE"},"s3":{"s3SchemaVersion":"1.0","configurationId":"uploadStatus","bucket":{"name":"foodphotobucket","ownerIdentity":{"principalId":"A38AYN0NISFBFB"},"arn":"arn:aws:s3:::foodphotobucket"},"object":{"key":"1kb.png_172","size":1049,"eTag":"b3d740c2f83f7ee120fd16eaed266b43","sequencer":"00677434D26802E351"}}}]}', 'Timestamp': '2024-12-31T18:15:47.037Z', 'SignatureVersion': '1', 'Signature': 'mNvi6Xqw/sqAynyctubAZWa0ByAdiU94nNeuVUCiGWD107NscAp10MI5rmbYROacaYzkRkPSOpR5TwboSVv3JfN+L36i8sp4eGVe6XE3cIDV2PpeABPMRhoW2/JYlBZn4JFowI8eNvlCJhWbhwywSJLiMtIHKOXbJC0JPnN/v7sQw1c7Ru8nh4c9j7ljTuTGR4RDDWfPjw1+LfFhotMQ/2tXJV2frngBfF5fy83qdipY06f37IzP3zFiPJP7FgWPTPxrsaY9Q3fcLr1pEI3ieydGkkYFOMxUtlCVRdTycJXKSSdHmgQOXnzWqTVrk4LVrqq5sMC8LArSMGLuktNPmA==', 'SigningCertURL': 'https://sns.us-east-1.amazonaws.com/SimpleNotificationService-9c6465fa7f48f5cacd23014631ec1136.pem', 'UnsubscribeURL': 'https://sns.us-east-1.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-east-1:509399626395:photoUploadAlert:7974f0fd-5738-4098-ab03-b777b596f848'}
Notification Response: <Response status_code=200, "text/html; charset=utf-8">
S3 Object Key: 1kb.png_172
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T18:16:35.420Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '5PFH3WBAMD3T8GAX', 'x-amz-id-2': '83DX/3Un7HhVTUNG2gaW3Z9iUSaoTcl9YVwRcVGQ7c63kpaAxwt90VRldTqgK/pUpZR5uIjjGuGNcteRVeF17ZJDeTHWA7Y/'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_174', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '00677435035D044826'}}}]}
S3 Object Key: 1kb.png_174
Classification Result: {'photo_id': 174, 'label': 'Salad', 'confidence': 0.6666268805279578}
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T18:16:40.967Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '0PHTZ6M1PK3QVBCR', 'x-amz-id-2': 'Jc8T70VjvyBQzWo5pH6cRQEwLiHNh8f2wiLa53ndcI65Rtu8UDisJk334a4g4s/nage1cHNHYepq5Ne0OIORx+enTt+Fd6IU'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_175', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067743508ED344086'}}}]}
S3 Object Key: 1kb.png_175
Classification Result: {'photo_id': 175, 'label': 'Pizza', 'confidence': 0.9289324219177928}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T18:25:21.737Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '7QTPY3VKPHDBVW3T', 'x-amz-id-2': 'Dw/TChi7QqSZ0BwQdVrBUbQwDtLMCAbLNJ+Etz60x0/Xh/hHyu1gW7U8lI+qqeekxV74Bx35/fCE4xbG63zCFcpq93sNSNyp'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_185', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '0067743711B0C77D82'}}}]}
S3 Object Key: 1kb.png_185
Classification Result: {'photo_id': 185, 'label': 'Pasta', 'confidence': 0.9183904474724994}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T18:28:19.014Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'FB1J62RG6YKH43XQ', 'x-amz-id-2': 'CJphQZSv9vjm2cUQ3ookUjh1lAM7glS6K7U0dbxu1jTQrn1uDI9j/PWurjNOfLiJ1K24ojUgs/tFsKDNrp2fNu2AdSPB9ONK'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_189', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '00677437C2F8078756'}}}]}
S3 Object Key: 1kb.png_189
Classification Result: {'photo_id': 189, 'label': 'Pasta', 'confidence': 0.6399592514663918}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
CreatePhotoView.check_sns_subscription() takes 2 positional arguments but 3 were given
Internal Server Error: /photos/create/
"POST /photos/create/ HTTP/1.1" 500 113
CreatePhotoView.check_sns_subscription() takes 2 positional arguments but 3 were given
Internal Server Error: /photos/create/
"POST /photos/create/ HTTP/1.1" 500 113
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
You must specify a region.
Internal Server Error: /photos/create/
"POST /photos/create/ HTTP/1.1" 500 53
You must specify a region.
Internal Server Error: /photos/create/
"POST /photos/create/ HTTP/1.1" 500 53
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
SNS subscription not found
Internal Server Error: /photos/create/
"POST /photos/create/ HTTP/1.1" 500 53
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
SNS subscription not found
Internal Server Error: /photos/create/
"POST /photos/create/ HTTP/1.1" 500 53
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
SNS subscription not found
Internal Server Error: /photos/create/
"POST /photos/create/ HTTP/1.1" 500 53
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
SNS subscription not found
Internal Server Error: /photos/create/
"POST /photos/create/ HTTP/1.1" 500 53
Subscribing to SNS topic: arn:aws:sns:us-east-1:509399626395:photoUploadAlert with endpoint: https://fa11-76-126-145-131.ngrok-free.app/photos/notifications/
SNSNotificationHandlerView received POST Request
Subscription confirmed successfully
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T19:05:42.499Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'JFQT05ZBZFNW3GE0', 'x-amz-id-2': 'GZ3XhOEjpXYti4ASiB+KdVuCOFfd6E4UX1Hp+YMk8rgTbdyqxMZHmBtx7Ydd+3Ml5/NinQ/4JwsrWDSCU1aOwxkKpfQ9Ve1V'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_208', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '00677440866E18B26E'}}}]}
S3 Object Key: 1kb.png_208
Classification Result: {'photo_id': 208, 'label': 'Burger', 'confidence': 0.8445652128322653}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Retrieving photo metadata for photo ID: 11
Photo metadata retrieved: 11
Retrieving photo metadata for photo ID: 11
Photo metadata retrieved: 11
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T19:06:41.503Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': '2VTCYRS2MJ84YRMJ', 'x-amz-id-2': 'PcIc/QIsOb/Eu8cRwbRhHKyGtxUAkFvNe5WnVu4EwkB7R5rWXKml0KbflZVJTeDSBbcU3uy/0hqLCrgI4wlzvPXnGmQ7gvaS'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_210', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '00677440C1715B58AE'}}}]}
S3 Object Key: 1kb.png_210
Classification Result: {'photo_id': 210, 'label': 'Sushi', 'confidence': 0.6443765894844299}
Retrieving photo metadata for photo ID: 11
Photo metadata retrieved: 11
Retrieving photo metadata for photo ID: 11
Photo metadata retrieved: 11
Retrieving photo metadata for photo ID: 1
Photo metadata retrieved: 1
Retrieving photo metadata for photo ID: 12
Photo metadata retrieved: 12
Retrieving photo metadata for photo ID: 11
Photo metadata retrieved: 11
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
SNSNotificationHandlerView received POST Request
Received Notification. Parsed SNS message: {'Records': [{'eventVersion': '2.1', 'eventSource': 'aws:s3', 'awsRegion': 'us-east-1', 'eventTime': '2024-12-31T19:14:43.595Z', 'eventName': 'ObjectCreated:Put', 'userIdentity': {'principalId': 'AWS:AIDAXNGUVOKNVXMIRWK5E'}, 'requestParameters': {'sourceIPAddress': '76.126.145.131'}, 'responseElements': {'x-amz-request-id': 'T9W71YVYY75AQ4TY', 'x-amz-id-2': '+H32BvX0djFd4IxD3InZvomyH7u7QBYNl5wBg0hZkmmZwFHvSX7icke/xL1EHdQAzJpMm49vAd37of/eurUwfYJAgz4r6gHl'}, 's3': {'s3SchemaVersion': '1.0', 'configurationId': 'uploadStatus', 'bucket': {'name': 'foodphotobucket', 'ownerIdentity': {'principalId': 'A38AYN0NISFBFB'}, 'arn': 'arn:aws:s3:::foodphotobucket'}, 'object': {'key': '1kb.png_212', 'size': 1049, 'eTag': 'b3d740c2f83f7ee120fd16eaed266b43', 'sequencer': '00677442A38F3EAA53'}}}]}
S3 Object Key: 1kb.png_212
Classification Result: {'photo_id': 212, 'label': 'Burger', 'confidence': 0.6052197272912547}
Retrieving photo metadata for photo ID: 11
Photo metadata retrieved: 11
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Injecting test data: {'filename': 'test_image.jpg', 'file_size': 1024}
Test data injected successfully: {'filename': 'test_image.jpg', 'file_size': 1024}
Retrieving photo metadata for photo ID: 11
Photo metadata retrieved: {'id': 11, 'filename': 'dog', 'file_size': 12, 'upload_time': '2024-12-27T21:25:30.953806Z', 'food_name': None}
Retrieving photo metadata for photo ID: 13
Photo metadata retrieved: {'id': 13, 'filename': 'test_image.jpg', 'file_size': 1024, 'upload_time': '2024-12-27T22:05:52.456668Z', 'food_name': None}
Retrieving photo metadata for photo ID: 14
Photo metadata retrieved: {'id': 14, 'filename': '1kb.png', 'file_size': 1049, 'upload_time': '2024-12-28T01:47:33.347957Z', 'food_name': None}
Retrieving photo metadata for photo ID: 100
Photo metadata retrieved: {'id': 100, 'filename': 'test_image.jpg', 'file_size': 1024, 'upload_time': '2024-12-29T21:42:31.942556Z', 'food_name': None}
Retrieving photo metadata for photo ID: 200
Photo metadata retrieved: {'id': 200, 'filename': 'test_image.jpg', 'file_size': 1024, 'upload_time': '2024-12-31T18:51:55.966957Z', 'food_name': None}
Retrieving photo metadata for photo ID: 200
Photo metadata retrieved: {'id': 200, 'filename': 'test_image.jpg', 'file_size': 1024, 'upload_time': '2024-12-31T18:51:55.966957Z', 'food_name': None}
Retrieving photo metadata for photo ID: 12321
Photo not found with ID: 12321
Retrieving photo metadata for photo ID: 500
Photo not found with ID: 500
Retrieving photo metadata for photo ID: 40
Photo metadata retrieved: {'id': 40, 'filename': '1kb.png', 'file_size': 1049, 'upload_time': '2024-12-29T18:08:52.619673Z', 'food_name': None}
Retrieving photo metadata for photo ID: 250
Photo not found with ID: 250
Retrieving photo metadata for photo ID: 250
Photo not found with ID: 250
Retrieving photo metadata for photo ID: 230
Photo not found with ID: 230
Retrieving photo metadata for photo ID: 230
Photo not found with ID: 230
Retrieving photo metadata for photo ID: 220
Photo not found with ID: 220
Retrieving photo metadata for photo ID: 210
Photo metadata retrieved: {'id': 210, 'filename': '1kb.png', 'file_size': 1049, 'upload_time': '2024-12-31T19:06:40.503874Z', 'food_name': None}
